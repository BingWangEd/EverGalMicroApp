{"version":3,"sources":["index.js","Alt.js","Alternative.js","Applicative.js","Apply.js","function.js","Functor.js","Array.js","Chain.js","NonEmptyArray.js","internal.js","Option.js","Separated.js","Ord.js","Eq.js","ReadonlyNonEmptyArray.js","Semigroup.js","ReadonlyArray.js","number.js","Bounded.js","Field.js","Show.js","Monoid.js","Bifunctor.js","boolean.js","BooleanAlgebra.js","BoundedDistributiveLattice.js","DistributiveLattice.js","BoundedJoinSemilattice.js","BoundedLattice.js","BoundedMeetSemilattice.js","Category.js","ChainRec.js","Choice.js","Comonad.js","Compactable.js","Console.js","Const.js","Contravariant.js","Date.js","Either.js","EitherT.js","Extend.js","Filterable.js","FilterableWithIndex.js","Foldable.js","FoldableWithIndex.js","FromEither.js","FromIO.js","FromTask.js","FunctorWithIndex.js","Group.js","HeytingAlgebra.js","HKT/index.js","Identity.js","Invariant.js","IO.js","IOEither.js","IORef.js","JoinSemilattice.js","Json.js","Lattice.js","Magma.js","Map.js","ReadonlyMap.js","MeetSemilattice.js","Monad.js","MonadIO.js","MonadTask.js","MonadThrow.js","OptionT.js","Ordering.js","pipeable.js","Pointed.js","Profunctor.js","Random.js","Reader.js","ReaderEither.js","ReaderT.js","ReaderTask.js","Task.js","ReaderTaskEither.js","TaskEither.js","ReadonlyRecord.js","ReadonlySet.js","ReadonlyTuple.js","Record.js","Ring.js","Semigroupoid.js","Semiring.js","Set.js","State.js","StateReaderTaskEither.js","StateT.js","Store.js","string.js","Strong.js","struct.js","TaskOption.js","TaskThese.js","These.js","TheseT.js","Traced.js","Traversable.js","TraversableWithIndex.js","Tree.js","Tuple.js","Unfoldable.js","ValidationT.js","Witherable.js","Writer.js","WriterT.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,ACHA,AJYA;AGRA,ACHA,AJYA;AGRA,ACHA,AJYA;AGRA,ACHA,ACHA,ALeA;AGRA,ACHA,ACHA,ALeA;AGRA,ACHA,ACHA,ALeA;AGRA,ACHA,AENA,ADGA,ALeA;AGRA,ACHA,AENA,ADGA,ALeA;AGRA,ACHA,AENA,ADGA,ALeA;AGRA,ACHA,AGTA,ADGA,ADGA,ALeA;AGRA,ACHA,AGTA,ADGA,ADGA,ALeA;AGRA,ACHA,AGTA,ADGA,ADGA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,ADGA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,ADGA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,ADGA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,AGTA,AJYA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,AGTA,AJYA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,AGTA,AJYA,ALeA;AGRA,ACHA,AGTA,ACHA,AFMA,AGTA,AJYA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AJYA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AJYA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AENA,ANkBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AENA,ANkBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AENA,ANkBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AENA,ACHA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AENA,ACHA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ACHA,AFMA,AGTA,AENA,ACHA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ADGA,AGTA,AENA,AENA,ADGA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ADGA,AGTA,AENA,AENA,ADGA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,ADGA,AGTA,AENA,AENA,ADGA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,ADGA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,ADGA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,ADGA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AENA,AHSA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AENA,AHSA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AENA,AHSA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AENA,ACHA,AJYA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AENA,ACHA,AJYA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AENA,ACHA,AJYA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA;APsBA,ACHA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA;ANmBA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AOrBA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AYpCA,ALeA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AYpCA,ALeA,ARwBA,AGTA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AYpCA,ALeA,ALeA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AXiCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AXiCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AU9BA,AQxBA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AXiCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,APqBA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AXiCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AXiCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AXiCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AgBhDA,AJYA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AgBhDA,AJYA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AgBhDA,AJYA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AhBgDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AYpCA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,ALeA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AZoCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AZoCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AZoCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,ACHA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,ACHA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,ACHA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AENA,ADGA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AENA,ADGA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AENA,ADGA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AGTA,AFMA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ANkBA,AOrBA,AGTA,AFMA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AGTA,AFMA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AIZA,AHSA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AIZA,AHSA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AIZA,AHSA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AKfA,AJYA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AKfA,AJYA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AKfA,AJYA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AMlBA,ALeA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AMlBA,ALeA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AMlBA,ALeA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,ACHA,AMlBA,ACHA,ANkBA,AbuCA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AnByDA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AnByDA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,ACHA,ApB4DA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,ACHA,ApB4DA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,ACHA,ApB4DA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AENA,ArB+DA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AENA,ArB+DA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AENA,ArB+DA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AENA,ACHA,AtBkEA,AMlBA,AENA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AENA,ACHA,AtBkEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AOrBA,ACHA,AENA,ACHA,AtBkEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AvBqEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AvBqEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AvBqEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,ACHA,AxBwEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,ACHA,AxBwEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,ACHA,AxBwEA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AENA,AzB2EA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AENA,AzB2EA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AENA,AzB2EA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AENA,ACHA,A1B8EA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AENA,ACHA,A1B8EA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AQxBA,AENA,ACHA,ACHA,AENA,ACHA,A1B8EA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,AQxBA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,A4BpFA,ApB4DA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,A4BpFA,ApB4DA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,A4BpFA,ApB4DA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,ArB+DA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,ArB+DA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,ACHA,ACHA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,ArB+DA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,ACHA,AtBkEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,ACHA,AtBkEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,ACHA,AtBkEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,AvBqEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,AvBqEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,AvBqEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,AxBwEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,AxBwEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,AxBwEA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AzB2EA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AzB2EA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AzB2EA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,A1B8EA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,A1B8EA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,AkBtDA,AU9BA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,A1B8EA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A4BpFA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,A3BiFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A4BpFA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,A3BiFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A4BpFA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,A3BiFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AJYA,AS3BA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A4BpFA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,A5BoFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A4BpFA,AENA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,A5BoFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,A5BoFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,A7BuFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,A7BuFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,A7BuFA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;Ad2CA,AGTA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,A9B0FA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,A9B0FA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,A9B0FA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,A/B6FA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,A/B6FA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,A/B6FA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,ACHA,AjCmGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,ACHA,AjCmGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AIZA,ACHA,AjCmGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AMlBA,AFMA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AMlBA,AFMA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,ACHA,ACHA,ACHA,AMlBA,AFMA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AENA,ACHA,AMlBA,ACHA,AHSA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AENA,ACHA,AMlBA,ACHA,AHSA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA,AkBtDA;AXkCA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AENA,ACHA,AMlBA,ACHA,AHSA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AhCgGA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AKfA,ArC+GA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AKfA,ArC+GA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AKfA,ArC+GA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AKfA,ACHA,AtCkHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AKfA,ACHA,AtCkHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AGTA,AMlBA,ACHA,ACHA,AJYA,AKfA,ACHA,AtCkHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AKfA,AGTA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,ACHA,AvCqHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,ACHA,AvCqHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,ACHA,AvCqHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A6BvFA,AENA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,AENA,AxCwHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,AENA,AxCwHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,AENA,AxCwHA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,AENA,ACHA,AzC2HA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,AENA,ACHA,AzC2HA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AKfA,ACHA,AENA,ACHA,AzC2HA,AbuCA,AENA,AENA,AIZA,AFMA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AENA,ACHA,AzC2HA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AENA,ACHA,AzC2HA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,ACHA,ACHA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AENA,ACHA,AzC2HA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AENA,ACHA,AENA,A3CiIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,A3CiIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,A3CiIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,ACHA,A5CoIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,ACHA,A5CoIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,ACHA,A5CoIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AENA,A7CuIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AENA,A7CuIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AENA,ACHA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AENA,A7CuIA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AGTA,A9C0IA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AGTA,A9C0IA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AGTA,A9C0IA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AIZA,A/C6IA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AIZA,A/C6IA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AENA,AIZA,A/C6IA,AbuCA,AENA,AENA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A+B7FA,AENA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,AiCnGA,AS3BA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,AIZA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AtDkKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AtDkKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AtDkKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA;AOpBA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AtDkKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AtDkKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AtDkKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AENA,AxDwKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AENA,AxDwKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AENA,AxDwKA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AGTA,AzD2KA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AGTA,AzD2KA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,ACHA,AJYA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AGTA,AzD2KA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,AHSA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,A1D8KA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,AHSA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,A1D8KA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,AHSA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,A1D8KA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,AHSA,AMlBA,AGTA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,A3DiLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,A3DiLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,A3BiFA,A0C9HA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,A3DiLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,A5DoLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,A5DoLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,A5DoLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,A7DuLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,A7DuLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,A7DuLA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,A9D0LA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,A9D0LA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,A9D0LA,A+C7IA,AjDmJA,ACHA,AQxBA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,A9D0LA,A+C7IA,AjDmJA,ACHA,AgEhMA,AxDwKA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,A9D0LA,A+C7IA,AjDmJA,ACHA,AgEhMA,AxDwKA,AnByDA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,A9D0LA,A+C7IA,AjDmJA,ACHA,AgEhMA,A3EiOA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,ACHA,AgEhMA,A3EiOA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,ACHA,AgEhMA,A3EiOA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,ACHA,AgEhMA,A3EiOA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,ACHA,AgEhMA,AENA,A7EuOA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,ACHA,AgEhMA,AENA,A7EuOA,ALeA,AwExNA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,ACHA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AnEyMA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AnEyMA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,ACHA,Ae7CA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AnEyMA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ApE4MA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ApE4MA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ApE4MA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ArE+MA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ArE+MA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ArE+MA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AgEhMA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AwExNA,ARwBA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AwExNA,ARwBA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AwExNA,ARwBA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,AT2BA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,AT2BA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,AT2BA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,AV8BA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,AV8BA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,AV8BA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,AXiCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,AXiCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,AXiCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,AZoCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,ACHA,ACHA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,AZoCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,AZoCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AIZA,ACHA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,AbuCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,AbuCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,AbuCA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,A7EuOA,AmEzMA;AjEoMA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,A7EuOA,AmEzMA,AuBrEA;AxFyQA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,A7EuOA,AmEzMA,AuBrEA;AxFyQA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,A7EuOA,AmEzMA,AuBrEA;AxFyQA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,A7EuOA,AmEzMA,AuBrEA;AxFyQA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,A7EuOA,AmEzMA,AuBrEA;AxFyQA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,A7EuOA,AmEzMA,AuBrEA;AxFyQA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,A7EuOA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,A7EuOA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,A7EuOA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,A7FuRA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,A7FuRA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,A7FuRA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,A9F0RA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,A9F0RA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,A9F0RA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,A/F6RA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,A/F6RA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,A/F6RA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A0D9KA,AKfA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,AhGgSA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,AhGgSA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,AyE3NA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,AhGgSA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AjGmSA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AjGmSA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AjGmSA,AmEzMA,AuBrEA,AENA;A1F+QA,A8B1FA,AGTA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AlGsSA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AlGsSA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AlGsSA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AnGySA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,AENA,AhBgDA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AnGySA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,ACHA,AnGySA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ApG4SA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ApG4SA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ApG4SA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ArG+SA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ArG+SA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ArG+SA,AmEzMA,AuBrEA,AENA;A1F+QA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AtGkTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AtGkTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,AtGkTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AvGqTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AvGqTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AvGqTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,ACHA,AxGwTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,ACHA,AxGwTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,ACHA,AxGwTA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,AzG2TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,AzG2TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,AzG2TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,A2DjLA,AzD2KA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,ACHA,AvEqNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,ACHA,AENA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,ACHA,ACHA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,A1G8TA,AmEzMA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AENA,AENA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AzC2HA,AbuCA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AENA,A+D7LA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AvCqHA,AuBrEA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA,AhBgDA;AxFyQA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA,ACHA;AxGyTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AENA,Ad0CA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,ACHA,AGTA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,ACHA,AIZA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AtEkNA,A0E9NA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AgBhDA,ACHA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AHSA,AS3BA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA,AIZA;AvGsTA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,ACHA,ACHA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,ACHA,ACHA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AiEnMA,ACHA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA,ACHA;AnG0SA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AIZA,AENA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,ACHA,AENA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,ACHA,ACHA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AZoCA,AENA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AENA,AENA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AGTA,AMlBA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA,AKfA;AlGuSA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AMlBA,AtDkKA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA,AENA;A7FwRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AkEtMA,AIZA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA,AgBhDA;A3FkRA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,AiBnDA,AhDgJA,AENA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A+C7IA,AjDmJA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AFMA,AoE5MA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AkEtMA,AS3BA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,A2EjOA,AV8BA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,A7BuFA,AsElNA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AyC3HA,AhEgMA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA,AiEnMA;A3EkOA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AiCnGA,AvBqEA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AV+BA,AU9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n/**\n * @since 2.0.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.magma = exports.lattice = exports.json = exports.joinSemilattice = exports.ioRef = exports.ioEither = exports.io = exports.invariant = exports.identity = exports.hkt = exports.heytingAlgebra = exports.group = exports.functorWithIndex = exports.functor = exports.function = exports.fromTask = exports.fromIO = exports.fromEither = exports.foldableWithIndex = exports.foldable = exports.filterableWithIndex = exports.filterable = exports.field = exports.extend = exports.eitherT = exports.either = exports.distributiveLattice = exports.date = exports.contravariant = exports.const = exports.console = exports.compactable = exports.comonad = exports.choice = exports.chainRec = exports.chain = exports.category = exports.boundedMeetSemilattice = exports.boundedLattice = exports.boundedJoinSemilattice = exports.boundedDistributiveLattice = exports.bounded = exports.booleanAlgebra = exports.boolean = exports.bifunctor = exports.array = exports.apply = exports.applicative = exports.alternative = exports.alt = void 0;\nexports.theseT = exports.these = exports.taskThese = exports.taskOption = exports.taskEither = exports.task = exports.strong = exports.string = exports.store = exports.stateT = exports.stateReaderTaskEither = exports.state = exports.show = exports.eq = exports.set = exports.separated = exports.semiring = exports.semigroupoid = exports.semigroup = exports.ring = exports.record = exports.readerTask = exports.readonlyTuple = exports.readonlySet = exports.readonlyRecord = exports.readonlyNonEmptyArray = exports.readonlyMap = exports.readonlyArray = exports.readerTaskEither = exports.readerT = exports.readerEither = exports.reader = exports.random = exports.profunctor = exports.pointed = exports.pipeable = exports.ordering = exports.ord = exports.optionT = exports.option = exports.struct = exports.number = exports.nonEmptyArray = exports.monoid = exports.monadThrow = exports.monadTask = exports.monadIO = exports.monad = exports.meetSemilattice = exports.map = void 0;\nexports.writerT = exports.writer = exports.witherable = exports.validationT = exports.unfoldable = exports.tuple = exports.tree = exports.traversableWithIndex = exports.traversable = exports.traced = void 0;\nvar alt = __importStar(require(\"./Alt\"));\nexports.alt = alt;\nvar alternative = __importStar(require(\"./Alternative\"));\nexports.alternative = alternative;\nvar applicative = __importStar(require(\"./Applicative\"));\nexports.applicative = applicative;\nvar apply = __importStar(require(\"./Apply\"));\nexports.apply = apply;\nvar array = __importStar(require(\"./Array\"));\nexports.array = array;\nvar bifunctor = __importStar(require(\"./Bifunctor\"));\nexports.bifunctor = bifunctor;\nvar boolean = __importStar(require(\"./boolean\"));\nexports.boolean = boolean;\nvar booleanAlgebra = __importStar(require(\"./BooleanAlgebra\"));\nexports.booleanAlgebra = booleanAlgebra;\nvar bounded = __importStar(require(\"./Bounded\"));\nexports.bounded = bounded;\nvar boundedDistributiveLattice = __importStar(require(\"./BoundedDistributiveLattice\"));\nexports.boundedDistributiveLattice = boundedDistributiveLattice;\nvar boundedJoinSemilattice = __importStar(require(\"./BoundedJoinSemilattice\"));\nexports.boundedJoinSemilattice = boundedJoinSemilattice;\nvar boundedLattice = __importStar(require(\"./BoundedLattice\"));\nexports.boundedLattice = boundedLattice;\nvar boundedMeetSemilattice = __importStar(require(\"./BoundedMeetSemilattice\"));\nexports.boundedMeetSemilattice = boundedMeetSemilattice;\nvar category = __importStar(require(\"./Category\"));\nexports.category = category;\nvar chain = __importStar(require(\"./Chain\"));\nexports.chain = chain;\nvar chainRec = __importStar(require(\"./ChainRec\"));\nexports.chainRec = chainRec;\nvar choice = __importStar(require(\"./Choice\"));\nexports.choice = choice;\nvar comonad = __importStar(require(\"./Comonad\"));\nexports.comonad = comonad;\nvar compactable = __importStar(require(\"./Compactable\"));\nexports.compactable = compactable;\nvar console = __importStar(require(\"./Console\"));\nexports.console = console;\nvar const_ = __importStar(require(\"./Const\"));\nexports.const = const_;\nvar contravariant = __importStar(require(\"./Contravariant\"));\nexports.contravariant = contravariant;\nvar date = __importStar(require(\"./Date\"));\nexports.date = date;\nvar distributiveLattice = __importStar(require(\"./DistributiveLattice\"));\nexports.distributiveLattice = distributiveLattice;\nvar either = __importStar(require(\"./Either\"));\nexports.either = either;\nvar eitherT = __importStar(require(\"./EitherT\"));\nexports.eitherT = eitherT;\nvar eq = __importStar(require(\"./Eq\"));\nexports.eq = eq;\nvar extend = __importStar(require(\"./Extend\"));\nexports.extend = extend;\nvar field = __importStar(require(\"./Field\"));\nexports.field = field;\nvar filterable = __importStar(require(\"./Filterable\"));\nexports.filterable = filterable;\nvar filterableWithIndex = __importStar(require(\"./FilterableWithIndex\"));\nexports.filterableWithIndex = filterableWithIndex;\nvar foldable = __importStar(require(\"./Foldable\"));\nexports.foldable = foldable;\nvar foldableWithIndex = __importStar(require(\"./FoldableWithIndex\"));\nexports.foldableWithIndex = foldableWithIndex;\nvar fromEither = __importStar(require(\"./FromEither\"));\nexports.fromEither = fromEither;\nvar fromIO = __importStar(require(\"./FromIO\"));\nexports.fromIO = fromIO;\nvar fromTask = __importStar(require(\"./FromTask\"));\nexports.fromTask = fromTask;\nvar function_ = __importStar(require(\"./function\"));\nexports.function = function_;\nvar functor = __importStar(require(\"./Functor\"));\nexports.functor = functor;\nvar functorWithIndex = __importStar(require(\"./FunctorWithIndex\"));\nexports.functorWithIndex = functorWithIndex;\nvar group = __importStar(require(\"./Group\"));\nexports.group = group;\nvar heytingAlgebra = __importStar(require(\"./HeytingAlgebra\"));\nexports.heytingAlgebra = heytingAlgebra;\nvar hkt = __importStar(require(\"./HKT\"));\nexports.hkt = hkt;\nvar identity = __importStar(require(\"./Identity\"));\nexports.identity = identity;\nvar invariant = __importStar(require(\"./Invariant\"));\nexports.invariant = invariant;\nvar io = __importStar(require(\"./IO\"));\nexports.io = io;\nvar ioEither = __importStar(require(\"./IOEither\"));\nexports.ioEither = ioEither;\nvar ioRef = __importStar(require(\"./IORef\"));\nexports.ioRef = ioRef;\nvar joinSemilattice = __importStar(require(\"./JoinSemilattice\"));\nexports.joinSemilattice = joinSemilattice;\nvar json = __importStar(require(\"./Json\"));\nexports.json = json;\nvar lattice = __importStar(require(\"./Lattice\"));\nexports.lattice = lattice;\nvar magma = __importStar(require(\"./Magma\"));\nexports.magma = magma;\nvar map = __importStar(require(\"./Map\"));\nexports.map = map;\nvar meetSemilattice = __importStar(require(\"./MeetSemilattice\"));\nexports.meetSemilattice = meetSemilattice;\nvar monad = __importStar(require(\"./Monad\"));\nexports.monad = monad;\nvar monadIO = __importStar(require(\"./MonadIO\"));\nexports.monadIO = monadIO;\nvar monadTask = __importStar(require(\"./MonadTask\"));\nexports.monadTask = monadTask;\nvar monadThrow = __importStar(require(\"./MonadThrow\"));\nexports.monadThrow = monadThrow;\nvar monoid = __importStar(require(\"./Monoid\"));\nexports.monoid = monoid;\nvar nonEmptyArray = __importStar(require(\"./NonEmptyArray\"));\nexports.nonEmptyArray = nonEmptyArray;\nvar number = __importStar(require(\"./number\"));\nexports.number = number;\nvar option = __importStar(require(\"./Option\"));\nexports.option = option;\nvar optionT = __importStar(require(\"./OptionT\"));\nexports.optionT = optionT;\nvar ord = __importStar(require(\"./Ord\"));\nexports.ord = ord;\nvar ordering = __importStar(require(\"./Ordering\"));\nexports.ordering = ordering;\nvar pipeable = __importStar(require(\"./pipeable\"));\nexports.pipeable = pipeable;\nvar pointed = __importStar(require(\"./Pointed\"));\nexports.pointed = pointed;\nvar profunctor = __importStar(require(\"./Profunctor\"));\nexports.profunctor = profunctor;\nvar random = __importStar(require(\"./Random\"));\nexports.random = random;\nvar reader = __importStar(require(\"./Reader\"));\nexports.reader = reader;\nvar readerEither = __importStar(require(\"./ReaderEither\"));\nexports.readerEither = readerEither;\nvar readerT = __importStar(require(\"./ReaderT\"));\nexports.readerT = readerT;\nvar readerTask = __importStar(require(\"./ReaderTask\"));\nexports.readerTask = readerTask;\nvar readerTaskEither = __importStar(require(\"./ReaderTaskEither\"));\nexports.readerTaskEither = readerTaskEither;\nvar readonlyArray = __importStar(require(\"./ReadonlyArray\"));\nexports.readonlyArray = readonlyArray;\nvar readonlyMap = __importStar(require(\"./ReadonlyMap\"));\nexports.readonlyMap = readonlyMap;\nvar readonlyNonEmptyArray = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nexports.readonlyNonEmptyArray = readonlyNonEmptyArray;\nvar readonlyRecord = __importStar(require(\"./ReadonlyRecord\"));\nexports.readonlyRecord = readonlyRecord;\nvar readonlySet = __importStar(require(\"./ReadonlySet\"));\nexports.readonlySet = readonlySet;\nvar readonlyTuple = __importStar(require(\"./ReadonlyTuple\"));\nexports.readonlyTuple = readonlyTuple;\nvar record = __importStar(require(\"./Record\"));\nexports.record = record;\nvar ring = __importStar(require(\"./Ring\"));\nexports.ring = ring;\nvar semigroup = __importStar(require(\"./Semigroup\"));\nexports.semigroup = semigroup;\nvar semigroupoid = __importStar(require(\"./Semigroupoid\"));\nexports.semigroupoid = semigroupoid;\nvar semiring = __importStar(require(\"./Semiring\"));\nexports.semiring = semiring;\nvar separated = __importStar(require(\"./Separated\"));\nexports.separated = separated;\nvar set = __importStar(require(\"./Set\"));\nexports.set = set;\nvar show = __importStar(require(\"./Show\"));\nexports.show = show;\nvar state = __importStar(require(\"./State\"));\nexports.state = state;\nvar stateReaderTaskEither = __importStar(require(\"./StateReaderTaskEither\"));\nexports.stateReaderTaskEither = stateReaderTaskEither;\nvar stateT = __importStar(require(\"./StateT\"));\nexports.stateT = stateT;\nvar store = __importStar(require(\"./Store\"));\nexports.store = store;\nvar string = __importStar(require(\"./string\"));\nexports.string = string;\nvar strong = __importStar(require(\"./Strong\"));\nexports.strong = strong;\nvar struct = __importStar(require(\"./struct\"));\nexports.struct = struct;\nvar task = __importStar(require(\"./Task\"));\nexports.task = task;\nvar taskEither = __importStar(require(\"./TaskEither\"));\nexports.taskEither = taskEither;\nvar taskOption = __importStar(require(\"./TaskOption\"));\nexports.taskOption = taskOption;\nvar taskThese = __importStar(require(\"./TaskThese\"));\nexports.taskThese = taskThese;\nvar these = __importStar(require(\"./These\"));\nexports.these = these;\nvar theseT = __importStar(require(\"./TheseT\"));\nexports.theseT = theseT;\nvar traced = __importStar(require(\"./Traced\"));\nexports.traced = traced;\nvar traversable = __importStar(require(\"./Traversable\"));\nexports.traversable = traversable;\nvar traversableWithIndex = __importStar(require(\"./TraversableWithIndex\"));\nexports.traversableWithIndex = traversableWithIndex;\nvar tree = __importStar(require(\"./Tree\"));\nexports.tree = tree;\nvar tuple = __importStar(require(\"./Tuple\"));\nexports.tuple = tuple;\nvar unfoldable = __importStar(require(\"./Unfoldable\"));\nexports.unfoldable = unfoldable;\nvar validationT = __importStar(require(\"./ValidationT\"));\nexports.validationT = validationT;\nvar witherable = __importStar(require(\"./Witherable\"));\nexports.witherable = witherable;\nvar writer = __importStar(require(\"./Writer\"));\nexports.writer = writer;\nvar writerT = __importStar(require(\"./WriterT\"));\nexports.writerT = writerT;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = Apply_1.getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var _ap = Apply_1.ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return function_1.pipe(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nfunction ap(F, G) {\n    return function (fa) { return function (fab) {\n        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n    }; };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n    }; };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) { return function (fa) {\n        return F.ap(F.map(fa, function (a) { return function (b) {\n            var _a;\n            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n        }; }), fb);\n    }; };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!tupleConstructors.hasOwnProperty(len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.not = exports.unsafeCoerce = exports.identity = exports.getEndomorphismMonoid = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate, getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n/**\n * Endomorphism form a monoid where the `empty` value is the identity function.\n *\n * @category instances\n * @since 2.10.0\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (x, y) { return function (a) { return y(x(a)); }; },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        case 10:\n            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n        case 11:\n            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n        case 12:\n            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n        case 13:\n            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n        case 14:\n            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n        case 15:\n            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n        case 16:\n            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n        case 17:\n            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n        case 18:\n            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n        case 19:\n            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n        case 20:\n            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n    }\n    return;\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;\nexports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = void 0;\nexports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar NEA = __importStar(require(\"./NonEmptyArray\"));\nvar O = __importStar(require(\"./Option\"));\nvar RA = __importStar(require(\"./ReadonlyArray\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = NEA.prepend;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = NEA.append;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(n, f)); };\nexports.makeBy = makeBy;\n/**\n * Create an `Array` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(end - start + 1, function (i) { return start + i; }) : [start];\n};\nexports.range = range;\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchLeft = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n}; };\nexports.matchLeft = matchLeft;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchRight = function (onEmpty, onNonEmpty) { return function (as) {\n    return exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n}; };\nexports.matchRight = matchRight;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.0.0\n */\nexports.isEmpty = RA.isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category guards\n * @since 2.0.0\n */\nexports.isNonEmpty = NEA.isNonEmpty;\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\nexports.isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexports.lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar tail = function (as) { return (exports.isNonEmpty(as) ? O.some(NEA.tail(as)) : O.none); };\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nvar init = function (as) { return (exports.isNonEmpty(as) ? O.some(NEA.init(as)) : O.none); };\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeLeft = function (n) { return function (as) { return (exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n)); }; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar dropLeftWhile = function (predicate) { return function (as) {\n    return as.slice(spanLeftIndex(as, predicate));\n}; };\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexports.findIndex = RA.findIndex;\nfunction findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findFirstMap = RA.findFirstMap;\nfunction findLast(predicate) {\n    return RA.findLast(predicate);\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\nexports.findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar copy = function (as) { return as.slice(); };\nexports.copy = copy;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nvar updateAt = function (i, a) { return exports.modifyAt(i, function () { return a; }); };\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return (exports.isEmpty(as) ? [] : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.rotate = rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexports.elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : []); };\n};\nexports.chop = chop;\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nvar chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };\n};\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(NEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second)\n            ? unionE(first, second)\n            : exports.isNonEmpty(first)\n                ? exports.copy(first)\n                : exports.copy(second);\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = exports.elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = NEA.of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return []; };\nexports.zero = zero;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return exports.partitionMapWithIndex(function (_, a) { return f(a); }); };\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return fa.concat(that()); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Array';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RA.getShow;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: []\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getOrd = RA.getOrd;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexports.unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.every = RA.every;\n/**\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.array = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.groupSort = exports.group = exports.reverse = exports.concat = exports.unappend = exports.unprepend = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.makeBy = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.prepend = exports.isOutOfBound = exports.isNonEmpty = void 0;\nexports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.filter = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prepend = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prepend = prepend;\n/**\n * @internal\n */\nvar append = function (end) { return function (init) { return concat(init, [end]); }; };\nexports.append = append;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = exports.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    var xs = exports.fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @internal\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return exports.copy(as);\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * @internal\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return exports.copy;\n};\nexports.sortBy = sortBy;\n/**\n * @internal\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (first, second) { return uniqE(concat(first, second)); };\n};\nexports.union = union;\n/**\n * @internal\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return exports.copy(as);\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return concat(s, f);\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n/**\n * @internal\n */\nvar makeBy = function (n, f) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n};\nexports.makeBy = makeBy;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromArray = function (as) { return (exports.isNonEmpty(as) ? O.some(as) : O.none); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\nfunction concat(first, second) {\n    return first.concat(second);\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar reverse = function (as) { return __spreadArray([exports.last(as)], as.slice(0, -1).reverse()); };\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexports.groupSort = groupSort;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar sort = function (O) { return function (as) {\n    return as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.copy = exports.fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : exports.copy(as);\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = exports.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [exports.copy(as), []] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) {\n    return concat(as, that());\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (as) {\n    return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) {\n    return exports.chainWithIndex(function (_, a) { return f(a); });\n};\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return exports.mapWithIndex(function (_, a) { return f(a); }); };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @since 2.7.0\n */\nexports.extract = RNEA.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RNEA.getEq;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.head = RNEA.head;\n/**\n * @since 2.0.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.0.0\n */\nexports.last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.0.0\n */\nexports.min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexports.max = RNEA.max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\nfunction filter(predicate) {\n    // tslint:disable-next-line: deprecation\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterWithIndex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar snoc = function (init, end) { return function_1.pipe(init, exports.append(end)); };\nexports.snoc = snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.nonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.isLeft = exports.isSome = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFirstMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.throwError = exports.zero = exports.alt = exports.altW = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromEither = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = exports.isNone = exports.isSome = void 0;\nexports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.getRefinement = exports.exists = exports.elem = exports.MonadThrow = exports.Witherable = exports.Traversable = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Foldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getMonoid = exports.getLastMonoid = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\nexports.isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.none = { _tag: 'None' };\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\nfunction fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? exports.some(a) : exports.none); };\n}\nexports.fromPredicate = fromPredicate;\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction getLeft(ma) {\n    return ma._tag === 'Right' ? exports.none : exports.some(ma.left);\n}\nexports.getLeft = getLeft;\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction getRight(ma) {\n    return ma._tag === 'Left' ? exports.none : exports.some(ma.right);\n}\nexports.getRight = getRight;\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = getRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onNone, onSome) { return function (ma) {\n    return exports.isNone(ma) ? onNone() : onSome(ma.value);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onNone) { return function (ma) { return (exports.isNone(ma) ? onNone() : ma.value); }; };\nexports.getOrElseW = getOrElseW;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (a) { return (a == null ? exports.none : exports.some(a)); };\nexports.fromNullable = fromNullable;\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f) {\n    try {\n        return exports.some(f());\n    }\n    catch (e) {\n        return exports.none;\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); });\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (f) { return function_1.flow(f, exports.fromNullable); };\nexports.fromNullableK = fromNullableK;\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));\n}; };\nexports.chainNullableK = chainNullableK;\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toNullable = \n/*#__PURE__*/\nexports.match(function_1.constNull, function_1.identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexports.toUndefined = \n/*#__PURE__*/\nexports.match(function_1.constUndefined, function_1.identity);\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));\n}; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) {\n    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));\n}; };\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    return exports.isNone(ma) ? exports.none : f(ma.value);\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return exports.isNone(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.none; };\nexports.zero = zero;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nvar throwError = function () { return exports.none; };\nexports.throwError = throwError;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isNone(wa) ? exports.none : exports.some(f(wa));\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(b, fa.value);\n}; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? M.empty : f(fa.value);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isNone(fa) ? b : f(fa.value, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = exports.flatten;\nvar defaultSeparated = \n/*#__PURE__*/\nSeparated_1.separated(exports.none, exports.none);\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (ma) {\n    return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(getLeft(ma.value), getRight(ma.value));\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return (exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return exports.isNone(fa) ? exports.none : f(fa.value);\n}; };\nexports.filterMap = filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) { return function (fa) {\n    return Separated_1.separated(_filter(fa, function (a) { return !predicate(a); }), _filter(fa, predicate));\n}; };\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return function_1.flow(exports.map(f), exports.separate); };\nexports.partitionMap = partitionMap;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some)); }; }; };\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some)); }; };\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) { return function (f) { return function (fa) { return (exports.isNone(fa) ? F.of(exports.none) : f(fa.value)); }; }; };\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) { return function (f) { return function (fa) {\n    return exports.isNone(fa) ? F.of(defaultSeparated) : F.map(f(fa.value), function (e) { return Separated_1.separated(getLeft(e), getRight(e)); });\n}; }; };\nexports.wilt = wilt;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(S) {\n    return {\n        show: function (ma) { return (exports.isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(E) {\n    return {\n        equals: function (x, y) { return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value)); }\n    };\n}\nexports.getEq = getEq;\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getOrd(O) {\n    return {\n        equals: getEq(O).equals,\n        compare: function (x, y) { return (x === y ? 0 : exports.isSome(x) ? (exports.isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n    };\n}\nexports.getOrd = getOrd;\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getFirstMonoid() {\n    return {\n        concat: function (x, y) { return (exports.isNone(x) ? y : x); },\n        empty: exports.none\n    };\n}\nexports.getFirstMonoid = getFirstMonoid;\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getLastMonoid() {\n    return {\n        concat: function (x, y) { return (exports.isNone(y) ? x : y); },\n        empty: exports.none\n    };\n}\nexports.getLastMonoid = getLastMonoid;\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getMonoid(S) {\n    return {\n        concat: function (x, y) { return (exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value))); },\n        empty: exports.none\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#__PURE__*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * assert.strictEqual(elem(N.Eq)(1, some(1)), true)\n * assert.strictEqual(elem(N.Eq)(2, some(1)), false)\n * assert.strictEqual(elem(N.Eq)(1, none), false)\n *\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (exports.isNone(ma) ? false : E.equals(a, ma.value)); };\n}\nexports.elem = elem;\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (exports.isNone(ma) ? false : predicate(ma.value)); };\n}\nexports.exists = exists;\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\nfunction getRefinement(getOption) {\n    return function (a) { return exports.isSome(getOption(a)); };\n}\nexports.getRefinement = getRefinement;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = f(i, as[i]);\n        if (exports.isNone(b)) {\n            return exports.none;\n        }\n        out.push(b.value);\n    }\n    return exports.some(out);\n}; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.mapNullable = exports.chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.option = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    zero: exports.zero,\n    alt: _alt,\n    extend: _extend,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n","\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return function_1.pipe(fa, exports.bimap(g, f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.separated(exports.left(fa), f(exports.right(fa)));\n}; };\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), exports.right(fa));\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));\n}; };\nexports.bimap = bimap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nvar equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\nexports.equalsDefault = equalsDefault;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromCompare = function (compare) { return ({\n    equals: exports.equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\nexports.fromCompare = fromCompare;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return exports.fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\nexports.tuple = tuple;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (O) { return exports.fromCompare(function (first, second) { return O.compare(second, first); }); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return exports.fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return exports.fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.fromCompare(function () { return 0; })\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nvar lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\nexports.lt = lt;\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\nexports.gt = gt;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nvar leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\nexports.leq = leq;\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nvar geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\nexports.geq = geq;\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\nexports.min = min;\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nvar max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\nexports.max = max;\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nvar clamp = function (O) {\n    var minO = exports.min(O);\n    var maxO = exports.max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\nexports.clamp = clamp;\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nvar between = function (O) {\n    var ltO = exports.lt(O);\n    var gtO = exports.gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\nexports.between = between;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleOrd = exports.tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualOrd = exports.reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ord = exports.Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: Eq_1.eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#Ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#Ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#Ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#Ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ordDate = \n/*#__PURE__*/\nfunction_1.pipe(\n// tslint:disable-next-line: deprecation\nexports.ordNumber, \n/*#__PURE__*/\nexports.contramap(function (date) { return date.valueOf(); }));\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction fromEquals(equals) {\n    return {\n        equals: function (x, y) { return x === y || equals(x, y); }\n    };\n}\nexports.fromEquals = fromEquals;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\nexports.struct = struct;\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\nexports.contramap = contramap;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.6.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleEq = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructEq = exports.struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.strictEqual = exports.eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eq = exports.Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#Eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqBoolean = exports.eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#Eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqString = exports.eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#Eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqNumber = exports.eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#Eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = exports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.groupSort = exports.group = exports.reverse = exports.concat = exports.fromArray = exports.unappend = exports.unprepend = exports.fromReadonlyArray = exports.makeBy = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.prepend = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;\nexports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.filter = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexports.empty = [];\n/**\n * @internal\n */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/**\n * @internal\n */\nvar isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\nexports.isOutOfBound = isOutOfBound;\n/**\n * @internal\n */\nvar prepend = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\nexports.prepend = prepend;\n/**\n * @internal\n */\nvar append = function (end) { return function (init) { return concat(init, [end]); }; };\nexports.append = append;\n/**\n * @internal\n */\nvar unsafeInsertAt = function (i, a, as) {\n    if (exports.isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @internal\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @internal\n */\nvar uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return as;\n    }\n    var out = [exports.head(as)];\n    var rest = exports.tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\nexports.uniq = uniq;\n/**\n * @internal\n */\nvar sortBy = function (ords) {\n    if (exports.isNonEmpty(ords)) {\n        var M = Ord_1.getMonoid();\n        return exports.sort(ords.reduce(M.concat, M.empty));\n    }\n    return function_1.identity;\n};\nexports.sortBy = sortBy;\n/**\n * @internal\n */\nvar union = function (E) {\n    var uniqE = exports.uniq(E);\n    return function (first, second) { return uniqE(concat(first, second)); };\n};\nexports.union = union;\n/**\n * @internal\n */\nvar rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {\n        return as;\n    }\n    if (m < 0) {\n        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];\n        return concat(s, f);\n    }\n    else {\n        return exports.rotate(m - len)(as);\n    }\n}; };\nexports.rotate = rotate;\n/**\n * @internal\n */\nvar makeBy = function (n, f) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n};\nexports.makeBy = makeBy;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category constructors\n * @since 2.5.0\n */\nvar fromReadonlyArray = function (as) {\n    return exports.isNonEmpty(as) ? O.some(as) : O.none;\n};\nexports.fromReadonlyArray = fromReadonlyArray;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };\nexports.unprepend = unprepend;\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nvar unappend = function (as) { return [exports.init(as), exports.last(as)]; };\nexports.unappend = unappend;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return exports.fromReadonlyArray(as.slice()); };\nexports.fromArray = fromArray;\nfunction concat(first, second) {\n    return first.concat(second);\n}\nexports.concat = concat;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());\n};\nexports.reverse = reverse;\nfunction group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return exports.empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\nexports.group = group;\nfunction groupSort(O) {\n    var sortO = exports.sort(O);\n    var groupO = group(O);\n    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty); };\n}\nexports.groupSort = groupSort;\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.5.0\n */\nvar groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\nexports.groupBy = groupBy;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length === 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) { return (exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as))); }; };\nexports.modifyAt = modifyAt;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * @category combinators\n * @since 2.5.1\n */\nvar unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) { return function (as) {\n    var rest = exports.tail(as);\n    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;\n}; };\nexports.intersperse = intersperse;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (exports.isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\nexports.chop = chop;\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };\nexports.chunksOf = chunksOf;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (as) { return concat(as, that()); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (as) { return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); }); };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return exports.chainWithIndex(function (_, a) { return f(a); }); };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (as) {\n    var next = exports.tail(as);\n    var out = [f(as)];\n    while (exports.isNonEmpty(next)) {\n        out.push(f(next));\n        next = exports.tail(next);\n    }\n    return out;\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) {\n    return exports.mapWithIndex(function (_, a) { return f(a); });\n};\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, exports.head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (S) { return function (f) { return function (as) {\n    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (as) {\n    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, exports.head(as)), exports.of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Comonad\n * @since 2.6.3\n */\nvar extract = function (as) { return as[0]; };\nexports.extract = extract;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: concat\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.head = exports.extract;\n/**\n * @since 2.5.0\n */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n/**\n * @since 2.5.0\n */\nvar last = function (as) { return as[as.length - 1]; };\nexports.last = last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nvar init = function (as) { return as.slice(0, -1); };\nexports.init = init;\n/**\n * @since 2.5.0\n */\nvar min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.min = min;\n/**\n * @since 2.5.0\n */\nvar max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\nexports.max = max;\n/**\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\nexports.concatAll = concatAll;\nfunction filter(predicate) {\n    // tslint:disable-next-line: deprecation\n    return exports.filterWithIndex(function (_, a) { return predicate(a); });\n}\nexports.filter = filter;\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterWithIndex) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar filterWithIndex = function (predicate) { return function (as) { return exports.fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.uncons = exports.unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.10.0\n * @deprecated\n */\nexports.unsnoc = exports.unappend;\nfunction cons(head, tail) {\n    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));\n}\nexports.cons = cons;\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nvar snoc = function (init, end) { return concat(init, [end]); };\nexports.snoc = snoc;\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertAt) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nvar insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));\n}; };\nexports.insertAt = insertAt;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyNonEmptyArray = {\n    URI: exports.URI,\n    of: exports.of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: exports.extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.concatAll = exports.semigroupVoid = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;\n/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar Or = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (O) { return ({\n    concat: Or.min(O)\n}); };\nexports.min = min;\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (O) { return ({\n    concat: Or.max(O)\n}); };\nexports.max = max;\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\nexports.constant = constant;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (S) { return ({\n    concat: function (x, y) { return S.concat(y, x); }\n}); };\nexports.reverse = reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\nexports.struct = struct;\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\nexports.tuple = tuple;\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\nexports.intercalate = intercalate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nvar first = function () { return ({ concat: function_1.identity }); };\nexports.first = first;\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nvar last = function () { return ({ concat: function (_, y) { return y; } }); };\nexports.last = last;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.semigroupVoid = exports.constant(undefined);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nvar concatAll = function (S) { return function (startWith) { return function (as) {\n    return as.reduce(S.concat, startWith);\n}; }; };\nexports.concatAll = concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\nexports.getObjectSemigroup = getObjectSemigroup;\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getLastSemigroup = exports.last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFirstSemigroup = exports.first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleSemigroup = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructSemigroup = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualSemigroup = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinSemigroup = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetSemigroup = exports.min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.getIntercalateSemigroup = exports.intercalate;\nfunction fold(S) {\n    var concatAllS = exports.concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\nexports.fold = fold;\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemigroup = function_1.getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;\nexports.Pointed = exports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = void 0;\nexports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.fromArray = exports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar N = __importStar(require(\"./number\"));\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\nvar RNEA = __importStar(require(\"./ReadonlyNonEmptyArray\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.prepend = RNEA.prepend;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexports.append = RNEA.append;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(n, f)); };\nexports.makeBy = makeBy;\n/**\n * Create a `ReadonlyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar range = function (start, end) {\n    return start <= end ? exports.makeBy(end - start + 1, function (i) { return start + i; }) : [start];\n};\nexports.range = range;\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nvar replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };\nexports.replicate = replicate;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Break an array into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchLeft = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };\nexports.matchLeft = matchLeft;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldLeft = exports.matchLeft;\n/**\n * Break an array into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchRight = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };\nexports.matchRight = matchRight;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.5.0\n */\nexports.foldRight = exports.matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (as) {\n    if (exports.isEmpty(as)) {\n        return exports.empty;\n    }\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\nexports.scanRight = scanRight;\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nvar isEmpty = function (as) { return as.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category guards\n * @since 2.5.0\n */\nexports.isNonEmpty = RNEA.isNonEmpty;\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nvar size = function (as) { return as.length; };\nexports.size = size;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexports.isOutOfBound = RNEA.isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : exports.isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexports.lookup = lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nvar head = function (as) { return (exports.isNonEmpty(as) ? O.some(RNEA.head(as)) : O.none); };\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nvar last = function (as) { return (exports.isNonEmpty(as) ? O.some(RNEA.last(as)) : O.none); };\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nvar tail = function (as) {\n    return exports.isNonEmpty(as) ? O.some(RNEA.tail(as)) : O.none;\n};\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nvar init = function (as) {\n    return exports.isNonEmpty(as) ? O.some(RNEA.init(as)) : O.none;\n};\nexports.init = init;\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar takeLeft = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);\n}; };\nexports.takeLeft = takeLeft;\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nvar takeRight = function (n) { return function (as) {\n    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);\n}; };\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? exports.empty : out;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeft = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);\n}; };\nexports.dropLeft = dropLeft;\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropRight = function (n) { return function (as) {\n    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);\n}; };\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar dropLeftWhile = function (predicate) { return function (as) {\n    var i = spanLeftIndex(as, predicate);\n    return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);\n}; };\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nvar findIndex = function (predicate) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        if (predicate(as[i])) {\n            return O.some(i);\n        }\n    }\n    return O.none;\n}; };\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nvar findFirstMap = function (f) { return function (as) {\n    for (var i = 0; i < as.length; i++) {\n        var out = f(as[i]);\n        if (O.isSome(out)) {\n            return out;\n        }\n    }\n    return O.none;\n}; };\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nvar findLastMap = function (f) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        var out = f(as[i]);\n        if (O.isSome(out)) {\n            return out;\n        }\n    }\n    return O.none;\n}; };\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nvar findLastIndex = function (predicate) { return function (as) {\n    for (var i = as.length - 1; i >= 0; i--) {\n        if (predicate(as[i])) {\n            return O.some(i);\n        }\n    }\n    return O.none;\n}; };\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexports.insertAt = \n// tslint:disable-next-line: deprecation\nRNEA.insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nvar updateAt = function (i, a) {\n    return exports.modifyAt(i, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nvar deleteAt = function (i) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));\n}; };\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nvar modifyAt = function (i, f) { return function (as) {\n    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));\n}; };\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.prependAll = prependAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.intersperse = intersperse;\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };\n};\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (exports.isNonEmpty(as) ? g(as) : exports.empty); };\n};\nexports.chop = chop;\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar splitAt = function (n) { return function (as) {\n    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];\n}; };\nexports.splitAt = splitAt;\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.empty); };\n};\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return exports.isNonEmpty(input)\n            ? function_1.pipe(RNEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : exports.empty;\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, first); };\n        }\n        return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(first, second) : exports.isNonEmpty(first) ? first : second;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.5.0\n */\nexports.of = RNEA.of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return fa.concat(that());\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) { return function (f) { return function (fa) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; }; };\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getShow = function (S) { return ({\n    show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nvar getSemigroup = function () { return ({\n    concat: function (first, second) { return (exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second)); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nvar getMonoid = function () { return ({\n    concat: exports.getSemigroup().concat,\n    empty: exports.empty\n}); };\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nvar getEq = function (E) {\n    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nvar getOrd = function (O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\nexports.getOrd = getOrd;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexports.unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeUpdateAt = function (i, a, as) {\n    return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nvar unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nvar toArray = function (as) { return as.slice(); };\nexports.toArray = toArray;\n/**\n * @category interop\n * @since 2.5.0\n */\nvar fromArray = function (as) { return (exports.isEmpty(as) ? exports.empty : as.slice()); };\nexports.fromArray = fromArray;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = RNEA.empty;\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar every = function (predicate) { return function (as) { return as.every(predicate); }; };\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) {\n    return as.some(predicate);\n}; };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexports.prependToAll = exports.prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.Show = exports.Field = exports.Bounded = exports.Ord = exports.Eq = void 0;\n/**\n * @since 2.10.0\n */\nvar B = __importStar(require(\"./Bounded\"));\nvar E = __importStar(require(\"./Eq\"));\nvar F = __importStar(require(\"./Field\"));\nvar O = __importStar(require(\"./Ord\"));\nvar S = __importStar(require(\"./Show\"));\nvar Semigroup_1 = require(\"./Semigroup\");\nvar Monoid_1 = require(\"./Monoid\");\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Eq = E.eqNumber;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Ord = O.ordNumber;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Bounded = B.boundedNumber;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Field = F.fieldNumber;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Show = S.showNumber;\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.SemigroupSum = Semigroup_1.semigroupSum;\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.SemigroupProduct = Semigroup_1.semigroupProduct;\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.MonoidSum = Monoid_1.monoidSum;\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.MonoidProduct = Monoid_1.monoidProduct;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boundedNumber = void 0;\n/**\n * The `Bounded` type class represents totally ordered types that have an upper and lower boundary.\n *\n * Instances should satisfy the following law in addition to the `Ord` laws:\n *\n * - Bounded: `bottom <= a <= top`\n *\n * @since 2.0.0\n */\nvar Ord_1 = require(\"./Ord\");\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`Bounded`](./number.ts.html#Bounded) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.boundedNumber = {\n    // tslint:disable-next-line: deprecation\n    equals: Ord_1.ordNumber.equals,\n    // tslint:disable-next-line: deprecation\n    compare: Ord_1.ordNumber.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fieldNumber = exports.lcm = exports.gcd = void 0;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * The *greatest common divisor* of two values\n *\n * @since 2.0.0\n */\nfunction gcd(E, field) {\n    var zero = field.zero;\n    var f = function (x, y) { return (E.equals(y, zero) ? x : f(y, field.mod(x, y))); };\n    return f;\n}\nexports.gcd = gcd;\n/**\n * The *least common multiple* of two values\n *\n * @since 2.0.0\n */\nfunction lcm(E, F) {\n    var zero = F.zero;\n    var gcdSF = gcd(E, F);\n    return function (x, y) { return (E.equals(x, zero) || E.equals(y, zero) ? zero : F.div(F.mul(x, y), gcdSF(x, y))); };\n}\nexports.lcm = lcm;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`Field`](./number.ts.html#Field) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.fieldNumber = {\n    add: function (x, y) { return x + y; },\n    zero: 0,\n    mul: function (x, y) { return x * y; },\n    one: 1,\n    sub: function (x, y) { return x - y; },\n    degree: function (_) { return 1; },\n    div: function (x, y) { return x / y; },\n    mod: function (x, y) { return x % y; }\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showNumber = exports.showString = exports.showBoolean = exports.getStructShow = exports.getTupleShow = exports.tuple = exports.struct = void 0;\n/**\n * The `Show` type class represents those types which can be converted into\n * a human-readable `string` representation.\n *\n * While not required, it is recommended that for any expression `x`, the\n * string `show(x)` be executable TypeScript code which evaluates to the same\n * value as the expression `x`.\n *\n * @since 2.0.0\n */\nvar _ = __importStar(require(\"./internal\"));\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (shows) { return ({\n    show: function (a) {\n        var s = '{';\n        for (var k in shows) {\n            if (_.has.call(shows, k)) {\n                s += \" \" + k + \": \" + shows[k].show(a[k]) + \",\";\n            }\n        }\n        if (s.length > 1) {\n            s = s.slice(0, -1) + ' ';\n        }\n        s += '}';\n        return s;\n    }\n}); };\nexports.struct = struct;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var shows = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        shows[_i] = arguments[_i];\n    }\n    return ({\n        show: function (t) { return \"[\" + t.map(function (a, i) { return shows[i].show(a); }).join(', ') + \"]\"; }\n    });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleShow = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructShow = exports.struct;\n/**\n * Use [`Show`](./boolean.ts.html#Show) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.showBoolean = {\n    show: function (a) { return JSON.stringify(a); }\n};\n/**\n * Use [`Show`](./string.ts.html#Show) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.showString = {\n    show: function (a) { return JSON.stringify(a); }\n};\n/**\n * Use [`Show`](./number.ts.html#Show) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.showNumber = {\n    show: function (a) { return JSON.stringify(a); }\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.monoidProduct = exports.monoidSum = exports.monoidString = exports.getEndomorphismMonoid = exports.getFunctionMonoid = exports.monoidAny = exports.monoidAll = exports.fold = exports.getMeetMonoid = exports.getJoinMonoid = exports.getDualMonoid = exports.getStructMonoid = exports.getTupleMonoid = exports.concatAll = exports.monoidVoid = exports.tuple = exports.struct = exports.reverse = exports.max = exports.min = void 0;\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nvar Se = __importStar(require(\"./Semigroup\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a monoid where `concat` will return the minimum, based on the provided bounded order.\n *\n * The `empty` value is the `top` value.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as M from 'fp-ts/Monoid'\n *\n * const M1 = M.min(N.Bounded)\n *\n * assert.deepStrictEqual(M1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar min = function (B) { return ({\n    concat: Se.min(B).concat,\n    empty: B.top\n}); };\nexports.min = min;\n/**\n * Get a monoid where `concat` will return the maximum, based on the provided bounded order.\n *\n * The `empty` value is the `bottom` value.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as M from 'fp-ts/Monoid'\n *\n * const M1 = M.max(N.Bounded)\n *\n * assert.deepStrictEqual(M1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nvar max = function (B) { return ({\n    concat: Se.max(B).concat,\n    empty: B.bottom\n}); };\nexports.max = max;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Monoid`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Monoid'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Monoid).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (M) { return ({\n    concat: Se.reverse(M).concat,\n    empty: M.empty\n}); };\nexports.reverse = reverse;\n/**\n * Given a struct of monoids returns a monoid for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const M = struct<Point>({\n *   x: N.MonoidSum,\n *   y: N.MonoidSum\n * })\n *\n * assert.deepStrictEqual(M.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nvar struct = function (monoids) {\n    var empty = {};\n    for (var k in monoids) {\n        if (_.has.call(monoids, k)) {\n            empty[k] = monoids[k].empty;\n        }\n    }\n    return {\n        concat: Se.struct(monoids).concat,\n        empty: empty\n    };\n};\nexports.struct = struct;\n/**\n * Given a tuple of monoids returns a monoid for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Monoid'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const M1 = tuple(S.Monoid, N.MonoidSum)\n * assert.deepStrictEqual(M1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const M2 = tuple(S.Monoid, N.MonoidSum, B.MonoidAll)\n * assert.deepStrictEqual(M2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var monoids = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        monoids[_i] = arguments[_i];\n    }\n    return ({\n        concat: Se.tuple.apply(Se, monoids).concat,\n        empty: monoids.map(function (m) { return m.empty; })\n    });\n};\nexports.tuple = tuple;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.monoidVoid = {\n    concat: Se.semigroupVoid.concat,\n    empty: undefined\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the monoid `empty` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(concatAll(N.MonoidSum)([1, 2, 3]), 6)\n * assert.deepStrictEqual(concatAll(N.MonoidSum)([]), 0)\n *\n * @since 2.10.0\n */\nvar concatAll = function (M) { return Se.concatAll(M)(M.empty); };\nexports.concatAll = concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleMonoid = exports.tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getStructMonoid = exports.struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualMonoid = exports.reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getJoinMonoid = exports.max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexports.getMeetMonoid = exports.min;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.fold = exports.concatAll;\n/**\n * Use [`MonoidAll`](./boolean.ts.html#monoidall) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.monoidAll = {\n    // tslint:disable-next-line: deprecation\n    concat: Se.semigroupAll.concat,\n    empty: true\n};\n/**\n * Use [`MonoidAny`](./boolean.ts.html#MonoidAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.monoidAny = {\n    // tslint:disable-next-line: deprecation\n    concat: Se.semigroupAny.concat,\n    empty: false\n};\n/**\n * Use [`getMonoid`](./function.ts.html#getMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionMonoid = function_1.getMonoid;\n/**\n * Use [`getEndomorphismMonoid`](./function.ts.html#getEndomorphismMonoid) instead.\n *\n * **Note**. The execution order in [`getEndomorphismMonoid`](./function.ts.html#getEndomorphismMonoid) is reversed.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return exports.reverse(function_1.getEndomorphismMonoid()); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n/**\n * Use [`Monoid`](./string.ts.html#Monoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.monoidString = {\n    // tslint:disable-next-line: deprecation\n    concat: Se.semigroupString.concat,\n    empty: ''\n};\n/**\n * Use [`MonoidSum`](./number.ts.html#MonoidSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.monoidSum = {\n    // tslint:disable-next-line: deprecation\n    concat: Se.semigroupSum.concat,\n    empty: 0\n};\n/**\n * Use [`MonoidProduct`](./number.ts.html#MonoidProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.monoidProduct = {\n    // tslint:disable-next-line: deprecation\n    concat: Se.semigroupProduct.concat,\n    empty: 1\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Show = exports.Ord = exports.MonoidAny = exports.MonoidAll = exports.SemigroupAny = exports.SemigroupAll = exports.BooleanAlgebra = exports.Eq = exports.fold = exports.match = exports.foldW = exports.matchW = void 0;\n/**\n * @since 2.2.0\n */\nvar BA = __importStar(require(\"./BooleanAlgebra\"));\nvar E = __importStar(require(\"./Eq\"));\nvar Semigroup_1 = require(\"./Semigroup\");\nvar Monoid_1 = require(\"./Monoid\");\nvar O = __importStar(require(\"./Ord\"));\nvar S = __importStar(require(\"./Show\"));\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onFalse, onTrue) { return function (value) {\n    return value ? onTrue() : onFalse();\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Defines the fold over a boolean value.\n * Takes two thunks `onTrue`, `onFalse` and a `boolean` value.\n * If `value` is false, `onFalse()` is returned, otherwise `onTrue()`.\n *\n * @example\n * import { some, map } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n * import { match } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(\n *  pipe(\n *    some(true),\n *    map(match(() => 'false', () => 'true'))\n *  ),\n *  some('true')\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.foldW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.2.0\n */\nexports.fold = exports.match;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Eq = E.eqBoolean;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.BooleanAlgebra = BA.booleanAlgebraBoolean;\n/**\n * `boolean` semigroup under conjunction.\n *\n * @example\n * import { SemigroupAll } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(SemigroupAll.concat(true, true), true)\n * assert.deepStrictEqual(SemigroupAll.concat(true, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.SemigroupAll = Semigroup_1.semigroupAll;\n/**\n * `boolean` semigroup under disjunction.\n *\n * @example\n * import { SemigroupAny } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(SemigroupAny.concat(true, true), true)\n * assert.deepStrictEqual(SemigroupAny.concat(true, false), true)\n * assert.deepStrictEqual(SemigroupAny.concat(false, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.SemigroupAny = Semigroup_1.semigroupAny;\n/**\n * `boolean` monoid under conjunction.\n *\n * The `empty` value is `true`.\n *\n * @example\n * import { MonoidAll } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(MonoidAll.concat(true, true), true)\n * assert.deepStrictEqual(MonoidAll.concat(true, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.MonoidAll = Monoid_1.monoidAll;\n/**\n * `boolean` monoid under disjunction.\n *\n * The `empty` value is `false`.\n *\n * @example\n * import { MonoidAny } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(MonoidAny.concat(true, true), true)\n * assert.deepStrictEqual(MonoidAny.concat(true, false), true)\n * assert.deepStrictEqual(MonoidAny.concat(false, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.MonoidAny = Monoid_1.monoidAny;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Ord = O.ordBoolean;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Show = S.showBoolean;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctionBooleanAlgebra = exports.booleanAlgebraBoolean = exports.getDualBooleanAlgebra = exports.booleanAlgebraVoid = exports.reverse = void 0;\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Every boolean algebras has a dual algebra, which involves reversing one/zero as well as join/meet.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (B) { return ({\n    meet: function (x, y) { return B.join(x, y); },\n    join: function (x, y) { return B.meet(x, y); },\n    zero: B.one,\n    one: B.zero,\n    implies: function (x, y) { return B.join(B.not(x), y); },\n    not: B.not\n}); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.booleanAlgebraVoid = {\n    meet: function () { return undefined; },\n    join: function () { return undefined; },\n    zero: undefined,\n    one: undefined,\n    implies: function () { return undefined; },\n    not: function () { return undefined; }\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getDualBooleanAlgebra = exports.reverse;\n/**\n * Use [`BooleanAlgebra`](./boolean.ts.html#BooleanAlgebra) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.booleanAlgebraBoolean = {\n    meet: function (x, y) { return x && y; },\n    join: function (x, y) { return x || y; },\n    zero: false,\n    one: true,\n    implies: function (x, y) { return !x || y; },\n    not: function (x) { return !x; }\n};\n/**\n * Use [`getBooleanAlgebra`](./function.ts.html#getBooleanAlgebra) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionBooleanAlgebra = function_1.getBooleanAlgebra;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMinMaxBoundedDistributiveLattice = void 0;\nvar DistributiveLattice_1 = require(\"./DistributiveLattice\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction getMinMaxBoundedDistributiveLattice(O) {\n    var L = DistributiveLattice_1.getMinMaxDistributiveLattice(O);\n    return function (min, max) { return ({\n        join: L.join,\n        meet: L.meet,\n        zero: min,\n        one: max\n    }); };\n}\nexports.getMinMaxBoundedDistributiveLattice = getMinMaxBoundedDistributiveLattice;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMinMaxDistributiveLattice = void 0;\nvar Ord_1 = require(\"./Ord\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction getMinMaxDistributiveLattice(O) {\n    return {\n        meet: Ord_1.min(O),\n        join: Ord_1.max(O)\n    };\n}\nexports.getMinMaxDistributiveLattice = getMinMaxDistributiveLattice;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tailRec = void 0;\n/**\n * @since 2.0.0\n */\nvar tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\nexports.tailRec = tailRec;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fanin = exports.splitChoice = exports.fanIn = exports.split = void 0;\nvar function_1 = require(\"./function\");\nfunction split(P, C) {\n    return function (pab, pcd) { return C.compose(P.right(pcd), P.left(pab)); };\n}\nexports.split = split;\nfunction fanIn(P, C) {\n    var splitPC = split(P, C);\n    return function (pac, pbc) {\n        return C.compose(P.promap(C.id(), function (cc) { return (cc._tag === 'Left' ? cc.left : cc.right); }, function_1.identity), splitPC(pac, pbc));\n    };\n}\nexports.fanIn = fanIn;\nfunction splitChoice(F) {\n    return split(F, F);\n}\nexports.splitChoice = splitChoice;\nfunction fanin(F) {\n    return fanIn(F, F);\n}\nexports.fanin = fanin;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCompactableComposition = exports.separate = exports.compact = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Option_1 = require(\"./Option\");\nvar S = __importStar(require(\"./Separated\"));\nfunction compact(F, G) {\n    return function (fga) { return F.map(fga, G.compact); };\n}\nexports.compact = compact;\nfunction separate(F, C, G) {\n    var _compact = compact(F, C);\n    var _map = Functor_1.map(F, G);\n    return function (fge) { return S.separated(_compact(function_1.pipe(fge, _map(Option_1.getLeft))), _compact(function_1.pipe(fge, _map(Option_1.getRight)))); };\n}\nexports.separate = separate;\n/** @deprecated */\nfunction getCompactableComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    return {\n        map: map,\n        compact: compact(F, G),\n        separate: separate(F, G, G)\n    };\n}\nexports.getCompactableComposition = getCompactableComposition;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.info = exports.error = exports.warn = exports.log = void 0;\n/**\n * @since 2.0.0\n */\nvar log = function (a) { return function () { return console.log(a); }; }; // tslint:disable-line:no-console\nexports.log = log;\n/**\n * @since 2.0.0\n */\nvar warn = function (a) { return function () { return console.warn(a); }; }; // tslint:disable-line:no-console\nexports.warn = warn;\n/**\n * @since 2.0.0\n */\nvar error = function (a) { return function () { return console.error(a); }; }; // tslint:disable-line:no-console\nexports.error = error;\n/**\n * @since 2.0.0\n */\nvar info = function (a) { return function () { return console.info(a); }; }; // tslint:disable-line:no-console\nexports.info = info;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.const_ = exports.Bifunctor = exports.Contravariant = exports.flap = exports.Functor = exports.URI = exports.mapLeft = exports.bimap = exports.map = exports.contramap = exports.getApplicative = exports.getApply = exports.getBooleanAlgebra = exports.getHeytingAlgebra = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBounded = exports.getOrd = exports.getEq = exports.getShow = exports.make = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.make = function_1.unsafeCoerce;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(S) {\n    return {\n        show: function (c) { return \"make(\" + S.show(c) + \")\"; }\n    };\n}\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getOrd = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getBounded = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getSemigroup = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getMonoid = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getSemiring = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getRing = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getHeytingAlgebra = function_1.identity;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.getBooleanAlgebra = function_1.identity;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getApply(S) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return exports.make(S.concat(fab, fa)); }\n    };\n}\nexports.getApply = getApply;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getApplicative(M) {\n    var A = getApply(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: A.map,\n        ap: A.ap,\n        of: function () { return exports.make(M.empty); }\n    };\n}\nexports.getApplicative = getApplicative;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _contramap = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nvar contramap = function () { return function_1.unsafeCoerce; };\nexports.contramap = contramap;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function () { return function_1.unsafeCoerce; };\nexports.map = map;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.6.2\n */\nvar bimap = function (f) { return function (fa) {\n    return exports.make(f(fa));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.6.2\n */\nvar mapLeft = function (f) { return function (fa) { return exports.make(f(fa)); }; };\nexports.mapLeft = mapLeft;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Const';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Contravariant = {\n    URI: exports.URI,\n    contramap: _contramap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.const_ = {\n    URI: exports.URI,\n    map: _map,\n    contramap: _contramap,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.now = exports.create = exports.Ord = exports.eqYear = exports.eqMonth = exports.eqDate = exports.Eq = void 0;\n/**\n * @since 2.0.0\n */\nvar E = __importStar(require(\"./Eq\"));\nvar O = __importStar(require(\"./Ord\"));\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Eq = E.eqDate;\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.eqDate = {\n    equals: function (x, y) { return x.getDate() === y.getDate(); }\n};\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.eqMonth = {\n    equals: function (x, y) { return x.getMonth() === y.getMonth(); }\n};\n/**\n * @category instances\n * @since 2.6.0\n */\nexports.eqYear = {\n    equals: function (x, y) { return x.getFullYear() === y.getFullYear(); }\n};\n/**\n * @example\n * import { Ord } from 'fp-ts/Date'\n *\n * assert.deepStrictEqual(Ord.compare(new Date(1, 1, 2020), new Date(1, 1, 2021)), -1)\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Ord = O.ordDate;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns the current `Date`\n *\n * @category constructors\n * @since 2.0.0\n */\nvar create = function () { return new Date(); };\nexports.create = create;\n/**\n * Returns the number of milliseconds elapsed since January 1, 1970, 00:00:00 UTC\n *\n * @since 2.0.0\n */\nvar now = function () { return new Date().getTime(); };\nexports.now = now;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.throwError = exports.sequence = exports.traverse = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.alt = exports.altW = exports.flatten = exports.chain = exports.chainW = exports.of = exports.ap = exports.apW = exports.mapLeft = exports.bimap = exports.map = exports.filterOrElse = exports.filterOrElseW = exports.orElse = exports.orElseW = exports.swap = exports.chainOptionK = exports.fromOptionK = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromPredicate = exports.fromOption = exports.right = exports.left = exports.isRight = exports.isLeft = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.FromEither = exports.MonadThrow = exports.ChainRec = exports.Extend = exports.Alt = exports.Bifunctor = exports.Traversable = exports.Foldable = exports.chainFirstW = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category guards\n * @since 2.0.0\n */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n/**\n * @example\n * import { fromOption, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     some(1),\n *     fromOption(() => 'error')\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     none,\n *     fromOption(() => 'error')\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromOption = function (onNone) { return function (ma) {\n    return ma._tag === 'None' ? exports.left(onNone()) : exports.right(ma.value);\n}; };\nexports.fromOption = fromOption;\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? exports.right(a) : exports.left(onFalse(a))); }; };\nexports.fromPredicate = fromPredicate;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchww).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma.right;\n}; };\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n// TODO: make lazy in v3\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category interop\n * @since 2.0.0\n */\nvar fromNullable = function (e) { return function (a) {\n    return a == null ? exports.left(e) : exports.right(a);\n}; };\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return exports.right(f());\n    }\n    catch (e) {\n        return exports.left(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = exports.fromNullable(e);\n    return function (f) { return function_1.flow(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category interop\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = exports.fromNullableK(e);\n    return function (f) { return exports.chain(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nexports.foldW(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar fromOptionK = function (onNone) {\n    var from = exports.fromOption(onNone);\n    return function (f) { return function_1.flow(f, from); };\n};\nexports.fromOptionK = fromOptionK;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar chainOptionK = function (onNone) {\n    var from = exports.fromOptionK(onNone);\n    return function (f) { return exports.chain(from(f)); };\n};\nexports.chainOptionK = chainOptionK;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\nfunction swap(ma) {\n    return exports.isLeft(ma) ? exports.right(ma.left) : exports.left(ma.right);\n}\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) { return function (ma) {\n    return exports.isLeft(ma) ? onLeft(ma.left) : ma;\n}; };\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nvar filterOrElseW = function (predicate, onFalse) {\n    return exports.chainW(function (a) { return (predicate(a) ? exports.right(a) : exports.left(onFalse(a))); });\n};\nexports.filterOrElseW = filterOrElseW;\n/**\n * @example\n * import { filterOrElse as filterOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     right(-1),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('a'),\n *     filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = exports.filterOrElseW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = exports.foldMap(M);\n    return function_1.pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\nvar _chainRec = function (a, f) {\n    return ChainRec_1.tailRec(f(a), function (e) {\n        return exports.isLeft(e) ? exports.right(exports.left(e.left)) : exports.isLeft(e.right) ? exports.left(f(e.right.left)) : exports.right(exports.right(e.right.right));\n    });\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return exports.isLeft(fa) ? fa : exports.right(f(fa.right));\n}; };\nexports.map = map;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) { return (exports.isLeft(fa) ? exports.left(f(fa.left)) : exports.right(g(fa.right))); }; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return exports.isLeft(fa) ? exports.left(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) { return (exports.isLeft(fab) ? fab : exports.isLeft(fa) ? fa : exports.right(fab.right(fa.right))); }; };\nexports.apW = apW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nvar chainW = function (f) { return function (ma) {\n    return exports.isLeft(ma) ? ma : f(ma.right);\n}; };\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Chain`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return (exports.isLeft(fa) ? that() : fa); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return exports.isLeft(wa) ? wa : exports.right(f(wa));\n}; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return exports.isLeft(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return exports.isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return exports.isLeft(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return (exports.isLeft(ta) ? F.of(exports.left(ta.left)) : F.map(f(ta.right), exports.right)); }; }; };\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ma) {\n    return exports.isLeft(ma) ? F.of(exports.left(ma.left)) : F.map(ma.right, exports.right);\n}; };\nexports.sequence = sequence;\n/**\n * @category MonadThrow\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(SE, SA) {\n    return {\n        show: function (ma) { return (exports.isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n    };\n}\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(EL, EA) {\n    return {\n        equals: function (x, y) {\n            return x === y || (exports.isLeft(x) ? exports.isLeft(y) && EL.equals(x.left, y.left) : exports.isRight(y) && EA.equals(x.right, y.right));\n        }\n    };\n}\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getSemigroup(S) {\n    return {\n        concat: function (x, y) { return (exports.isLeft(y) ? x : exports.isLeft(x) ? y : exports.right(S.concat(x.right, y.right))); }\n    };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = exports.left(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return (exports.isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : exports.right(ma.right.value)); },\n        separate: function (ma) {\n            return exports.isLeft(ma)\n                ? Separated_1.separated(ma, ma)\n                : exports.isLeft(ma.right)\n                    ? Separated_1.separated(exports.right(ma.right.left), empty)\n                    : Separated_1.separated(empty, exports.right(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.10.0\n */\nfunction getFilterable(M) {\n    var empty = exports.left(M.empty);\n    var _a = exports.getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return exports.isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return exports.isLeft(ma)\n            ? Separated_1.separated(ma, ma)\n            : p(ma.right)\n                ? Separated_1.separated(empty, exports.right(ma.right))\n                : Separated_1.separated(exports.right(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (exports.isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : exports.right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (exports.isLeft(ma)) {\n                return Separated_1.separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return exports.isLeft(e) ? Separated_1.separated(exports.right(e.left), empty) : Separated_1.separated(empty, exports.right(e.right));\n        }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getWitherable(M) {\n    var F_ = getFilterable(M);\n    var wither = function (F) {\n        var traverseF = _traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), F_.compact); };\n    };\n    var wilt = function (F) {\n        var traverseF = _traverse(F);\n        return function (ma, f) { return F.map(traverseF(ma, f), F_.separate); };\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: wither,\n        wilt: wilt\n    };\n}\nexports.getWitherable = getWitherable;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicativeValidation(SE) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) {\n            return exports.isLeft(fab)\n                ? exports.isLeft(fa)\n                    ? exports.left(SE.concat(fab.left, fa.left))\n                    : fab\n                : exports.isLeft(fa)\n                    ? fa\n                    : exports.right(fab.right(fa.right));\n        },\n        of: exports.of\n    };\n}\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getAltValidation(SE) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (me, that) {\n            if (exports.isRight(me)) {\n                return me;\n            }\n            var ea = that();\n            return exports.isLeft(ea) ? exports.left(SE.concat(me.left, ea.left)) : ea;\n        }\n    };\n}\nexports.getAltValidation = getAltValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\n/**\n * @since 2.0.0\n */\nfunction elem(E) {\n    return function (a, ma) { return (exports.isLeft(ma) ? false : E.equals(a, ma.right)); };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nfunction exists(predicate) {\n    return function (ma) { return (exports.isLeft(ma) ? false : predicate(ma.right)); };\n}\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        var e = f(i, as[i]);\n        if (exports.isLeft(e)) {\n            return e;\n        }\n        out.push(e.right);\n    }\n    return exports.right(out);\n}; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nfunction parseJSON(s, onError) {\n    return exports.tryCatch(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return exports.tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return Apply_1.getApplySemigroup(getApplicativeValidation(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return Applicative_1.getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEitherM = exports.toUnion = exports.swap = exports.orElse = exports.getOrElse = exports.matchE = exports.match = exports.altValidation = exports.mapLeft = exports.bimap = exports.alt = exports.chain = exports.ap = exports.map = exports.leftF = exports.rightF = exports.left = exports.right = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar E = __importStar(require(\"./Either\"));\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction right(F) {\n    return function_1.flow(E.right, F.of);\n}\nexports.right = right;\nfunction left(F) {\n    return function_1.flow(E.left, F.of);\n}\nexports.left = left;\nfunction rightF(F) {\n    return function (fa) { return F.map(fa, E.right); };\n}\nexports.rightF = rightF;\nfunction leftF(F) {\n    return function (fe) { return F.map(fe, E.left); };\n}\nexports.leftF = leftF;\nfunction map(F) {\n    return Functor_1.map(F, E.Functor);\n}\nexports.map = map;\nfunction ap(F) {\n    return Apply_1.ap(F, E.Apply);\n}\nexports.ap = ap;\nfunction chain(M) {\n    return function (f) { return function (ma) { return M.chain(ma, function (e) { return (E.isLeft(e) ? M.of(e) : f(e.right)); }); }; };\n}\nexports.chain = chain;\nfunction alt(M) {\n    return function (second) { return function (first) { return M.chain(first, function (e) { return (E.isLeft(e) ? second() : M.of(e)); }); }; };\n}\nexports.alt = alt;\nfunction bimap(F) {\n    return function (f, g) { return function (fea) { return F.map(fea, E.bimap(f, g)); }; };\n}\nexports.bimap = bimap;\nfunction mapLeft(F) {\n    return function (f) { return function (fea) { return F.map(fea, E.mapLeft(f)); }; };\n}\nexports.mapLeft = mapLeft;\nfunction altValidation(M, S) {\n    return function (second) { return function (first) {\n        return M.chain(first, E.match(function (e1) {\n            return M.map(second(), E.mapLeft(function (e2) { return S.concat(e1, e2); }));\n        }, right(M)));\n    }; };\n}\nexports.altValidation = altValidation;\nfunction match(F) {\n    return function (onLeft, onRight) { return function (ma) { return F.map(ma, E.match(onLeft, onRight)); }; };\n}\nexports.match = match;\nfunction matchE(M) {\n    return function (onLeft, onRight) { return function (ma) { return M.chain(ma, E.match(onLeft, onRight)); }; };\n}\nexports.matchE = matchE;\nfunction getOrElse(M) {\n    return function (onLeft) { return function (ma) { return M.chain(ma, E.match(onLeft, M.of)); }; };\n}\nexports.getOrElse = getOrElse;\nfunction orElse(M) {\n    return function (onLeft) { return function (ma) { return M.chain(ma, function (e) { return (E.isLeft(e) ? onLeft(e.left) : M.of(e)); }); }; };\n}\nexports.orElse = orElse;\nfunction swap(F) {\n    return function (ma) { return F.map(ma, E.swap); };\n}\nexports.swap = swap;\nfunction toUnion(F) {\n    return function (fa) { return F.map(fa, E.toUnion); };\n}\nexports.toUnion = toUnion;\n/** @deprecated  */\n/* istanbul ignore next */\nfunction getEitherM(M) {\n    var _ap = ap(M);\n    var _map = map(M);\n    var _chain = chain(M);\n    var _alt = alt(M);\n    var _bimap = bimap(M);\n    var _mapLeft = mapLeft(M);\n    var _fold = matchE(M);\n    var _getOrElse = getOrElse(M);\n    var _orElse = orElse(M);\n    return {\n        map: function (fa, f) { return function_1.pipe(fa, _map(f)); },\n        ap: function (fab, fa) { return function_1.pipe(fab, _ap(fa)); },\n        of: right(M),\n        chain: function (ma, f) { return function_1.pipe(ma, _chain(f)); },\n        alt: function (fa, that) { return function_1.pipe(fa, _alt(that)); },\n        bimap: function (fea, f, g) { return function_1.pipe(fea, _bimap(f, g)); },\n        mapLeft: function (fea, f) { return function_1.pipe(fea, _mapLeft(f)); },\n        fold: function (fa, onLeft, onRight) { return function_1.pipe(fa, _fold(onLeft, onRight)); },\n        getOrElse: function (fa, onLeft) { return function_1.pipe(fa, _getOrElse(onLeft)); },\n        orElse: function (fa, f) { return function_1.pipe(fa, _orElse(f)); },\n        swap: swap(M),\n        rightM: rightF(M),\n        leftM: leftF(M),\n        left: left(M)\n    };\n}\nexports.getEitherM = getEitherM;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFilterableComposition = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = void 0;\n/**\n * `Filterable` represents data structures which can be _partitioned_/_filtered_.\n *\n * Adapted from https://github.com/LiamGoodacre/purescript-filterable/blob/master/src/Data/Filterable.purs\n *\n * @since 2.0.0\n */\nvar Compactable_1 = require(\"./Compactable\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Option_1 = require(\"./Option\");\nvar Separated_1 = require(\"./Separated\");\nfunction filter(F, G) {\n    return function (predicate) { return function (fga) { return F.map(fga, function (ga) { return G.filter(ga, predicate); }); }; };\n}\nexports.filter = filter;\nfunction filterMap(F, G) {\n    return function (f) { return function (fga) { return F.map(fga, function (ga) { return G.filterMap(ga, f); }); }; };\n}\nexports.filterMap = filterMap;\nfunction partition(F, G) {\n    var _filter = filter(F, G);\n    return function (predicate) { return function (fga) {\n        return Separated_1.separated(function_1.pipe(fga, _filter(function (a) { return !predicate(a); })), function_1.pipe(fga, _filter(predicate)));\n    }; };\n}\nexports.partition = partition;\nfunction partitionMap(F, G) {\n    var _filterMap = filterMap(F, G);\n    return function (f) { return function (fga) {\n        return Separated_1.separated(function_1.pipe(fga, _filterMap(function (a) { return Option_1.getLeft(f(a)); })), function_1.pipe(fga, _filterMap(function (a) { return Option_1.getRight(f(a)); })));\n    }; };\n}\nexports.partitionMap = partitionMap;\n/** @deprecated */\nfunction getFilterableComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var _compact = Compactable_1.compact(F, G);\n    var _separate = Compactable_1.separate(F, G, G);\n    var _filter = filter(F, G);\n    var _filterMap = filterMap(F, G);\n    var _partition = partition(F, G);\n    var _partitionMap = partitionMap(F, G);\n    return {\n        map: map,\n        compact: _compact,\n        separate: _separate,\n        filter: function (fga, f) { return function_1.pipe(fga, _filter(f)); },\n        filterMap: function (fga, f) { return function_1.pipe(fga, _filterMap(f)); },\n        partition: function (fga, p) { return function_1.pipe(fga, _partition(p)); },\n        partitionMap: function (fga, f) { return function_1.pipe(fga, _partitionMap(f)); }\n    };\n}\nexports.getFilterableComposition = getFilterableComposition;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFoldableComposition = exports.toArray = exports.foldM = exports.traverse_ = exports.toReadonlyArray = exports.intercalate = exports.reduceM = exports.reduceRight = exports.foldMap = exports.reduce = void 0;\nvar function_1 = require(\"./function\");\nfunction reduce(F, G) {\n    return function (b, f) { return function (fga) { return F.reduce(fga, b, function (b, ga) { return G.reduce(ga, b, f); }); }; };\n}\nexports.reduce = reduce;\nfunction foldMap(F, G) {\n    return function (M) {\n        var foldMapF = F.foldMap(M);\n        var foldMapG = G.foldMap(M);\n        return function (f) { return function (fga) { return foldMapF(fga, function (ga) { return foldMapG(ga, f); }); }; };\n    };\n}\nexports.foldMap = foldMap;\nfunction reduceRight(F, G) {\n    return function (b, f) { return function (fga) { return F.reduceRight(fga, b, function (ga, b) { return G.reduceRight(ga, b, f); }); }; };\n}\nexports.reduceRight = reduceRight;\nfunction reduceM(M, F) {\n    return function (b, f) { return function (fa) { return F.reduce(fa, M.of(b), function (mb, a) { return M.chain(mb, function (b) { return f(b, a); }); }); }; };\n}\nexports.reduceM = reduceM;\nfunction intercalate(M, F) {\n    return function (sep, fm) {\n        var go = function (_a, x) {\n            var init = _a.init, acc = _a.acc;\n            return init ? { init: false, acc: x } : { init: false, acc: M.concat(M.concat(acc, sep), x) };\n        };\n        return F.reduce(fm, { init: true, acc: M.empty }, go).acc;\n    };\n}\nexports.intercalate = intercalate;\nfunction toReadonlyArray(F) {\n    return function (fa) {\n        return F.reduce(fa, [], function (acc, a) {\n            acc.push(a);\n            return acc;\n        });\n    };\n}\nexports.toReadonlyArray = toReadonlyArray;\nfunction traverse_(M, F) {\n    var applyFirst = function (mu, mb) { return M.ap(M.map(mu, function_1.constant), mb); };\n    var mu = M.of(undefined);\n    return function (fa, f) { return F.reduce(fa, mu, function (mu, a) { return applyFirst(mu, f(a)); }); };\n}\nexports.traverse_ = traverse_;\nfunction foldM(M, F) {\n    return function (fa, b, f) { return F.reduce(fa, M.of(b), function (mb, a) { return M.chain(mb, function (b) { return f(b, a); }); }); };\n}\nexports.foldM = foldM;\n/**\n * Use [`toReadonlyArray`](#toreadonlyarray) instead\n *\n * @since 2.8.0\n * @deprecated\n */\nexports.toArray = toReadonlyArray;\n/** @deprecated */\nfunction getFoldableComposition(F, G) {\n    var _reduce = reduce(F, G);\n    var _foldMap = foldMap(F, G);\n    var _reduceRight = reduceRight(F, G);\n    return {\n        reduce: function (fga, b, f) { return function_1.pipe(fga, _reduce(b, f)); },\n        foldMap: function (M) {\n            var foldMapM = _foldMap(M);\n            return function (fga, f) { return function_1.pipe(fga, foldMapM(f)); };\n        },\n        reduceRight: function (fga, b, f) { return function_1.pipe(fga, _reduceRight(b, f)); }\n    };\n}\nexports.getFoldableComposition = getFoldableComposition;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFoldableWithIndexComposition = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = void 0;\n/**\n * A `Foldable` with an additional index.\n * A `FoldableWithIndex` instance must be compatible with its `Foldable` instance\n *\n * ```ts\n * reduce(fa, b, f) = reduceWithIndex(fa, b, (_, b, a) => f(b, a))\n * foldMap(M)(fa, f) = foldMapWithIndex(M)(fa, (_, a) => f(a))\n * reduceRight(fa, b, f) = reduceRightWithIndex(fa, b, (_, a, b) => f(a, b))\n * ```\n *\n * @since 2.0.0\n */\nvar Foldable_1 = require(\"./Foldable\");\nvar function_1 = require(\"./function\");\nfunction reduceWithIndex(F, G) {\n    return function (b, f) { return function (fga) {\n        return F.reduceWithIndex(fga, b, function (i, b, ga) { return G.reduceWithIndex(ga, b, function (j, b, a) { return f([i, j], b, a); }); });\n    }; };\n}\nexports.reduceWithIndex = reduceWithIndex;\nfunction foldMapWithIndex(F, G) {\n    return function (M) {\n        var foldMapWithIndexF = F.foldMapWithIndex(M);\n        var foldMapWithIndexG = G.foldMapWithIndex(M);\n        return function (f) { return function (fga) { return foldMapWithIndexF(fga, function (i, ga) { return foldMapWithIndexG(ga, function (j, a) { return f([i, j], a); }); }); }; };\n    };\n}\nexports.foldMapWithIndex = foldMapWithIndex;\nfunction reduceRightWithIndex(F, G) {\n    return function (b, f) { return function (fga) {\n        return F.reduceRightWithIndex(fga, b, function (i, ga, b) { return G.reduceRightWithIndex(ga, b, function (j, a, b) { return f([i, j], a, b); }); });\n    }; };\n}\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/** @deprecated */\nfunction getFoldableWithIndexComposition(F, G) {\n    var FC = Foldable_1.getFoldableComposition(F, G);\n    var _reduceWithIndex = reduceWithIndex(F, G);\n    var _foldMapWithIndex = foldMapWithIndex(F, G);\n    var _reduceRightWithIndex = reduceRightWithIndex(F, G);\n    return {\n        reduce: FC.reduce,\n        foldMap: FC.foldMap,\n        reduceRight: FC.reduceRight,\n        reduceWithIndex: function (fga, b, f) { return function_1.pipe(fga, _reduceWithIndex(b, f)); },\n        foldMapWithIndex: function (M) {\n            var foldMapWithIndexM = _foldMapWithIndex(M);\n            return function (fga, f) { return function_1.pipe(fga, foldMapWithIndexM(f)); };\n        },\n        reduceRightWithIndex: function (fga, b, f) { return function_1.pipe(fga, _reduceRightWithIndex(b, f)); }\n    };\n}\nexports.getFoldableWithIndexComposition = getFoldableWithIndexComposition;\n","\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar E = __importStar(require(\"./Either\"));\nvar function_1 = require(\"./function\");\nfunction fromOption(F) {\n    return function (onNone) { return function_1.flow(E.fromOption(onNone), F.fromEither); };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function_1.flow(E.fromPredicate(predicate, onFalse), F.fromEither);\n    };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return function_1.flow(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return function_1.flow(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function_1.flow(E.fromPredicate(predicate, onFalse), F.fromEither));\n    }; };\n}\nexports.filterOrElse = filterOrElse;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainFirstIOK = exports.chainIOK = exports.fromIOK = void 0;\n/**\n * Lift a computation from the `IO` monad\n *\n * @since 2.10.0\n */\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nfunction fromIOK(F) {\n    return function (f) { return function_1.flow(f, F.fromIO); };\n}\nexports.fromIOK = fromIOK;\nfunction chainIOK(F, M) {\n    return function (f) {\n        var g = function_1.flow(f, F.fromIO);\n        return function (first) { return M.chain(first, g); };\n    };\n}\nexports.chainIOK = chainIOK;\nfunction chainFirstIOK(F, M) {\n    var chainFirstM = Chain_1.chainFirst(M);\n    return function (f) { return chainFirstM(function_1.flow(f, F.fromIO)); };\n}\nexports.chainFirstIOK = chainFirstIOK;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = void 0;\n/**\n * Lift a computation from the `Task` monad\n *\n * @since 2.10.0\n */\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nfunction fromTaskK(F) {\n    return function (f) { return function_1.flow(f, F.fromTask); };\n}\nexports.fromTaskK = fromTaskK;\nfunction chainTaskK(F, M) {\n    return function (f) {\n        var g = function_1.flow(f, F.fromTask);\n        return function (first) { return M.chain(first, g); };\n    };\n}\nexports.chainTaskK = chainTaskK;\nfunction chainFirstTaskK(F, M) {\n    var chainFirstM = Chain_1.chainFirst(M);\n    return function (f) { return chainFirstM(function_1.flow(f, F.fromTask)); };\n}\nexports.chainFirstTaskK = chainFirstTaskK;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorWithIndexComposition = exports.mapWithIndex = void 0;\n/**\n * A `FunctorWithIndex` is a type constructor which supports a mapping operation `mapWithIndex`.\n *\n * `mapWithIndex` can be used to turn functions `i -> a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.mapWithIndex(fa, (_i, a) => a) <-> fa`\n * 2. Composition: `F.mapWithIndex(fa, (_i, a) => bc(ab(a))) <-> F.mapWithIndex(F.mapWithIndex(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction mapWithIndex(F, G) {\n    return function (f) { return function (fa) { return F.mapWithIndex(fa, function (i, ga) { return G.mapWithIndex(ga, function (j, a) { return f([i, j], a); }); }); }; };\n}\nexports.mapWithIndex = mapWithIndex;\n/** @deprecated */\nfunction getFunctorWithIndexComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var _mapWithIndex = mapWithIndex(F, G);\n    return {\n        map: map,\n        mapWithIndex: function (fga, f) { return function_1.pipe(fga, _mapWithIndex(f)); }\n    };\n}\nexports.getFunctorWithIndexComposition = getFunctorWithIndexComposition;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\n/**\n * Type defunctionalization (as describe in [Lightweight higher-kinded polymorphism](https://www.cl.cam.ac.uk/~jdy22/papers/lightweight-higher-kinded-polymorphism.pdf))\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.identity = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.ChainRec = exports.Comonad = exports.Alt = exports.Traversable = exports.Foldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getEq = exports.getShow = exports.URI = exports.alt = exports.altW = exports.sequence = exports.traverse = exports.reduceRight = exports.foldMap = exports.reduce = exports.flatten = exports.duplicate = exports.extract = exports.extend = exports.chain = exports.of = exports.ap = exports.map = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Chain_1 = require(\"./Chain\");\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) { return function_1.pipe(fa, exports.foldMap(M)(f)); }; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\nvar _chainRec = ChainRec_1.tailRec;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return f(fa); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) { return fab(fa); }; };\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = function_1.identity;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) { return f(ma); }; };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) { return f(wa); }; };\nexports.extend = extend;\n/**\n * @category Extract\n * @since 2.6.2\n */\nexports.extract = function_1.identity;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) { return f(b, fa); }; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function () { return function (f) { return function (fa) { return f(fa); }; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) { return f(fa, b); }; };\nexports.reduceRight = reduceRight;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) { return F.map(f(ta), function_1.identity); }; }; };\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return F.map(ta, function_1.identity);\n}; };\nexports.sequence = sequence;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function () { return function_1.identity; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Identity';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = function_1.identity;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = function_1.identity;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.identity = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    alt: _alt,\n    extract: exports.extract,\n    extend: _extend,\n    chainRec: _chainRec\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMonoid = exports.getSemigroup = exports.io = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.FromIO = exports.ChainRec = exports.MonadIO = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.fromIO = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = void 0;\n/**\n * ```ts\n * interface IO<A> {\n *   (): A\n * }\n * ```\n *\n * `IO<A>` represents a non-deterministic synchronous computation that can cause side effects, yields a value of\n * type `A` and **never fails**. If you want to represent a synchronous computation that may fail, please see\n * `IOEither`.\n *\n * @since 2.0.0\n */\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Chain_1 = require(\"./Chain\");\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (ma, f) { return function () { return f(ma()); }; };\nvar _ap = function (mab, ma) { return function () { return mab()(ma()); }; };\nvar _chain = function (ma, f) { return function () { return f(ma())(); }; };\nvar _chainRec = function (a, f) { return function () {\n    var e = f(a)();\n    while (e._tag === 'Left') {\n        e = f(e.left)();\n    }\n    return e.right;\n}; };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return _map(fa, f); }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) { return _ap(fab, fa); }; };\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = function_1.constant;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) { return _chain(ma, f); }; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category constructors\n * @since 2.7.0\n * @deprecated\n */\nexports.fromIO = function_1.identity;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'IO';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: function_1.identity\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) { return function () { return as.map(function (a, i) { return f(i, a)(); }); }; }; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.io = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    chainRec: _chainRec\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getSemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainFirstW = exports.chainFirst = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplicativePar = exports.apSecond = exports.apFirst = exports.ApplyPar = exports.Bifunctor = exports.Pointed = exports.flap = exports.Functor = exports.getFilterable = exports.getCompactable = exports.getAltIOValidation = exports.getApplicativeIOValidation = exports.URI = exports.throwError = exports.altW = exports.alt = exports.flatten = exports.chainW = exports.chain = exports.of = exports.apW = exports.ap = exports.mapLeft = exports.bimap = exports.map = exports.swap = exports.orElseW = exports.orElse = exports.toUnion = exports.tryCatchK = exports.tryCatch = exports.getOrElseW = exports.getOrElse = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromIO = exports.fromEither = exports.leftIO = exports.rightIO = exports.right = exports.left = void 0;\nexports.getIOValidation = exports.getSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.ioEither = exports.Applicative = exports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.bracket = exports.fromEitherK = exports.filterOrElseW = exports.filterOrElse = exports.fromPredicate = exports.chainEitherKW = exports.chainEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromOption = exports.FromEither = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.MonadThrow = exports.MonadIO = exports.Alt = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Compactable_1 = require(\"./Compactable\");\nvar E = __importStar(require(\"./Either\"));\nvar ET = __importStar(require(\"./EitherT\"));\nvar Filterable_1 = require(\"./Filterable\");\nvar FromEither_1 = require(\"./FromEither\");\nvar FromIO_1 = require(\"./FromIO\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar I = __importStar(require(\"./IO\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.left = \n/*#__PURE__*/\nET.left(I.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.right = \n/*#__PURE__*/\nET.right(I.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightIO = \n/*#__PURE__*/\nET.rightF(I.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftIO = \n/*#__PURE__*/\nET.leftF(I.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = I.of;\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromIO = exports.rightIO;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/\nET.match(I.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.matchE = \n/*#__PURE__*/\nET.matchE(I.Monad);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchEW = exports.matchE;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n/**\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = \n/*#__PURE__*/\nET.getOrElse(I.Monad);\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexports.getOrElseW = exports.getOrElse;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `IOEither` from a function that performs a side effect and might throw\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) { return function () {\n    return E.tryCatch(f, onThrow);\n}; };\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `IOEither`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nET.toUnion(I.Functor);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = \n/*#__PURE__*/\nET.orElse(I.Monad);\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.orElseW = exports.orElse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.swap = \n/*#__PURE__*/\nET.swap(I.Functor);\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _apSeq = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexports.map = \n/*#__PURE__*/\nET.map(I.Functor);\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.bimap = \n/*#__PURE__*/\nET.bimap(I.Functor);\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.mapLeft = \n/*#__PURE__*/\nET.mapLeft(I.Functor);\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = \n/*#__PURE__*/\nET.ap(I.Apply);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * @category Pointed\n * @since 2.8.5\n */\nexports.of = exports.right;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = \n/*#__PURE__*/\nET.chain(I.Monad);\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexports.chainW = exports.chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = \n/*#__PURE__*/\nET.alt(I.Monad);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexports.altW = exports.alt;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'IOEither';\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicativeIOValidation(S) {\n    var ap = Apply_1.ap(I.Apply, E.getApplicativeValidation(S));\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return function_1.pipe(fab, ap(fa)); },\n        of: exports.of\n    };\n}\nexports.getApplicativeIOValidation = getApplicativeIOValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getAltIOValidation(S) {\n    var alt = ET.altValidation(I.Monad, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (fa, that) { return function_1.pipe(fa, alt(that)); }\n    };\n}\nexports.getAltIOValidation = getAltIOValidation;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var C = E.getCompactable(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: Compactable_1.compact(I.Functor, C),\n        separate: Compactable_1.separate(I.Functor, C, E.Functor)\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * @category instances\n * @since 2.1.0\n */\nfunction getFilterable(M) {\n    var F = E.getFilterable(M);\n    var C = exports.getCompactable(M);\n    var filter = Filterable_1.filter(I.Functor, F);\n    var filterMap = Filterable_1.filterMap(I.Functor, F);\n    var partition = Filterable_1.partition(I.Functor, F);\n    var partitionMap = Filterable_1.partitionMap(I.Functor, F);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: C.compact,\n        separate: C.separate,\n        filter: function (fa, predicate) { return function_1.pipe(fa, filter(predicate)); },\n        filterMap: function (fa, f) { return function_1.pipe(fa, filterMap(f)); },\n        partition: function (fa, predicate) { return function_1.pipe(fa, partition(predicate)); },\n        partitionMap: function (fa, f) { return function_1.pipe(fa, partitionMap(f)); }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.ApplyPar);\n/**\n * @category instances\n * @since 2.8.4\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.8.4\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst).\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nFromEither_1.chainOptionK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`chainEitherK`](#chaineitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nexports.chainEitherKW = exports.chainEitherK;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = \n/*#__PURE__*/\nFromEither_1.filterOrElse(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Make sure that a resource is cleaned up in the event of an exception (\\*). The release action is called regardless of\n * whether the body action throws (\\*) or returns.\n *\n * (\\*) i.e. returns a `Left`\n *\n * @since 2.0.0\n */\nvar bracket = function (acquire, use, release) {\n    return function_1.pipe(acquire, exports.chain(function (a) {\n        return function_1.pipe(use(a), I.chain(function (e) {\n            return function_1.pipe(release(a, e), exports.chain(function () { return I.of(e); }));\n        }));\n    }));\n};\nexports.bracket = bracket;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.ApplyPar);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) {\n    return function_1.flow(I.traverseArrayWithIndex(f), I.map(E.sequenceArray));\n};\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArrayWithIndex = function (f) { return function (as) { return function () {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = f(i, as[i])();\n        if (E.isLeft(b)) {\n            return b;\n        }\n        out.push(b.right);\n    }\n    return E.right(out);\n}; }; };\nexports.traverseSeqArrayWithIndex = traverseSeqArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArray = function (f) { return exports.traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/\nexports.traverseSeqArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`ApplicativePar`](#applicativepar) instead\n *\n * @since 2.7.0\n * @category instances\n * @deprecated\n */\nexports.Applicative = exports.ApplicativePar;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.ioEither = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.ApplyPar);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.ApplicativePar);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getSemigroup = function (S) {\n    return Apply_1.getApplySemigroup(I.Apply)(E.getSemigroup(S));\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Use [`getApplicativeIOValidation`](#getapplicativeiovalidation) and [`getAltIOValidation`](#getaltiovalidation).\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nfunction getIOValidation(SE) {\n    var applicativeIOValidation = getApplicativeIOValidation(SE);\n    var altIOValidation = getAltIOValidation(SE);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: applicativeIOValidation.ap,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        alt: altIOValidation.alt,\n        fromIO: exports.fromIO,\n        throwError: exports.throwError\n    };\n}\nexports.getIOValidation = getIOValidation;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newIORef = exports.IORef = void 0;\n/**\n * @example\n * import { io } from 'fp-ts/IO'\n * import { newIORef } from 'fp-ts/IORef'\n *\n * assert.strictEqual(io.chain(newIORef(1), ref => io.chain(ref.write(2), () => ref.read))(), 2)\n *\n * @category model\n * @since 2.0.0\n */\nvar IORef = /** @class */ (function () {\n    function IORef(value) {\n        var _this = this;\n        this.value = value;\n        this.read = function () { return _this.value; };\n        this.write = this.write.bind(this);\n        this.modify = this.modify.bind(this);\n    }\n    /**\n     * @since 2.0.0\n     */\n    IORef.prototype.write = function (a) {\n        var _this = this;\n        return function () {\n            _this.value = a;\n        };\n    };\n    /**\n     * @since 2.0.0\n     */\n    IORef.prototype.modify = function (f) {\n        var _this = this;\n        return function () {\n            _this.value = f(_this.value);\n        };\n    };\n    return IORef;\n}());\nexports.IORef = IORef;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction newIORef(a) {\n    return function () { return new IORef(a); };\n}\nexports.newIORef = newIORef;\n","\n/**\n * A join-semilattice (or upper semilattice) is a semilattice whose operation is called `join`, and which can be thought\n * of as a least upper bound.\n *\n * A `JoinSemilattice` must satisfy the following laws:\n *\n * - Associativity: `a ∨ (b ∨ c) <-> (a ∨ b) ∨ c`\n * - Commutativity: `a ∨ b <-> b ∨ a`\n * - Idempotency:   `a ∨ a <-> a`\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringify = exports.parse = void 0;\n/**\n * @since 2.10.0\n */\nvar Either_1 = require(\"./Either\");\nvar function_1 = require(\"./function\");\n/**\n * Converts a JavaScript Object Notation (JSON) string into a `Json` type.\n *\n * @example\n * import * as J from 'fp-ts/Json'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('{\"a\":1}', J.parse), E.right({ a: 1 }))\n * assert.deepStrictEqual(pipe('{\"a\":}', J.parse), E.left(new SyntaxError('Unexpected token } in JSON at position 5')))\n *\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nvar parse = function (s) { return Either_1.parseJSON(s, function_1.identity); };\nexports.parse = parse;\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import * as J from 'fp-ts/Json'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(J.stringify({ a: 1 }), E.right('{\"a\":1}'))\n * const circular: any = { ref: null }\n * circular.ref = circular\n * assert.deepStrictEqual(\n *   pipe(\n *     J.stringify(circular),\n *     E.mapLeft(e => e instanceof Error && e.message.includes('Converting circular structure to JSON'))\n *   ),\n *   E.left(true)\n * )\n *\n *  @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nvar stringify = function (a) { return Either_1.stringifyJSON(a, function_1.identity); };\nexports.stringify = stringify;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\n/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map_ = exports.insertAt = exports.empty = exports.Filterable = exports.Compactable = exports.flap = exports.Functor = exports.getTraversableWithIndex = exports.getFoldableWithIndex = exports.getWitherable = exports.getFilterableWithIndex = exports.URI = exports.separate = exports.partitionMap = exports.partition = exports.mapWithIndex = exports.map = exports.filterMap = exports.filter = exports.compact = exports.filterWithIndex = exports.filterMapWithIndex = exports.partitionWithIndex = exports.partitionMapWithIndex = exports.fromFoldable = exports.singleton = exports.getMonoid = exports.getEq = exports.isSubmap = exports.lookup = exports.lookupWithKey = exports.pop = exports.modifyAt = exports.updateAt = exports.deleteAt = exports.upsertAt = exports.toUnfoldable = exports.toArray = exports.collect = exports.values = exports.keys = exports.elem = exports.member = exports.isEmpty = exports.size = exports.getShow = void 0;\nvar Either_1 = require(\"./Either\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar O = __importStar(require(\"./Option\"));\nvar RM = __importStar(require(\"./ReadonlyMap\"));\nvar Separated_1 = require(\"./Separated\");\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RM.getShow;\n/**\n * Calculate the number of key/value pairs in a map\n *\n * @since 2.0.0\n */\nexports.size = RM.size;\n/**\n * Test whether or not a map is empty\n *\n * @since 2.0.0\n */\nexports.isEmpty = RM.isEmpty;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not a key exists in a map\n *\n * @since 2.0.0\n */\nexports.member = RM.member;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not a value is a member of a map\n *\n * @since 2.0.0\n */\nexports.elem = RM.elem;\n/**\n * Get a sorted `Array` of the keys contained in a `Map`.\n *\n * @since 2.0.0\n */\nvar keys = function (O) { return function (m) { return Array.from(m.keys()).sort(O.compare); }; };\nexports.keys = keys;\n/**\n * Get a sorted `Array` of the values contained in a `Map`.\n *\n * @since 2.0.0\n */\nvar values = function (O) { return function (m) { return Array.from(m.values()).sort(O.compare); }; };\nexports.values = values;\n/**\n * @since 2.0.0\n */\nfunction collect(O) {\n    var keysO = exports.keys(O);\n    return function (f) { return function (m) {\n        var out = [];\n        var ks = keysO(m);\n        for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n            var key = ks_1[_i];\n            out.push(f(key, m.get(key)));\n        }\n        return out;\n    }; };\n}\nexports.collect = collect;\n/**\n * Get a sorted `Array` of the key/value pairs contained in a `Map`.\n *\n * @since 2.0.0\n */\nfunction toArray(O) {\n    return collect(O)(function (k, a) { return [k, a]; });\n}\nexports.toArray = toArray;\nfunction toUnfoldable(ord, U) {\n    var toArrayO = toArray(ord);\n    return function (d) {\n        var kas = toArrayO(d);\n        var len = kas.length;\n        return U.unfold(0, function (b) { return (b < len ? O.some([kas[b], b + 1]) : O.none); });\n    };\n}\nexports.toUnfoldable = toUnfoldable;\n/**\n * Insert or replace a key/value pair in a `Map`.\n *\n * @category combinators\n * @since 2.0.0\n */\nvar upsertAt = function (E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k, a) {\n        var lookupWithKeyEk = lookupWithKeyE(k);\n        return function (m) {\n            var found = lookupWithKeyEk(m);\n            if (O.isNone(found)) {\n                var out = new Map(m);\n                out.set(k, a);\n                return out;\n            }\n            else if (found.value[1] !== a) {\n                var out = new Map(m);\n                out.set(found.value[0], a);\n                return out;\n            }\n            return m;\n        };\n    };\n};\nexports.upsertAt = upsertAt;\n/**\n * Delete a key and value from a map\n *\n * @category combinators\n * @since 2.0.0\n */\nvar deleteAt = function (E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k) { return function (m) {\n        var found = lookupWithKeyE(k, m);\n        if (O.isSome(found)) {\n            var r = new Map(m);\n            r.delete(found.value[0]);\n            return r;\n        }\n        return m;\n    }; };\n};\nexports.deleteAt = deleteAt;\n/**\n * @since 2.0.0\n */\nvar updateAt = function (E) {\n    var modifyAtE = exports.modifyAt(E);\n    return function (k, a) { return modifyAtE(k, function () { return a; }); };\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.0.0\n */\nvar modifyAt = function (E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k, f) { return function (m) {\n        var found = lookupWithKeyE(k, m);\n        if (O.isNone(found)) {\n            return O.none;\n        }\n        var r = new Map(m);\n        r.set(found.value[0], f(found.value[1]));\n        return O.some(r);\n    }; };\n};\nexports.modifyAt = modifyAt;\n/**\n * Delete a key and value from a map, returning the value as well as the subsequent map\n *\n * @since 2.0.0\n */\nfunction pop(E) {\n    var lookupE = exports.lookup(E);\n    var deleteAtE = exports.deleteAt(E);\n    return function (k) {\n        var deleteAtEk = deleteAtE(k);\n        return function (m) {\n            return function_1.pipe(lookupE(k, m), O.map(function (a) { return [a, deleteAtEk(m)]; }));\n        };\n    };\n}\nexports.pop = pop;\nfunction lookupWithKey(E) {\n    return function (k, m) {\n        if (m === undefined) {\n            var lookupWithKeyE_1 = lookupWithKey(E);\n            return function (m) { return lookupWithKeyE_1(k, m); };\n        }\n        var entries = m.entries();\n        var e;\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = entries.next()).done) {\n            var _a = e.value, ka = _a[0], a = _a[1];\n            if (E.equals(ka, k)) {\n                return O.some([ka, a]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.lookupWithKey = lookupWithKey;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Map`.\n *\n * @since 2.0.0\n */\nexports.lookup = RM.lookup;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not one `Map` contains all of the keys and values contained in another `Map`\n *\n * @since 2.0.0\n */\nexports.isSubmap = RM.isSubmap;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RM.getEq;\n/**\n * Gets `Monoid` instance for Maps given `Semigroup` instance for their values\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getMonoid(SK, SA) {\n    var lookupWithKeyS = lookupWithKey(SK);\n    return {\n        concat: function (mx, my) {\n            if (exports.isEmpty(mx)) {\n                return my;\n            }\n            if (exports.isEmpty(my)) {\n                return mx;\n            }\n            var r = new Map(mx);\n            var entries = my.entries();\n            var e;\n            // tslint:disable-next-line: strict-boolean-expressions\n            while (!(e = entries.next()).done) {\n                var _a = e.value, k = _a[0], a = _a[1];\n                var mxOptA = lookupWithKeyS(k, mx);\n                if (O.isSome(mxOptA)) {\n                    r.set(mxOptA.value[0], SA.concat(mxOptA.value[1], a));\n                }\n                else {\n                    r.set(k, a);\n                }\n            }\n            return r;\n        },\n        empty: new Map()\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * Create a map with one key/value pair\n *\n * @since 2.0.0\n */\nvar singleton = function (k, a) { return new Map([[k, a]]); };\nexports.singleton = singleton;\nfunction fromFoldable(E, M, F) {\n    return function (fka) {\n        var lookupWithKeyE = lookupWithKey(E);\n        return F.reduce(fka, new Map(), function (b, _a) {\n            var k = _a[0], a = _a[1];\n            var bOpt = lookupWithKeyE(k, b);\n            if (O.isSome(bOpt)) {\n                b.set(bOpt.value[0], M.concat(bOpt.value[1], a));\n            }\n            else {\n                b.set(k, a);\n            }\n            return b;\n        });\n    };\n}\nexports.fromFoldable = fromFoldable;\nvar _mapWithIndex = function (fa, f) {\n    var m = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, key = _a[0], a = _a[1];\n        m.set(key, f(key, a));\n    }\n    return m;\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = new Map();\n    var right = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        var ei = f(k, a);\n        if (Either_1.isLeft(ei)) {\n            left.set(k, ei.left);\n        }\n        else {\n            right.set(k, ei.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar partitionWithIndex = function (p) { return function (fa) {\n    var left = new Map();\n    var right = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        if (p(k, a)) {\n            right.set(k, a);\n        }\n        else {\n            left.set(k, a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var m = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        var o = f(k, a);\n        if (O.isSome(o)) {\n            m.set(k, o.value);\n        }\n    }\n    return m;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar filterWithIndex = function (p) { return function (m) {\n    var out = new Map();\n    var entries = m.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        if (p(k, a)) {\n            out.set(k, a);\n        }\n    }\n    return out;\n}; };\nexports.filterWithIndex = filterWithIndex;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return _mapWithIndex(fa, function (_, a) { return f(a); }); };\nvar _filter = function (fa, p) {\n    return _filterWithIndex(fa, function (_, a) { return p(a); });\n};\nvar _filterMap = function (fa, f) { return _filterMapWithIndex(fa, function (_, a) { return f(a); }); };\nvar _partition = function (fa, predicate) {\n    return _partitionWithIndex(fa, function (_, a) { return predicate(a); });\n};\nvar _partitionMap = function (fa, f) { return _partitionMapWithIndex(fa, function (_, a) { return f(a); }); };\nvar _filterWithIndex = function (fa, p) { return function_1.pipe(fa, exports.filterWithIndex(p)); };\nvar _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };\nvar _partitionWithIndex = function (fa, p) { return function_1.pipe(fa, exports.partitionWithIndex(p)); };\nvar _partitionMapWithIndex = function (fa, f) {\n    return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar compact = function (fa) {\n    var m = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], oa = _a[1];\n        if (O.isSome(oa)) {\n            m.set(k, oa.value);\n        }\n    }\n    return m;\n};\nexports.compact = compact;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filter = function (predicate) { return function (fa) { return _filter(fa, predicate); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar filterMap = function (f) { return function (fa) {\n    return _filterMap(fa, f);\n}; };\nexports.filterMap = filterMap;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return _map(fa, f); }; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.7.1\n */\nvar mapWithIndex = function (f) { return function (fa) {\n    return _mapWithIndex(fa, f);\n}; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partition = function (predicate) { return function (fa) { return _partition(fa, predicate); }; };\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nvar partitionMap = function (f) { return function (fa) { return _partitionMap(fa, f); }; };\nexports.partitionMap = partitionMap;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nvar separate = function (fa) {\n    var left = new Map();\n    var right = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], ei = _a[1];\n        if (Either_1.isLeft(ei)) {\n            left.set(k, ei.left);\n        }\n        else {\n            right.set(k, ei.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Map';\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getFilterableWithIndex() {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        mapWithIndex: _mapWithIndex,\n        compact: exports.compact,\n        separate: exports.separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        partitionMapWithIndex: _partitionMapWithIndex,\n        partitionWithIndex: _partitionWithIndex,\n        filterMapWithIndex: _filterMapWithIndex,\n        filterWithIndex: _filterWithIndex\n    };\n}\nexports.getFilterableWithIndex = getFilterableWithIndex;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getWitherable(O) {\n    var TWI = exports.getTraversableWithIndex(O);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: exports.compact,\n        separate: exports.separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        reduce: TWI.reduce,\n        foldMap: TWI.foldMap,\n        reduceRight: TWI.reduceRight,\n        traverse: TWI.traverse,\n        sequence: TWI.sequence,\n        mapWithIndex: _mapWithIndex,\n        reduceWithIndex: TWI.reduceWithIndex,\n        foldMapWithIndex: TWI.foldMapWithIndex,\n        reduceRightWithIndex: TWI.reduceRightWithIndex,\n        traverseWithIndex: TWI.traverseWithIndex,\n        wilt: function (F) {\n            var traverseF = TWI.traverse(F);\n            return function (wa, f) { return F.map(traverseF(wa, f), exports.separate); };\n        },\n        wither: function (F) {\n            var traverseF = TWI.traverse(F);\n            return function (wa, f) { return F.map(traverseF(wa, f), exports.compact); };\n        }\n    };\n}\nexports.getWitherable = getWitherable;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getFoldableWithIndex = function (O) {\n    var keysO = exports.keys(O);\n    var reduceWithIndex = function (fa, b, f) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = f(k, out, fa.get(k));\n        }\n        return out;\n    };\n    var foldMapWithIndex = function (M) { return function (fa, f) {\n        var out = M.empty;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = M.concat(out, f(k, fa.get(k)));\n        }\n        return out;\n    }; };\n    var reduceRightWithIndex = function (fa, b, f) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var k = ks[i];\n            out = f(k, fa.get(k), out);\n        }\n        return out;\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        reduce: function (fa, b, f) { return reduceWithIndex(fa, b, function (_, b, a) { return f(b, a); }); },\n        foldMap: function (M) {\n            var foldMapWithIndexM = foldMapWithIndex(M);\n            return function (fa, f) { return foldMapWithIndexM(fa, function (_, a) { return f(a); }); };\n        },\n        reduceRight: function (fa, b, f) { return reduceRightWithIndex(fa, b, function (_, a, b) { return f(a, b); }); },\n        reduceWithIndex: reduceWithIndex,\n        foldMapWithIndex: foldMapWithIndex,\n        reduceRightWithIndex: reduceRightWithIndex\n    };\n};\nexports.getFoldableWithIndex = getFoldableWithIndex;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getTraversableWithIndex = function (O) {\n    var FWI = exports.getFoldableWithIndex(O);\n    var keysO = exports.keys(O);\n    var traverseWithIndex = function (F) {\n        return function (ta, f) {\n            var fm = F.of(new Map());\n            var ks = keysO(ta);\n            var len = ks.length;\n            var _loop_1 = function (i) {\n                var key = ks[i];\n                var a = ta.get(key);\n                fm = F.ap(F.map(fm, function (m) { return function (b) { return m.set(key, b); }; }), f(key, a));\n            };\n            for (var i = 0; i < len; i++) {\n                _loop_1(i);\n            }\n            return fm;\n        };\n    };\n    var traverse = function (F) {\n        var traverseWithIndexF = traverseWithIndex(F);\n        return function (ta, f) { return traverseWithIndexF(ta, function (_, a) { return f(a); }); };\n    };\n    var sequence = function (F) {\n        var traverseWithIndexF = traverseWithIndex(F);\n        return function (ta) { return traverseWithIndexF(ta, function (_, a) { return a; }); };\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        mapWithIndex: _mapWithIndex,\n        reduce: FWI.reduce,\n        foldMap: FWI.foldMap,\n        reduceRight: FWI.reduceRight,\n        reduceWithIndex: FWI.reduceWithIndex,\n        foldMapWithIndex: FWI.foldMapWithIndex,\n        reduceRightWithIndex: FWI.reduceRightWithIndex,\n        traverse: traverse,\n        sequence: sequence,\n        traverseWithIndex: traverseWithIndex\n    };\n};\nexports.getTraversableWithIndex = getTraversableWithIndex;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use a `new Map()` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = new Map();\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.insertAt = exports.upsertAt;\n/**\n * Use [`Filterable`](#filterable) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.map_ = exports.Filterable;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertAt = exports.getWitherable = exports.getTraversableWithIndex = exports.getTraversable = exports.getFoldableWithIndex = exports.getFoldable = exports.Filterable = exports.Compactable = exports.getFunctorWithIndex = exports.flap = exports.Functor = exports.getFilterableWithIndex = exports.URI = exports.separate = exports.partitionMap = exports.partition = exports.mapWithIndex = exports.map = exports.filterMap = exports.filter = exports.compact = exports.filterWithIndex = exports.filterMapWithIndex = exports.partitionWithIndex = exports.partitionMapWithIndex = exports.fromFoldable = exports.singleton = exports.getMonoid = exports.getEq = exports.empty = exports.isSubmap = exports.lookup = exports.lookupWithKey = exports.pop = exports.modifyAt = exports.updateAt = exports.deleteAt = exports.upsertAt = exports.toUnfoldable = exports.toReadonlyArray = exports.collect = exports.values = exports.keys = exports.elem = exports.member = exports.isEmpty = exports.size = exports.getShow = exports.toMap = exports.fromMap = void 0;\nexports.readonlyMap = void 0;\nvar Either_1 = require(\"./Either\");\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar O = __importStar(require(\"./Option\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\nfunction fromMap(m) {\n    return new Map(m);\n}\nexports.fromMap = fromMap;\n/**\n * @category destructors\n * @since 2.5.0\n */\nfunction toMap(m) {\n    return new Map(m);\n}\nexports.toMap = toMap;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getShow(SK, SA) {\n    return {\n        show: function (m) {\n            var entries = [];\n            m.forEach(function (a, k) {\n                entries.push(\"[\" + SK.show(k) + \", \" + SA.show(a) + \"]\");\n            });\n            return \"new Map([\" + entries.sort().join(', ') + \"])\";\n        }\n    };\n}\nexports.getShow = getShow;\n/**\n * Calculate the number of key/value pairs in a map\n *\n * @since 2.5.0\n */\nfunction size(d) {\n    return d.size;\n}\nexports.size = size;\n/**\n * Test whether or not a map is empty\n *\n * @since 2.5.0\n */\nfunction isEmpty(d) {\n    return d.size === 0;\n}\nexports.isEmpty = isEmpty;\nfunction member(E) {\n    var lookupE = lookup(E);\n    return function (k, m) {\n        if (m === undefined) {\n            var memberE_1 = member(E);\n            return function (m) { return memberE_1(k, m); };\n        }\n        return O.isSome(lookupE(k, m));\n    };\n}\nexports.member = member;\nfunction elem(E) {\n    return function (a, m) {\n        if (m === undefined) {\n            var elemE_1 = elem(E);\n            return function (m) { return elemE_1(a, m); };\n        }\n        var values = m.values();\n        var e;\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var v = e.value;\n            if (E.equals(a, v)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Get a sorted `ReadonlyArray` of the keys contained in a `ReadonlyMap`.\n *\n * @since 2.5.0\n */\nvar keys = function (O) { return function (m) {\n    return Array.from(m.keys()).sort(O.compare);\n}; };\nexports.keys = keys;\n/**\n * Get a sorted `ReadonlyArray` of the values contained in a `ReadonlyMap`.\n *\n * @since 2.5.0\n */\nvar values = function (O) { return function (m) {\n    return Array.from(m.values()).sort(O.compare);\n}; };\nexports.values = values;\n/**\n * @since 2.5.0\n */\nfunction collect(O) {\n    var keysO = exports.keys(O);\n    return function (f) { return function (m) {\n        var out = [];\n        var ks = keysO(m);\n        for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n            var key = ks_1[_i];\n            out.push(f(key, m.get(key)));\n        }\n        return out;\n    }; };\n}\nexports.collect = collect;\n/**\n * Get a sorted `ReadonlyArray` of the key/value pairs contained in a `ReadonlyMap`.\n *\n * @since 2.5.0\n */\nvar toReadonlyArray = function (O) {\n    return collect(O)(function (k, a) { return [k, a]; });\n};\nexports.toReadonlyArray = toReadonlyArray;\nfunction toUnfoldable(ord, U) {\n    var toReadonlyArrayO = exports.toReadonlyArray(ord);\n    return function (d) {\n        var kas = toReadonlyArrayO(d);\n        var len = kas.length;\n        return U.unfold(0, function (b) { return (b < len ? O.some([kas[b], b + 1]) : O.none); });\n    };\n}\nexports.toUnfoldable = toUnfoldable;\n/**\n * Insert or replace a key/value pair in a `ReadonlyMap`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar upsertAt = function (E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k, a) {\n        var lookupWithKeyEk = lookupWithKeyE(k);\n        return function (m) {\n            var found = lookupWithKeyEk(m);\n            if (O.isNone(found)) {\n                var out = new Map(m);\n                out.set(k, a);\n                return out;\n            }\n            else if (found.value[1] !== a) {\n                var out = new Map(m);\n                out.set(found.value[0], a);\n                return out;\n            }\n            return m;\n        };\n    };\n};\nexports.upsertAt = upsertAt;\n/**\n * Delete a key and value from a map\n *\n * @category combinators\n * @since 2.5.0\n */\nvar deleteAt = function (E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k) { return function (m) {\n        var found = lookupWithKeyE(k, m);\n        if (O.isSome(found)) {\n            var r = new Map(m);\n            r.delete(found.value[0]);\n            return r;\n        }\n        return m;\n    }; };\n};\nexports.deleteAt = deleteAt;\n/**\n * @since 2.5.0\n */\nvar updateAt = function (E) {\n    var modifyAtE = exports.modifyAt(E);\n    return function (k, a) { return modifyAtE(k, function () { return a; }); };\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.5.0\n */\nvar modifyAt = function (E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k, f) { return function (m) {\n        var found = lookupWithKeyE(k, m);\n        if (O.isNone(found)) {\n            return O.none;\n        }\n        var _a = found.value, fk = _a[0], fv = _a[1];\n        var next = f(fv);\n        if (next === fv) {\n            return O.some(m);\n        }\n        var r = new Map(m);\n        r.set(fk, next);\n        return O.some(r);\n    }; };\n};\nexports.modifyAt = modifyAt;\n/**\n * Delete a key and value from a map, returning the value as well as the subsequent map\n *\n * @since 2.5.0\n */\nfunction pop(E) {\n    var lookupE = lookup(E);\n    var deleteAtE = exports.deleteAt(E);\n    return function (k) {\n        var deleteAtEk = deleteAtE(k);\n        return function (m) {\n            return function_1.pipe(lookupE(k, m), O.map(function (a) { return [a, deleteAtEk(m)]; }));\n        };\n    };\n}\nexports.pop = pop;\nfunction lookupWithKey(E) {\n    return function (k, m) {\n        if (m === undefined) {\n            var lookupWithKeyE_1 = lookupWithKey(E);\n            return function (m) { return lookupWithKeyE_1(k, m); };\n        }\n        var entries = m.entries();\n        var e;\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = entries.next()).done) {\n            var _a = e.value, ka = _a[0], a = _a[1];\n            if (E.equals(ka, k)) {\n                return O.some([ka, a]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.lookupWithKey = lookupWithKey;\nfunction lookup(E) {\n    var lookupWithKeyE = lookupWithKey(E);\n    return function (k, m) {\n        if (m === undefined) {\n            var lookupE_1 = lookup(E);\n            return function (m) { return lookupE_1(k, m); };\n        }\n        return function_1.pipe(lookupWithKeyE(k, m), O.map(function (_a) {\n            var _ = _a[0], a = _a[1];\n            return a;\n        }));\n    };\n}\nexports.lookup = lookup;\nfunction isSubmap(SK, SA) {\n    var lookupWithKeyS = lookupWithKey(SK);\n    return function (me, that) {\n        if (that === undefined) {\n            var isSubmapSKSA_1 = isSubmap(SK, SA);\n            return function (that) { return isSubmapSKSA_1(that, me); };\n        }\n        var entries = me.entries();\n        var e;\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = entries.next()).done) {\n            var _a = e.value, k = _a[0], a = _a[1];\n            var d2OptA = lookupWithKeyS(k, that);\n            if (O.isNone(d2OptA) || !SK.equals(k, d2OptA.value[0]) || !SA.equals(a, d2OptA.value[1])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nexports.isSubmap = isSubmap;\n/**\n * @since 2.5.0\n */\nexports.empty = \n// the type annotation here is intended (otherwise it doesn't type-check)\nnew Map();\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getEq(SK, SA) {\n    var isSubmapSKSA = isSubmap(SK, SA);\n    return Eq_1.fromEquals(function (x, y) { return isSubmapSKSA(x, y) && isSubmapSKSA(y, x); });\n}\nexports.getEq = getEq;\n/**\n * Gets `Monoid` instance for Maps given `Semigroup` instance for their values\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getMonoid(SK, SA) {\n    var lookupWithKeyS = lookupWithKey(SK);\n    return {\n        concat: function (mx, my) {\n            if (isEmpty(mx)) {\n                return my;\n            }\n            if (isEmpty(my)) {\n                return mx;\n            }\n            var r = new Map(mx);\n            var entries = my.entries();\n            var e;\n            // tslint:disable-next-line: strict-boolean-expressions\n            while (!(e = entries.next()).done) {\n                var _a = e.value, k = _a[0], a = _a[1];\n                var mxOptA = lookupWithKeyS(k, mx);\n                if (O.isSome(mxOptA)) {\n                    r.set(mxOptA.value[0], SA.concat(mxOptA.value[1], a));\n                }\n                else {\n                    r.set(k, a);\n                }\n            }\n            return r;\n        },\n        empty: exports.empty\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * Create a map with one key/value pair\n *\n * @category constructors\n * @since 2.5.0\n */\nvar singleton = function (k, a) { return new Map([[k, a]]); };\nexports.singleton = singleton;\nfunction fromFoldable(E, M, F) {\n    return function (fka) {\n        var lookupWithKeyE = lookupWithKey(E);\n        return F.reduce(fka, new Map(), function (b, _a) {\n            var k = _a[0], a = _a[1];\n            var bOpt = lookupWithKeyE(k, b);\n            if (O.isSome(bOpt)) {\n                b.set(bOpt.value[0], M.concat(bOpt.value[1], a));\n            }\n            else {\n                b.set(k, a);\n            }\n            return b;\n        });\n    };\n}\nexports.fromFoldable = fromFoldable;\nvar _mapWithIndex = function (fa, f) {\n    var m = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, key = _a[0], a = _a[1];\n        m.set(key, f(key, a));\n    }\n    return m;\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    var left = new Map();\n    var right = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        var ei = f(k, a);\n        if (Either_1.isLeft(ei)) {\n            left.set(k, ei.left);\n        }\n        else {\n            right.set(k, ei.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar partitionWithIndex = function (p) { return function (fa) {\n    var left = new Map();\n    var right = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        if (p(k, a)) {\n            right.set(k, a);\n        }\n        else {\n            left.set(k, a);\n        }\n    }\n    return Separated_1.separated(left, right);\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    var m = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        var o = f(k, a);\n        if (O.isSome(o)) {\n            m.set(k, o.value);\n        }\n    }\n    return m;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar filterWithIndex = function (p) { return function (m) {\n    var out = new Map();\n    var entries = m.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], a = _a[1];\n        if (p(k, a)) {\n            out.set(k, a);\n        }\n    }\n    return out;\n}; };\nexports.filterWithIndex = filterWithIndex;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return _mapWithIndex(fa, function (_, a) { return f(a); }); };\nvar _filter = function (fa, p) {\n    return _filterWithIndex(fa, function (_, a) { return p(a); });\n};\nvar _filterMap = function (fa, f) { return _filterMapWithIndex(fa, function (_, a) { return f(a); }); };\nvar _partition = function (fa, predicate) {\n    return _partitionWithIndex(fa, function (_, a) { return predicate(a); });\n};\nvar _partitionMap = function (fa, f) { return _partitionMapWithIndex(fa, function (_, a) { return f(a); }); };\nvar _filterWithIndex = function (fa, p) { return function_1.pipe(fa, exports.filterWithIndex(p)); };\nvar _filterMapWithIndex = function (fa, f) {\n    return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\nvar _partitionWithIndex = function (fa, p) { return function_1.pipe(fa, exports.partitionWithIndex(p)); };\nvar _partitionMapWithIndex = function (fa, f) {\n    return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar compact = function (fa) {\n    var m = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], oa = _a[1];\n        if (O.isSome(oa)) {\n            m.set(k, oa.value);\n        }\n    }\n    return m;\n};\nexports.compact = compact;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (fa) { return _filter(fa, predicate); }; };\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) { return function (fa) { return _filterMap(fa, f); }; };\nexports.filterMap = filterMap;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) { return _map(fa, f); }; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.7.1\n */\nvar mapWithIndex = function (f) { return function (fa) { return _mapWithIndex(fa, f); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) { return function (fa) { return _partition(fa, predicate); }; };\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) { return function (fa) { return _partitionMap(fa, f); }; };\nexports.partitionMap = partitionMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    var left = new Map();\n    var right = new Map();\n    var entries = fa.entries();\n    var e;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!(e = entries.next()).done) {\n        var _a = e.value, k = _a[0], ei = _a[1];\n        if (Either_1.isLeft(ei)) {\n            left.set(k, ei.left);\n        }\n        else {\n            right.set(k, ei.right);\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyMap';\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getFilterableWithIndex() {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        mapWithIndex: _mapWithIndex,\n        compact: exports.compact,\n        separate: exports.separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        partitionMapWithIndex: _partitionMapWithIndex,\n        partitionWithIndex: _partitionWithIndex,\n        filterMapWithIndex: _filterMapWithIndex,\n        filterWithIndex: _filterWithIndex\n    };\n}\nexports.getFilterableWithIndex = getFilterableWithIndex;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getFunctorWithIndex = function () { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n}); };\nexports.getFunctorWithIndex = getFunctorWithIndex;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getFoldable = function (O) {\n    var FWI = exports.getFoldableWithIndex(O);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        reduce: FWI.reduce,\n        foldMap: FWI.foldMap,\n        reduceRight: FWI.reduceRight\n    };\n};\nexports.getFoldable = getFoldable;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getFoldableWithIndex = function (O) {\n    var keysO = exports.keys(O);\n    var reduceWithIndex = function (fa, b, f) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = f(k, out, fa.get(k));\n        }\n        return out;\n    };\n    var foldMapWithIndex = function (M) { return function (fa, f) {\n        var out = M.empty;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = M.concat(out, f(k, fa.get(k)));\n        }\n        return out;\n    }; };\n    var reduceRightWithIndex = function (fa, b, f) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var k = ks[i];\n            out = f(k, fa.get(k), out);\n        }\n        return out;\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        reduce: function (fa, b, f) { return reduceWithIndex(fa, b, function (_, b, a) { return f(b, a); }); },\n        foldMap: function (M) {\n            var foldMapWithIndexM = foldMapWithIndex(M);\n            return function (fa, f) { return foldMapWithIndexM(fa, function (_, a) { return f(a); }); };\n        },\n        reduceRight: function (fa, b, f) { return reduceRightWithIndex(fa, b, function (_, a, b) { return f(a, b); }); },\n        reduceWithIndex: reduceWithIndex,\n        foldMapWithIndex: foldMapWithIndex,\n        reduceRightWithIndex: reduceRightWithIndex\n    };\n};\nexports.getFoldableWithIndex = getFoldableWithIndex;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getTraversable = function (O) {\n    var TWI = exports.getTraversableWithIndex(O);\n    var F = exports.getFoldable(O);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        reduce: F.reduce,\n        foldMap: F.foldMap,\n        reduceRight: F.reduceRight,\n        traverse: TWI.traverse,\n        sequence: TWI.sequence\n    };\n};\nexports.getTraversable = getTraversable;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getTraversableWithIndex = function (O) {\n    var FWI = exports.getFoldableWithIndex(O);\n    var keysO = exports.keys(O);\n    var traverseWithIndex = function (F) {\n        return function (ta, f) {\n            var fm = F.of(new Map());\n            var ks = keysO(ta);\n            var len = ks.length;\n            var _loop_1 = function (i) {\n                var key = ks[i];\n                var a = ta.get(key);\n                fm = F.ap(F.map(fm, function (m) { return function (b) { return m.set(key, b); }; }), f(key, a));\n            };\n            for (var i = 0; i < len; i++) {\n                _loop_1(i);\n            }\n            return fm;\n        };\n    };\n    var traverse = function (F) {\n        var traverseWithIndexF = traverseWithIndex(F);\n        return function (ta, f) { return traverseWithIndexF(ta, function (_, a) { return f(a); }); };\n    };\n    var sequence = function (F) {\n        var traverseWithIndexF = traverseWithIndex(F);\n        return function (ta) { return traverseWithIndexF(ta, function (_, a) { return a; }); };\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        mapWithIndex: _mapWithIndex,\n        reduce: FWI.reduce,\n        foldMap: FWI.foldMap,\n        reduceRight: FWI.reduceRight,\n        reduceWithIndex: FWI.reduceWithIndex,\n        foldMapWithIndex: FWI.foldMapWithIndex,\n        reduceRightWithIndex: FWI.reduceRightWithIndex,\n        traverse: traverse,\n        sequence: sequence,\n        traverseWithIndex: traverseWithIndex\n    };\n};\nexports.getTraversableWithIndex = getTraversableWithIndex;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getWitherable(O) {\n    var TWI = exports.getTraversableWithIndex(O);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: exports.compact,\n        separate: exports.separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        reduce: TWI.reduce,\n        foldMap: TWI.foldMap,\n        reduceRight: TWI.reduceRight,\n        traverse: TWI.traverse,\n        sequence: TWI.sequence,\n        mapWithIndex: _mapWithIndex,\n        reduceWithIndex: TWI.reduceWithIndex,\n        foldMapWithIndex: TWI.foldMapWithIndex,\n        reduceRightWithIndex: TWI.reduceRightWithIndex,\n        traverseWithIndex: TWI.traverseWithIndex,\n        wilt: function (F) {\n            var traverseF = TWI.traverse(F);\n            return function (wa, f) { return F.map(traverseF(wa, f), exports.separate); };\n        },\n        wither: function (F) {\n            var traverseF = TWI.traverse(F);\n            return function (wa, f) { return F.map(traverseF(wa, f), exports.compact); };\n        }\n    };\n}\nexports.getWitherable = getWitherable;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.insertAt = exports.upsertAt;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyMap = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n","\n/**\n * A meet-semilattice (or lower semilattice) is a semilattice whose operation is called `meet`, and which can be thought\n * of as a greatest lower bound.\n *\n * A `MeetSemilattice` must satisfy the following laws:\n *\n * - Associativity: `a ∧ (b ∧ c) <-> (a ∧ b) ∧ c`\n * - Commutativity: `a ∧ b <-> b ∧ a`\n * - Idempotency:   `a ∧ a <-> a`\n *\n * @since 2.0.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOptionM = exports.alt = exports.chain = exports.ap = exports.map = exports.getOrElse = exports.matchE = exports.match = exports.fromEither = exports.fromPredicate = exports.chainOptionK = exports.fromOptionK = exports.chainNullableK = exports.fromNullableK = exports.fromNullable = exports.fromF = exports.zero = exports.some = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar O = __importStar(require(\"./Option\"));\nfunction some(F) {\n    return function_1.flow(O.some, F.of);\n}\nexports.some = some;\nfunction zero(F) {\n    return function_1.constant(F.of(O.none));\n}\nexports.zero = zero;\nfunction fromF(F) {\n    return function (ma) { return F.map(ma, O.some); };\n}\nexports.fromF = fromF;\nfunction fromNullable(F) {\n    return function_1.flow(O.fromNullable, F.of);\n}\nexports.fromNullable = fromNullable;\nfunction fromNullableK(F) {\n    var fromNullableF = fromNullable(F);\n    return function (f) { return function_1.flow(f, fromNullableF); };\n}\nexports.fromNullableK = fromNullableK;\nfunction chainNullableK(M) {\n    var chainM = chain(M);\n    var fromNullableKM = fromNullableK(M);\n    return function (f) { return chainM(fromNullableKM(f)); };\n}\nexports.chainNullableK = chainNullableK;\nfunction fromOptionK(F) {\n    return function (f) { return function_1.flow(f, F.of); };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(M) {\n    var chainM = chain(M);\n    var fromOptionKM = fromOptionK(M);\n    return function (f) { return chainM(fromOptionKM(f)); };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromPredicate(F) {\n    return function (predicate) { return function (a) { return F.of(O.fromPredicate(predicate)(a)); }; };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromEither(F) {\n    return function_1.flow(O.fromEither, F.of);\n}\nexports.fromEither = fromEither;\nfunction match(F) {\n    return function (onNone, onSome) { return function (ma) { return F.map(ma, O.match(onNone, onSome)); }; };\n}\nexports.match = match;\nfunction matchE(M) {\n    return function (onNone, onSome) { return function (ma) { return M.chain(ma, O.match(onNone, onSome)); }; };\n}\nexports.matchE = matchE;\nfunction getOrElse(M) {\n    return function (onNone) { return function (fa) { return M.chain(fa, O.match(onNone, M.of)); }; };\n}\nexports.getOrElse = getOrElse;\nfunction map(F) {\n    return Functor_1.map(F, O.Functor);\n}\nexports.map = map;\nfunction ap(F) {\n    return Apply_1.ap(F, O.Apply);\n}\nexports.ap = ap;\nfunction chain(M) {\n    var zeroM = zero(M);\n    return function (f) { return function (ma) {\n        return M.chain(ma, O.match(function () { return zeroM(); }, f));\n    }; };\n}\nexports.chain = chain;\nfunction alt(M) {\n    var _some = some(M);\n    return function (second) { return function (first) { return M.chain(first, O.match(second, _some)); }; };\n}\nexports.alt = alt;\n/** @deprecated */\nfunction getOptionM(M) {\n    var apM = ap(M);\n    var mapM = map(M);\n    var chainM = chain(M);\n    var altM = alt(M);\n    var foldM = matchE(M);\n    var getOrElseM = getOrElse(M);\n    var zeroM = zero(M);\n    return {\n        map: function (fa, f) { return function_1.pipe(fa, mapM(f)); },\n        ap: function (fab, fa) { return function_1.pipe(fab, apM(fa)); },\n        of: some(M),\n        chain: function (ma, f) { return function_1.pipe(ma, chainM(f)); },\n        alt: function (fa, that) { return function_1.pipe(fa, altM(that)); },\n        fold: function (fa, onNone, onSome) { return function_1.pipe(fa, foldM(onNone, onSome)); },\n        getOrElse: function (fa, onNone) { return function_1.pipe(fa, getOrElseM(onNone)); },\n        fromM: fromF(M),\n        none: function () { return zeroM(); }\n    };\n}\nexports.getOptionM = getOptionM;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.monoidOrdering = exports.eqOrdering = exports.semigroupOrdering = exports.invert = exports.sign = exports.Monoid = exports.Semigroup = exports.Eq = exports.reverse = exports.match = void 0;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nvar match = function (onLessThan, onEqual, onGreaterThan) { return function (o) {\n    return o === -1 ? onLessThan() : o === 0 ? onEqual() : onGreaterThan();\n}; };\nexports.match = match;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nvar reverse = function (o) { return (o === -1 ? 1 : o === 1 ? -1 : 0); };\nexports.reverse = reverse;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Eq = {\n    equals: function (x, y) { return x === y; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Semigroup = {\n    concat: function (x, y) { return (x !== 0 ? x : y); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monoid = {\n    concat: exports.Semigroup.concat,\n    empty: 0\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nvar sign = function (n) { return (n <= -1 ? -1 : n >= 1 ? 1 : 0); };\nexports.sign = sign;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.invert = exports.reverse;\n/**\n * Use [`Semigroup`](#semigroup) instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.semigroupOrdering = exports.Semigroup;\n/**\n * Use [`Eq`](#eq) instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.eqOrdering = exports.Eq;\n/**\n * Use [`Monoid`](#monoid) instead\n *\n * @category instances\n * @since 2.4.0\n * @deprecated\n */\nexports.monoidOrdering = exports.Monoid;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pipe = exports.pipeable = void 0;\nvar function_1 = require(\"./function\");\nvar isFunctor = function (I) { return typeof I.map === 'function'; };\nvar isContravariant = function (I) { return typeof I.contramap === 'function'; };\nvar isFunctorWithIndex = function (I) { return typeof I.mapWithIndex === 'function'; };\nvar isApply = function (I) { return typeof I.ap === 'function'; };\nvar isChain = function (I) { return typeof I.chain === 'function'; };\nvar isBifunctor = function (I) { return typeof I.bimap === 'function'; };\nvar isExtend = function (I) { return typeof I.extend === 'function'; };\nvar isFoldable = function (I) { return typeof I.reduce === 'function'; };\nvar isFoldableWithIndex = function (I) { return typeof I.reduceWithIndex === 'function'; };\nvar isAlt = function (I) { return typeof I.alt === 'function'; };\nvar isCompactable = function (I) { return typeof I.compact === 'function'; };\nvar isFilterable = function (I) { return typeof I.filter === 'function'; };\nvar isFilterableWithIndex = function (I) {\n    return typeof I.filterWithIndex === 'function';\n};\nvar isProfunctor = function (I) { return typeof I.promap === 'function'; };\nvar isSemigroupoid = function (I) { return typeof I.compose === 'function'; };\nvar isMonadThrow = function (I) { return typeof I.throwError === 'function'; };\n/** @deprecated */\nfunction pipeable(I) {\n    var r = {};\n    if (isFunctor(I)) {\n        var map = function (f) { return function (fa) { return I.map(fa, f); }; };\n        r.map = map;\n    }\n    if (isContravariant(I)) {\n        var contramap = function (f) { return function (fa) { return I.contramap(fa, f); }; };\n        r.contramap = contramap;\n    }\n    if (isFunctorWithIndex(I)) {\n        var mapWithIndex = function (f) { return function (fa) { return I.mapWithIndex(fa, f); }; };\n        r.mapWithIndex = mapWithIndex;\n    }\n    if (isApply(I)) {\n        var ap = function (fa) { return function (fab) { return I.ap(fab, fa); }; };\n        var apFirst = function (fb) { return function (fa) {\n            return I.ap(I.map(fa, function (a) { return function () { return a; }; }), fb);\n        }; };\n        r.ap = ap;\n        r.apFirst = apFirst;\n        r.apSecond = function (fb) { return function (fa) {\n            return I.ap(I.map(fa, function () { return function (b) { return b; }; }), fb);\n        }; };\n    }\n    if (isChain(I)) {\n        var chain = function (f) { return function (ma) { return I.chain(ma, f); }; };\n        var chainFirst = function (f) { return function (ma) { return I.chain(ma, function (a) { return I.map(f(a), function () { return a; }); }); }; };\n        var flatten = function (mma) { return I.chain(mma, function_1.identity); };\n        r.chain = chain;\n        r.chainFirst = chainFirst;\n        r.flatten = flatten;\n    }\n    if (isBifunctor(I)) {\n        var bimap = function (f, g) { return function (fa) { return I.bimap(fa, f, g); }; };\n        var mapLeft = function (f) { return function (fa) { return I.mapLeft(fa, f); }; };\n        r.bimap = bimap;\n        r.mapLeft = mapLeft;\n    }\n    if (isExtend(I)) {\n        var extend = function (f) { return function (wa) { return I.extend(wa, f); }; };\n        var duplicate = function (wa) { return I.extend(wa, function_1.identity); };\n        r.extend = extend;\n        r.duplicate = duplicate;\n    }\n    if (isFoldable(I)) {\n        var reduce = function (b, f) { return function (fa) { return I.reduce(fa, b, f); }; };\n        var foldMap = function (M) {\n            var foldMapM = I.foldMap(M);\n            return function (f) { return function (fa) { return foldMapM(fa, f); }; };\n        };\n        var reduceRight = function (b, f) { return function (fa) { return I.reduceRight(fa, b, f); }; };\n        r.reduce = reduce;\n        r.foldMap = foldMap;\n        r.reduceRight = reduceRight;\n    }\n    if (isFoldableWithIndex(I)) {\n        var reduceWithIndex = function (b, f) { return function (fa) {\n            return I.reduceWithIndex(fa, b, f);\n        }; };\n        var foldMapWithIndex = function (M) {\n            var foldMapM = I.foldMapWithIndex(M);\n            return function (f) { return function (fa) { return foldMapM(fa, f); }; };\n        };\n        var reduceRightWithIndex = function (b, f) { return function (fa) {\n            return I.reduceRightWithIndex(fa, b, f);\n        }; };\n        r.reduceWithIndex = reduceWithIndex;\n        r.foldMapWithIndex = foldMapWithIndex;\n        r.reduceRightWithIndex = reduceRightWithIndex;\n    }\n    if (isAlt(I)) {\n        var alt = function (that) { return function (fa) { return I.alt(fa, that); }; };\n        r.alt = alt;\n    }\n    if (isCompactable(I)) {\n        r.compact = I.compact;\n        r.separate = I.separate;\n    }\n    if (isFilterable(I)) {\n        var filter = function (predicate) { return function (fa) {\n            return I.filter(fa, predicate);\n        }; };\n        var filterMap = function (f) { return function (fa) { return I.filterMap(fa, f); }; };\n        var partition = function (predicate) { return function (fa) {\n            return I.partition(fa, predicate);\n        }; };\n        var partitionMap = function (f) { return function (fa) { return I.partitionMap(fa, f); }; };\n        r.filter = filter;\n        r.filterMap = filterMap;\n        r.partition = partition;\n        r.partitionMap = partitionMap;\n    }\n    if (isFilterableWithIndex(I)) {\n        var filterWithIndex = function (predicateWithIndex) { return function (fa) { return I.filterWithIndex(fa, predicateWithIndex); }; };\n        var filterMapWithIndex = function (f) { return function (fa) {\n            return I.filterMapWithIndex(fa, f);\n        }; };\n        var partitionWithIndex = function (predicateWithIndex) { return function (fa) { return I.partitionWithIndex(fa, predicateWithIndex); }; };\n        var partitionMapWithIndex = function (f) { return function (fa) {\n            return I.partitionMapWithIndex(fa, f);\n        }; };\n        r.filterWithIndex = filterWithIndex;\n        r.filterMapWithIndex = filterMapWithIndex;\n        r.partitionWithIndex = partitionWithIndex;\n        r.partitionMapWithIndex = partitionMapWithIndex;\n    }\n    if (isProfunctor(I)) {\n        var promap = function (f, g) { return function (fa) { return I.promap(fa, f, g); }; };\n        r.promap = promap;\n    }\n    if (isSemigroupoid(I)) {\n        var compose = function (that) { return function (fa) { return I.compose(fa, that); }; };\n        r.compose = compose;\n    }\n    if (isMonadThrow(I)) {\n        var fromOption = function (onNone) { return function (ma) {\n            return ma._tag === 'None' ? I.throwError(onNone()) : I.of(ma.value);\n        }; };\n        var fromEither = function (ma) {\n            return ma._tag === 'Left' ? I.throwError(ma.left) : I.of(ma.right);\n        };\n        var fromPredicate = function (predicate, onFalse) { return function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); }; };\n        var filterOrElse = function (predicate, onFalse) { return function (ma) { return I.chain(ma, function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); }); }; };\n        r.fromOption = fromOption;\n        r.fromEither = fromEither;\n        r.fromPredicate = fromPredicate;\n        r.filterOrElse = filterOrElse;\n    }\n    return r;\n}\nexports.pipeable = pipeable;\n/**\n * Use [`pipe`](https://gcanti.github.io/fp-ts/modules/function.ts.html#flow) from `function` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.pipe = function_1.pipe;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomElem = exports.randomBool = exports.randomRange = exports.randomInt = exports.random = void 0;\n/**\n * @since 2.0.0\n */\nvar IO_1 = require(\"./IO\");\nvar function_1 = require(\"./function\");\n/**\n * Returns a random number between 0 (inclusive) and 1 (exclusive). This is a direct wrapper around JavaScript's\n * `Math.random()`.\n *\n * @since 2.0.0\n */\nvar random = function () { return Math.random(); };\nexports.random = random;\n/**\n * Takes a range specified by `low` (the first argument) and `high` (the second), and returns a random integer uniformly\n * distributed in the closed interval `[low, high]`. It is unspecified what happens if `low > high`, or if either of\n * `low` or `high` is not an integer.\n *\n * @since 2.0.0\n */\nfunction randomInt(low, high) {\n    return function_1.pipe(exports.random, IO_1.map(function (n) { return Math.floor((high - low + 1) * n + low); }));\n}\nexports.randomInt = randomInt;\n/**\n * Returns a random number between a minimum value (inclusive) and a maximum value (exclusive). It is unspecified what\n * happens if `maximum < minimum`.\n *\n * @since 2.0.0\n */\nfunction randomRange(min, max) {\n    return function_1.pipe(exports.random, IO_1.map(function (n) { return (max - min) * n + min; }));\n}\nexports.randomRange = randomRange;\n/**\n * Returns a random boolean value with an equal chance of being `true` or `false`\n *\n * @since 2.0.0\n */\nexports.randomBool = \n/*#__PURE__*/\nfunction_1.pipe(exports.random, IO_1.map(function (n) { return n < 0.5; }));\n/**\n * Returns a random element of a `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nvar randomElem = function (as) {\n    return function_1.pipe(randomInt(0, as.length - 1), IO_1.map(function (i) { return as[i]; }));\n};\nexports.randomElem = randomElem;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMonoid = exports.getSemigroup = exports.reader = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.Do = exports.bindW = exports.bind = exports.bindTo = exports.Choice = exports.Strong = exports.Category = exports.Profunctor = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.right = exports.left = exports.second = exports.first = exports.id = exports.promap = exports.compose = exports.flatten = exports.chain = exports.chainW = exports.of = exports.ap = exports.apW = exports.map = exports.local = exports.asks = exports.ask = void 0;\n/**\n * @since 2.0.0\n */\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar E = __importStar(require(\"./Either\"));\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Chain_1 = require(\"./Chain\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Reads the current context\n *\n * @category constructors\n * @since 2.0.0\n */\nvar ask = function () { return function_1.identity; };\nexports.ask = ask;\n/**\n * Projects a value from the global context in a Reader\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.asks = function_1.identity;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Changes the value of the local context during the execution of the action `ma` (similar to `Contravariant`'s\n * `contramap`).\n *\n * @category combinators\n * @since 2.0.0\n */\nvar local = function (f) { return function (ma) { return function (r2) {\n    return ma(f(r2));\n}; }; };\nexports.local = local;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\nvar _compose = function (bc, ab) { return function_1.pipe(bc, exports.compose(ab)); };\nvar _promap = function (fea, f, g) { return function_1.pipe(fea, exports.promap(f, g)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return function (r) { return f(fa(r)); }; }; };\nexports.map = map;\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) { return function (r) { return fab(r)(fa(r)); }; }; };\nexports.apW = apW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = function_1.constant;\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nvar chainW = function (f) { return function (fa) { return function (r) { return f(fa(r))(r); }; }; };\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category Semigroupoid\n * @since 2.0.0\n */\nvar compose = function (ab) { return function (bc) { return function_1.flow(ab, bc); }; };\nexports.compose = compose;\n/**\n * @category Profunctor\n * @since 2.0.0\n */\nvar promap = function (f, g) { return function (fea) { return function (a) { return g(fea(f(a))); }; }; };\nexports.promap = promap;\n/**\n * @category Category\n * @since 2.0.0\n */\nvar id = function () { return function_1.identity; };\nexports.id = id;\n/**\n * @category Strong\n * @since 2.10.0\n */\nvar first = function (pab) { return function (_a) {\n    var a = _a[0], c = _a[1];\n    return [pab(a), c];\n}; };\nexports.first = first;\n/**\n * @category Strong\n * @since 2.10.0\n */\nvar second = function (pbc) { return function (_a) {\n    var a = _a[0], b = _a[1];\n    return [a, pbc(b)];\n}; };\nexports.second = second;\n/**\n * @category Choice\n * @since 2.10.0\n */\nvar left = function (pab) { return E.fold(function (a) { return E.left(pab(a)); }, E.right); };\nexports.left = left;\n/**\n * @category Choice\n * @since 2.10.0\n */\nvar right = function (pbc) { return E.fold(E.left, function (b) { return E.right(pbc(b)); }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Reader';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Profunctor = {\n    URI: exports.URI,\n    map: _map,\n    promap: _promap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Category = {\n    URI: exports.URI,\n    compose: _compose,\n    id: exports.id\n};\n/**\n * @category instances\n * @since 2.8.3\n */\nexports.Strong = {\n    URI: exports.URI,\n    map: _map,\n    promap: _promap,\n    first: exports.first,\n    second: exports.second\n};\n/**\n * @category instances\n * @since 2.8.3\n */\nexports.Choice = {\n    URI: exports.URI,\n    map: _map,\n    promap: _promap,\n    left: exports.left,\n    right: exports.right\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) { return function (r) { return as.map(function (x, i) { return f(i, x)(r); }); }; }; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.reader = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    promap: _promap,\n    compose: _compose,\n    id: exports.id,\n    first: exports.first,\n    second: exports.second,\n    left: exports.left,\n    right: exports.right\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getSemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonadThrow = exports.Alt = exports.Bifunctor = exports.chainFirstW = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getAltReaderValidation = exports.getApplicativeReaderValidation = exports.getFilterable = exports.getCompactable = exports.URI = exports.throwError = exports.altW = exports.alt = exports.flatten = exports.chainW = exports.chain = exports.of = exports.apW = exports.ap = exports.mapLeft = exports.bimap = exports.map = exports.swap = exports.orElseW = exports.orElse = exports.toUnion = exports.getOrElseW = exports.getOrElse = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromEither = exports.asks = exports.ask = exports.leftReader = exports.rightReader = exports.right = exports.left = void 0;\nexports.local = exports.getReaderValidation = exports.getSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.readerEither = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.fromEitherK = exports.filterOrElseW = exports.filterOrElse = exports.fromPredicate = exports.chainEitherKW = exports.chainEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromOption = exports.FromEither = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Compactable_1 = require(\"./Compactable\");\nvar E = __importStar(require(\"./Either\"));\nvar ET = __importStar(require(\"./EitherT\"));\nvar Filterable_1 = require(\"./Filterable\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar R = __importStar(require(\"./Reader\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.left = \n/*#__PURE__*/\nET.left(R.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.right = \n/*#__PURE__*/\nET.right(R.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightReader = \n/*#__PURE__*/\nET.rightF(R.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftReader = \n/*#__PURE__*/\nET.leftF(R.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar ask = function () { return E.right; };\nexports.ask = ask;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar asks = function (f) { return function_1.flow(f, E.right); };\nexports.asks = asks;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = R.of;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/\nET.match(R.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.matchE = \n/*#__PURE__*/\nET.matchE(R.Monad);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchEW = exports.matchE;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n/**\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = \n/*#__PURE__*/\nET.getOrElse(R.Monad);\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexports.getOrElseW = exports.getOrElse;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nET.toUnion(R.Functor);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = \n/*#__PURE__*/\nET.orElse(R.Monad);\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.orElseW = exports.orElse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.swap = \n/*#__PURE__*/\nET.swap(R.Functor);\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexports.map = \n/*#__PURE__*/\nET.map(R.Functor);\n/**\n * Map a pair of functions over the two last type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.bimap = \n/*#__PURE__*/\nET.bimap(R.Functor);\n/**\n * Map a function over the second type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.mapLeft = \n/*#__PURE__*/\nET.mapLeft(R.Functor);\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = \n/*#__PURE__*/\nET.ap(R.Apply);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * @category Pointed\n * @since 2.8.5\n */\nexports.of = exports.right;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = \n/*#__PURE__*/\nET.chain(R.Monad);\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexports.chainW = exports.chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = \n/*#__PURE__*/\nET.alt(R.Monad);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexports.altW = exports.alt;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'ReaderEither';\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var C = E.getCompactable(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: Compactable_1.compact(R.Functor, C),\n        separate: Compactable_1.separate(R.Functor, C, E.Functor)\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * @category instances\n * @since 2.10.0\n */\nfunction getFilterable(M) {\n    var F = E.getFilterable(M);\n    var C = exports.getCompactable(M);\n    var filter = Filterable_1.filter(R.Functor, F);\n    var filterMap = Filterable_1.filterMap(R.Functor, F);\n    var partition = Filterable_1.partition(R.Functor, F);\n    var partitionMap = Filterable_1.partitionMap(R.Functor, F);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: C.compact,\n        separate: C.separate,\n        filter: function (fa, predicate) { return function_1.pipe(fa, filter(predicate)); },\n        filterMap: function (fa, f) { return function_1.pipe(fa, filterMap(f)); },\n        partition: function (fa, predicate) { return function_1.pipe(fa, partition(predicate)); },\n        partitionMap: function (fa, f) { return function_1.pipe(fa, partitionMap(f)); }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicativeReaderValidation(S) {\n    var ap = Apply_1.ap(R.Apply, E.getApplicativeValidation(S));\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return function_1.pipe(fab, ap(fa)); },\n        of: exports.of\n    };\n}\nexports.getApplicativeReaderValidation = getApplicativeReaderValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getAltReaderValidation(S) {\n    var alt = ET.altValidation(R.Monad, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (fa, that) { return function_1.pipe(fa, alt(that)); }\n    };\n}\nexports.getAltReaderValidation = getAltReaderValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nFromEither_1.chainOptionK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`chainEitherK`](#chaineitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nexports.chainEitherKW = exports.chainEitherK;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = \n/*#__PURE__*/\nFromEither_1.filterOrElse(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) {\n    return function_1.flow(R.traverseArrayWithIndex(f), R.map(E.sequenceArray));\n};\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.readerEither = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    alt: _alt,\n    throwError: exports.left\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getSemigroup = function (S) {\n    return Apply_1.getApplySemigroup(R.Apply)(E.getSemigroup(S));\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Use [`getApplicativeReaderValidation`](#getapplicativereadervalidation) and [`getAltReaderValidation`](#getaltreadervalidation) instead.\n *\n * @category instances\n * @since 2.3.0\n * @deprecated\n */\nfunction getReaderValidation(SE) {\n    var applicativeReaderValidation = getApplicativeReaderValidation(SE);\n    var altReaderValidation = getAltReaderValidation(SE);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: applicativeReaderValidation.ap,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        alt: altReaderValidation.alt,\n        throwError: exports.throwError\n    };\n}\nexports.getReaderValidation = getReaderValidation;\n/**\n * Use [`local`](./Reader.ts.html#local) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.local = R.local;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReaderM = exports.fromReader = exports.chain = exports.ap = exports.map = exports.of = void 0;\nvar function_1 = require(\"./function\");\nfunction of(F) {\n    return function (a) { return function () { return F.of(a); }; };\n}\nexports.of = of;\nfunction map(F) {\n    return function (f) { return function (fa) { return function (r) { return F.map(fa(r), f); }; }; };\n}\nexports.map = map;\nfunction ap(F) {\n    return function (fa) { return function (fab) { return function (r) { return F.ap(fab(r), fa(r)); }; }; };\n}\nexports.ap = ap;\nfunction chain(M) {\n    return function (f) { return function (ma) { return function (r) { return M.chain(ma(r), function (a) { return f(a)(r); }); }; }; };\n}\nexports.chain = chain;\nfunction fromReader(F) {\n    return function (ma) { return function_1.flow(ma, F.of); };\n}\nexports.fromReader = fromReader;\n/** @deprecated */\n/* istanbul ignore next */\nfunction getReaderM(M) {\n    var _ap = ap(M);\n    var _map = map(M);\n    var _chain = chain(M);\n    return {\n        map: function (fa, f) { return function_1.pipe(fa, _map(f)); },\n        ap: function (fab, fa) { return function_1.pipe(fab, _ap(fa)); },\n        of: of(M),\n        chain: function (ma, f) { return function_1.pipe(ma, _chain(f)); },\n        ask: function () { return M.of; },\n        asks: function (f) { return function_1.flow(f, M.of); },\n        local: function (ma, f) { return function (q) { return ma(f(q)); }; },\n        fromReader: fromReader(M),\n        fromM: function (ma) { return function () { return ma; }; }\n    };\n}\nexports.getReaderM = getReaderM;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSemigroup = exports.readerTaskSeq = exports.readerTask = exports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.chainFirst = exports.MonadTask = exports.MonadIO = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = exports.apSecond = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.flatten = exports.chainW = exports.chain = exports.of = exports.apW = exports.ap = exports.map = exports.fromIO = exports.fromTask = exports.asks = exports.ask = exports.fromReader = void 0;\nexports.local = exports.run = exports.getMonoid = void 0;\n/**\n * @since 2.3.0\n */\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar R = __importStar(require(\"./Reader\"));\nvar RT = __importStar(require(\"./ReaderT\"));\nvar T = __importStar(require(\"./Task\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.3.0\n */\nexports.fromReader = \n/*#__PURE__*/\nRT.fromReader(T.Pointed);\n/**\n * @category constructors\n * @since 2.3.0\n */\nvar ask = function () { return T.of; };\nexports.ask = ask;\n/**\n * @category constructors\n * @since 2.3.0\n */\nvar asks = function (f) { return function_1.flow(f, T.of); };\nexports.asks = asks;\n/**\n * @category constructors\n * @since 2.3.0\n */\nexports.fromTask = \n/*#__PURE__*/\nR.of;\n/**\n * @category constructors\n * @since 2.3.0\n */\nexports.fromIO = \n/*#__PURE__*/\nfunction_1.flow(T.fromIO, exports.fromTask);\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _apPar = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _apSeq = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.3.0\n */\nexports.map = \n/*#__PURE__*/\nRT.map(T.Functor);\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.3.0\n */\nexports.ap = \n/*#__PURE__*/\nRT.ap(T.ApplyPar);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * @category Pointed\n * @since 2.3.0\n */\nexports.of = \n/*#__PURE__*/\nRT.of(T.Pointed);\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.3.0\n */\nexports.chain = \n/*#__PURE__*/\nRT.chain(T.Monad);\n/**\n * Less strict version of  [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.7\n */\nexports.chainW = exports.chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.3.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.3.0\n */\nexports.URI = 'ReaderTask';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.3.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.3.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.ApplyPar);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.3.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromTaskK = \n/*#__PURE__*/\nFromTask_1.fromTaskK(exports.FromTask);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainTaskK = \n/*#__PURE__*/\nFromTask_1.chainTaskK(exports.FromTask, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstTaskK = \n/*#__PURE__*/\nFromTask_1.chainFirstTaskK(exports.FromTask, exports.Chain);\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.ApplyPar);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) {\n    return function_1.flow(R.traverseArrayWithIndex(f), R.map(T.sequenceArray));\n};\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @since 2.10.0\n */\nvar traverseSeqArrayWithIndex = function (f) {\n    return function_1.flow(R.traverseArrayWithIndex(f), R.map(T.sequenceSeqArray));\n};\nexports.traverseSeqArrayWithIndex = traverseSeqArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @since 2.10.0\n */\nvar traverseSeqArray = function (f) { return exports.traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @since 2.10.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/\nexports.traverseSeqArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.3.0\n * @deprecated\n */\nexports.readerTask = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.3.0\n * @deprecated\n */\nexports.readerTaskSeq = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apSeq,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.3.0\n * @deprecated\n */\nexports.getSemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.ApplySeq);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.3.0\n * @deprecated\n */\nexports.getMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.ApplicativeSeq);\n/**\n * @since 2.4.0\n * @deprecated\n */\n/* istanbul ignore next */\nfunction run(ma, r) {\n    return ma(r)();\n}\nexports.run = run;\n/**\n * Use [`local`](./Reader.ts.html#local) instead.\n *\n * @category combinators\n * @since 2.3.0\n * @deprecated\n */\nexports.local = R.local;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMonoid = exports.getSemigroup = exports.taskSeq = exports.task = exports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.never = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.chainFirst = exports.MonadTask = exports.MonadIO = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = exports.apSecond = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.Functor = exports.getRaceMonoid = exports.URI = exports.fromTask = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.delay = exports.fromIO = void 0;\n/**\n * ```ts\n * interface Task<A> {\n *   (): Promise<A>\n * }\n * ```\n *\n * `Task<A>` represents an asynchronous computation that yields a value of type `A` and **never fails**.\n * If you want to represent an asynchronous computation that may fail, please see `TaskEither`.\n *\n * @since 2.0.0\n */\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar FromIO_1 = require(\"./FromIO\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromIO = function (ma) { return function () { return Promise.resolve(ma()); }; };\nexports.fromIO = fromIO;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Creates a task that will complete after a time delay\n *\n * @example\n * import { sequenceT } from 'fp-ts/Apply'\n * import * as T from 'fp-ts/Task'\n *\n * async function test() {\n *   const log: Array<string> = []\n *   const append = (message: string): T.Task<void> =>\n *     T.fromIO(() => {\n *       log.push(message)\n *     })\n *   const fa = append('a')\n *   const fb = append('b')\n *   const fc = T.delay(10)(append('c'))\n *   const fd = append('d')\n *   await sequenceT(T.ApplyPar)(fa, fb, fc, fd)()\n *   assert.deepStrictEqual(log, ['a', 'b', 'd', 'c'])\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.0.0\n */\nfunction delay(millis) {\n    return function (ma) { return function () {\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                // tslint:disable-next-line: no-floating-promises\n                ma().then(resolve);\n            }, millis);\n        });\n    }; };\n}\nexports.delay = delay;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _apPar = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _apSeq = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return function () { return fa().then(f); }; }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) { return function () {\n    return Promise.all([fab(), fa()]).then(function (_a) {\n        var f = _a[0], a = _a[1];\n        return f(a);\n    });\n}; }; };\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nvar of = function (a) { return function () { return Promise.resolve(a); }; };\nexports.of = of;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) { return function () {\n    return ma().then(function (a) { return f(a)(); });\n}; }; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category FromTask\n * @since 2.7.0\n * @deprecated\n */\nexports.fromTask = function_1.identity;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Task';\n/**\n * Monoid returning the first completed task.\n *\n * Note: uses `Promise.race` internally.\n *\n * @example\n * import * as T from 'fp-ts/Task'\n *\n * async function test() {\n *   const S = T.getRaceMonoid<string>()\n *   const fa = T.delay(20)(T.of('a'))\n *   const fb = T.delay(10)(T.of('b'))\n *   assert.deepStrictEqual(await S.concat(fa, fb)(), 'b')\n * }\n *\n * test()\n *\n * @category instances\n * @since 2.0.0\n */\nfunction getRaceMonoid() {\n    return {\n        concat: function (x, y) { return function () { return Promise.race([x(), y()]); }; },\n        empty: exports.never\n    };\n}\nexports.getRaceMonoid = getRaceMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.ApplyPar);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * A `Task` that never completes.\n *\n * @since 2.0.0\n */\nvar never = function () { return new Promise(function (_) { return undefined; }); };\nexports.never = never;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.ApplyPar);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) { return function () { return Promise.all(as.map(function (x, i) { return f(i, x)(); })); }; }; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArrayWithIndex = function (f) { return function (as) { return function () {\n    return as.reduce(function (acc, a, i) {\n        return acc.then(function (bs) {\n            return f(i, a)().then(function (b) {\n                bs.push(b);\n                return bs;\n            });\n        });\n    }, Promise.resolve([]));\n}; }; };\nexports.traverseSeqArrayWithIndex = traverseSeqArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArray = function (f) {\n    return exports.traverseSeqArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/\nexports.traverseSeqArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.task = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.taskSeq = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apSeq,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getSemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.ApplySeq);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * Lift a monoid into 'Task', the inner values are concatenated using the provided `Monoid`.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.ApplicativeSeq);\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCompactable = exports.URI = exports.throwError = exports.altW = exports.alt = exports.flatten = exports.chainW = exports.chain = exports.of = exports.apW = exports.ap = exports.mapLeft = exports.bimap = exports.map = exports.chainTaskEitherK = exports.chainTaskEitherKW = exports.fromTaskEitherK = exports.chainIOEitherK = exports.chainIOEitherKW = exports.fromIOEitherK = exports.swap = exports.orElseW = exports.orElse = exports.toUnion = exports.getOrElseW = exports.getOrElse = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromEither = exports.asks = exports.ask = exports.leftIO = exports.fromTask = exports.fromIO = exports.rightIO = exports.fromReaderEither = exports.fromIOEither = exports.leftReaderTask = exports.rightReaderTask = exports.leftReader = exports.rightReader = exports.leftTask = exports.rightTask = exports.right = exports.left = exports.fromTaskEither = void 0;\nexports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.bracket = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.fromEitherK = exports.filterOrElseW = exports.filterOrElse = exports.fromPredicate = exports.chainEitherKW = exports.chainEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromOption = exports.FromEither = exports.Alt = exports.Bifunctor = exports.chainFirstW = exports.chainFirst = exports.MonadThrow = exports.MonadTask = exports.MonadIO = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = exports.apSecond = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.Functor = exports.getAltReaderTaskValidation = exports.getApplicativeReaderTaskValidation = exports.getFilterable = void 0;\nexports.local = exports.run = exports.getReaderTaskValidation = exports.getSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.readerTaskEitherSeq = exports.readerTaskEither = exports.sequenceSeqArray = exports.traverseSeqArray = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Compactable_1 = require(\"./Compactable\");\nvar E = __importStar(require(\"./Either\"));\nvar ET = __importStar(require(\"./EitherT\"));\nvar Filterable_1 = require(\"./Filterable\");\nvar FromEither_1 = require(\"./FromEither\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar R = __importStar(require(\"./Reader\"));\nvar RT = __importStar(require(\"./ReaderTask\"));\nvar T = __importStar(require(\"./Task\"));\nvar TE = __importStar(require(\"./TaskEither\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromTaskEither = \n/*#__PURE__*/\nR.of;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.left = \n/*#__PURE__*/\nET.left(RT.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.right = \n/*#__PURE__*/\nET.right(RT.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightTask = \n/*#__PURE__*/\nfunction_1.flow(TE.rightTask, exports.fromTaskEither);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftTask = \n/*#__PURE__*/\nfunction_1.flow(TE.leftTask, exports.fromTaskEither);\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar rightReader = function (ma) {\n    return function_1.flow(ma, TE.right);\n};\nexports.rightReader = rightReader;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar leftReader = function (me) {\n    return function_1.flow(me, TE.left);\n};\nexports.leftReader = leftReader;\n/**\n * @category constructors\n * @since 2.5.0\n */\nexports.rightReaderTask = \n/*#__PURE__*/\nET.rightF(RT.Functor);\n/**\n * @category constructors\n * @since 2.5.0\n */\nexports.leftReaderTask = \n/*#__PURE__*/\nET.leftF(RT.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromIOEither = \n/*#__PURE__*/\nfunction_1.flow(TE.fromIOEither, exports.fromTaskEither);\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar fromReaderEither = function (ma) {\n    return function_1.flow(ma, TE.fromEither);\n};\nexports.fromReaderEither = fromReaderEither;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightIO = \n/*#__PURE__*/\nfunction_1.flow(TE.rightIO, exports.fromTaskEither);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromIO = exports.rightIO;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromTask = exports.rightTask;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftIO = \n/*#__PURE__*/\nfunction_1.flow(TE.leftIO, exports.fromTaskEither);\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar ask = function () { return TE.right; };\nexports.ask = ask;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar asks = function (f) {\n    return function_1.flow(TE.right, TE.map(f));\n};\nexports.asks = asks;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = RT.of;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/\nET.match(RT.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.matchE = \n/*#__PURE__*/\nET.matchE(RT.Chain);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchEW = exports.matchE;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n/**\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = \n/*#__PURE__*/\nET.getOrElse(RT.Monad);\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexports.getOrElseW = exports.getOrElse;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nET.toUnion(RT.Functor);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = \n/*#__PURE__*/\nET.orElse(RT.Monad);\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.orElseW = exports.orElse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.swap = \n/*#__PURE__*/\nET.swap(RT.Functor);\n/**\n * @category combinators\n * @since 2.4.0\n */\nvar fromIOEitherK = function (f) { return function_1.flow(f, exports.fromIOEither); };\nexports.fromIOEitherK = fromIOEitherK;\n/**\n * Less strict version of [`chainIOEitherK`](#chainioeitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nvar chainIOEitherKW = function (f) { return exports.chainW(exports.fromIOEitherK(f)); };\nexports.chainIOEitherKW = chainIOEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainIOEitherK = exports.chainIOEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nvar fromTaskEitherK = function (f) { return function_1.flow(f, exports.fromTaskEither); };\nexports.fromTaskEitherK = fromTaskEitherK;\n/**\n * Less strict version of [`chainTaskEitherK`](#chaintaskeitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nvar chainTaskEitherKW = function (f) { return exports.chainW(exports.fromTaskEitherK(f)); };\nexports.chainTaskEitherKW = chainTaskEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainTaskEitherK = exports.chainTaskEitherKW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _apPar = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _apSeq = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexports.map = \n/*#__PURE__*/\nET.map(RT.Functor);\n/**\n * Map a pair of functions over the two last type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.bimap = \n/*#__PURE__*/\nET.bimap(RT.Functor);\n/**\n * Map a function over the second type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.mapLeft = \n/*#__PURE__*/\nET.mapLeft(RT.Functor);\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = \n/*#__PURE__*/\nET.ap(RT.ApplyPar);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = \n/*#__PURE__*/\nET.chain(RT.Monad);\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexports.chainW = exports.chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = \n/*#__PURE__*/\nET.alt(RT.Monad);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexports.altW = exports.alt;\n/**\n * @category MonadThrow\n * @since 2.0.0\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'ReaderTaskEither';\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var C = E.getCompactable(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: Compactable_1.compact(RT.Functor, C),\n        separate: Compactable_1.separate(RT.Functor, C, E.Functor)\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * @category instances\n * @since 2.10.0\n */\nfunction getFilterable(M) {\n    var F = E.getFilterable(M);\n    var C = exports.getCompactable(M);\n    var filter = Filterable_1.filter(RT.Functor, F);\n    var filterMap = Filterable_1.filterMap(RT.Functor, F);\n    var partition = Filterable_1.partition(RT.Functor, F);\n    var partitionMap = Filterable_1.partitionMap(RT.Functor, F);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: C.compact,\n        separate: C.separate,\n        filter: function (fa, predicate) { return function_1.pipe(fa, filter(predicate)); },\n        filterMap: function (fa, f) { return function_1.pipe(fa, filterMap(f)); },\n        partition: function (fa, predicate) { return function_1.pipe(fa, partition(predicate)); },\n        partitionMap: function (fa, f) { return function_1.pipe(fa, partitionMap(f)); }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicativeReaderTaskValidation(A, S) {\n    var ap = Apply_1.ap(R.Apply, TE.getApplicativeTaskValidation(A, S));\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return function_1.pipe(fab, ap(fa)); },\n        of: exports.of\n    };\n}\nexports.getApplicativeReaderTaskValidation = getApplicativeReaderTaskValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getAltReaderTaskValidation(S) {\n    var alt = ET.altValidation(RT.Monad, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (fa, that) { return function_1.pipe(fa, alt(that)); }\n    };\n}\nexports.getAltReaderTaskValidation = getAltReaderTaskValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.ApplyPar);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of,\n    throwError: exports.throwError\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst).\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nFromEither_1.chainOptionK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`chainEitherK`](#chaineitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nexports.chainEitherKW = exports.chainEitherK;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = \n/*#__PURE__*/\nFromEither_1.filterOrElse(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromTaskK = \n/*#__PURE__*/\nFromTask_1.fromTaskK(exports.FromTask);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainTaskK = \n/*#__PURE__*/\nFromTask_1.chainTaskK(exports.FromTask, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstTaskK = \n/*#__PURE__*/\nFromTask_1.chainFirstTaskK(exports.FromTask, exports.Chain);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Make sure that a resource is cleaned up in the event of an exception (\\*). The release action is called regardless of\n * whether the body action throws (\\*) or returns.\n *\n * (\\*) i.e. returns a `Left`\n *\n * @since 2.0.4\n */\nfunction bracket(aquire, use, release) {\n    return function (r) {\n        return TE.bracket(aquire(r), function (a) { return use(a)(r); }, function (a, e) { return release(a, e)(r); });\n    };\n}\nexports.bracket = bracket;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.ApplyPar);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) {\n    return function_1.flow(R.traverseArrayWithIndex(f), R.map(TE.sequenceArray));\n};\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArrayWithIndex = function (f) {\n    return function_1.flow(R.traverseArrayWithIndex(f), R.map(TE.sequenceSeqArray));\n};\nexports.traverseSeqArrayWithIndex = traverseSeqArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArray = function (f) { return exports.traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/\nexports.traverseSeqArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.readerTaskEither = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    alt: _alt,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.readerTaskEitherSeq = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _apSeq,\n    chain: _chain,\n    alt: _alt,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.ApplySeq);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.ApplicativeSeq);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getSemigroup = function (S) {\n    return Apply_1.getApplySemigroup(RT.ApplySeq)(E.getSemigroup(S));\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Use [`getApplicativeReaderTaskValidation`](#getapplicativereadertaskvalidation) and [`getAltReaderTaskValidation`](#getaltreadertaskvalidation) instead.\n *\n * @category instances\n * @since 2.3.0\n * @deprecated\n */\nfunction getReaderTaskValidation(SE) {\n    var applicativeReaderTaskValidation = getApplicativeReaderTaskValidation(T.ApplicativePar, SE);\n    var altReaderTaskValidation = getAltReaderTaskValidation(SE);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        ap: applicativeReaderTaskValidation.ap,\n        alt: altReaderTaskValidation.alt,\n        fromIO: exports.fromIO,\n        fromTask: exports.fromTask,\n        throwError: exports.throwError\n    };\n}\nexports.getReaderTaskValidation = getReaderTaskValidation;\n/**\n * @since 2.0.0\n * @deprecated\n */\n/* istanbul ignore next */\nfunction run(ma, r) {\n    return ma(r)();\n}\nexports.run = run;\n/**\n * Use [`local`](./Reader.ts.html#local) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.local = R.local;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apSecond = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.Functor = exports.getFilterable = exports.getCompactable = exports.getAltTaskValidation = exports.getApplicativeTaskValidation = exports.URI = exports.throwError = exports.of = exports.altW = exports.alt = exports.flatten = exports.chainW = exports.chain = exports.apW = exports.ap = exports.mapLeft = exports.bimap = exports.map = exports.chainIOEitherK = exports.chainIOEitherKW = exports.fromIOEitherK = exports.swap = exports.orElseW = exports.orElse = exports.toUnion = exports.tryCatchK = exports.tryCatch = exports.getOrElseW = exports.getOrElse = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromTask = exports.fromIO = exports.fromEither = exports.fromIOEither = exports.leftIO = exports.rightIO = exports.leftTask = exports.rightTask = exports.right = exports.left = void 0;\nexports.getTaskValidation = exports.getSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.taskEitherSeq = exports.taskEither = exports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.Do = exports.bracket = exports.taskify = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.fromEitherK = exports.filterOrElseW = exports.filterOrElse = exports.fromPredicate = exports.chainEitherKW = exports.chainEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromOption = exports.FromEither = exports.Alt = exports.Bifunctor = exports.chainFirstW = exports.chainFirst = exports.MonadThrow = exports.MonadTask = exports.MonadIO = exports.Monad = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Compactable_1 = require(\"./Compactable\");\nvar E = __importStar(require(\"./Either\"));\nvar ET = __importStar(require(\"./EitherT\"));\nvar Filterable_1 = require(\"./Filterable\");\nvar FromEither_1 = require(\"./FromEither\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar T = __importStar(require(\"./Task\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.left = \n/*#__PURE__*/\nET.left(T.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.right = \n/*#__PURE__*/\nET.right(T.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightTask = \n/*#__PURE__*/\nET.rightF(T.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftTask = \n/*#__PURE__*/\nET.leftF(T.Functor);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.rightIO = \n/*#__PURE__*/\nfunction_1.flow(T.fromIO, exports.rightTask);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.leftIO = \n/*#__PURE__*/\nfunction_1.flow(T.fromIO, exports.leftTask);\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromIOEither = T.fromIO;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = T.of;\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromIO = exports.rightIO;\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromTask = exports.rightTask;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/\nET.match(T.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.matchE = \n/*#__PURE__*/\nET.matchE(T.Monad);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchEW = exports.matchE;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n/**\n * @category destructors\n * @since 2.0.0\n */\nexports.getOrElse = \n/*#__PURE__*/\nET.getOrElse(T.Monad);\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexports.getOrElseW = exports.getOrElse;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Transforms a `Promise` that may reject to a `Promise` that never rejects and returns an `Either` instead.\n *\n * Note: `f` should never `throw` errors, they are not caught.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { left, right } from 'fp-ts/Either'\n * import { tryCatch } from 'fp-ts/TaskEither'\n *\n * tryCatch(() => Promise.resolve(1), String)().then(result => {\n *   assert.deepStrictEqual(result, right(1))\n * })\n * tryCatch(() => Promise.reject('error'), String)().then(result => {\n *   assert.deepStrictEqual(result, left('error'))\n * })\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onRejected) { return function () {\n    return f().then(E.right, function (reason) { return E.left(onRejected(reason)); });\n}; };\nexports.tryCatch = tryCatch;\n/**\n * Converts a function returning a `Promise` to one returning a `TaskEither`.\n *\n * @category interop\n * @since 2.5.0\n */\nvar tryCatchK = function (f, onRejected) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); }, onRejected);\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.toUnion = \n/*#__PURE__*/\nET.toUnion(T.Functor);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Returns `ma` if is a `Right` or the value returned by `onLeft` otherwise.\n *\n * See also [alt](#alt).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * async function test() {\n *   const errorHandler = TE.orElse((error: string) => TE.right(`recovering from ${error}...`))\n *   assert.deepStrictEqual(await pipe(TE.right('ok'), errorHandler)(), E.right('ok'))\n *   assert.deepStrictEqual(await pipe(TE.left('ko'), errorHandler)(), E.right('recovering from ko...'))\n * }\n *\n * test()\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.orElse = \n/*#__PURE__*/\nET.orElse(T.Monad);\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.orElseW = exports.orElse;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.swap = \n/*#__PURE__*/\nET.swap(T.Functor);\n/**\n * @category combinators\n * @since 2.4.0\n */\nvar fromIOEitherK = function (f) { return function_1.flow(f, exports.fromIOEither); };\nexports.fromIOEitherK = fromIOEitherK;\n/**\n * Less strict version of [`chainIOEitherK`](#chainioeitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nvar chainIOEitherKW = function (f) { return exports.chainW(exports.fromIOEitherK(f)); };\nexports.chainIOEitherKW = chainIOEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainIOEitherK = exports.chainIOEitherKW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\nvar _apPar = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar _apSeq = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexports.map = \n/*#__PURE__*/\nET.map(T.Functor);\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.bimap = \n/*#__PURE__*/\nET.bimap(T.Functor);\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nexports.mapLeft = \n/*#__PURE__*/\nET.mapLeft(T.Functor);\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = \n/*#__PURE__*/\nET.ap(T.ApplyPar);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = \n/*#__PURE__*/\nET.chain(T.Monad);\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexports.chainW = exports.chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `TaskEither` returns `fa` if is a `Right` or the value returned by `that` otherwise.\n *\n * See also [orElse](#orelse).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as TE from 'fp-ts/TaskEither'\n *\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.right(1),\n *       TE.alt(() => TE.right(2))\n *     )(),\n *     E.right(1)\n *   )\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.left('a'),\n *       TE.alt(() => TE.right(2))\n *     )(),\n *     E.right(2)\n *   )\n *   assert.deepStrictEqual(\n *     await pipe(\n *       TE.left('a'),\n *       TE.alt(() => TE.left('b'))\n *     )(),\n *     E.left('b')\n *   )\n * }\n *\n * test()\n *\n * @category Alt\n * @since 2.0.0\n */\nexports.alt = \n/*#__PURE__*/\nET.alt(T.Monad);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexports.altW = exports.alt;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = exports.right;\n/**\n * @category MonadTask\n * @since 2.7.0\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'TaskEither';\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicativeTaskValidation(A, S) {\n    var ap = Apply_1.ap(A, E.getApplicativeValidation(S));\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return function_1.pipe(fab, ap(fa)); },\n        of: exports.of\n    };\n}\nexports.getApplicativeTaskValidation = getApplicativeTaskValidation;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getAltTaskValidation(S) {\n    var alt = ET.altValidation(T.Monad, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        alt: function (fa, that) { return function_1.pipe(fa, alt(that)); }\n    };\n}\nexports.getAltTaskValidation = getAltTaskValidation;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var C = E.getCompactable(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: Compactable_1.compact(T.Functor, C),\n        separate: Compactable_1.separate(T.Functor, C, E.Functor)\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * @category instances\n * @since 2.1.0\n */\nfunction getFilterable(M) {\n    var F = E.getFilterable(M);\n    var C = exports.getCompactable(M);\n    var filter = Filterable_1.filter(T.Functor, F);\n    var filterMap = Filterable_1.filterMap(T.Functor, F);\n    var partition = Filterable_1.partition(T.Functor, F);\n    var partitionMap = Filterable_1.partitionMap(T.Functor, F);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: C.compact,\n        separate: C.separate,\n        filter: function (fa, predicate) { return function_1.pipe(fa, filter(predicate)); },\n        filterMap: function (fa, f) { return function_1.pipe(fa, filterMap(f)); },\n        partition: function (fa, predicate) { return function_1.pipe(fa, partition(predicate)); },\n        partitionMap: function (fa, f) { return function_1.pipe(fa, partitionMap(f)); }\n    };\n}\nexports.getFilterable = getFilterable;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.ApplyPar);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativePar = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ApplicativeSeq = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _apPar,\n    chain: _chain,\n    of: exports.of,\n    throwError: exports.throwError\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst).\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nFromEither_1.chainOptionK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`chainEitherK`](#chaineitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nexports.chainEitherKW = exports.chainEitherK;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n/**\n * @category combinators\n * @since 2.0.0\n */\nexports.filterOrElse = \n/*#__PURE__*/\nFromEither_1.filterOrElse(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromTaskK = \n/*#__PURE__*/\nFromTask_1.fromTaskK(exports.FromTask);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainTaskK = \n/*#__PURE__*/\nFromTask_1.chainTaskK(exports.FromTask, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstTaskK = \n/*#__PURE__*/\nFromTask_1.chainFirstTaskK(exports.FromTask, exports.Chain);\nfunction taskify(f) {\n    return function () {\n        var args = Array.prototype.slice.call(arguments);\n        return function () {\n            return new Promise(function (resolve) {\n                var cbResolver = function (e, r) { return (e != null ? resolve(E.left(e)) : resolve(E.right(r))); };\n                f.apply(null, args.concat(cbResolver));\n            });\n        };\n    };\n}\nexports.taskify = taskify;\n/**\n * Make sure that a resource is cleaned up in the event of an exception (\\*). The release action is called regardless of\n * whether the body action throws (\\*) or returns.\n *\n * (\\*) i.e. returns a `Left`\n *\n * @since 2.0.0\n */\nvar bracket = function (acquire, use, release) {\n    return function_1.pipe(acquire, exports.chain(function (a) {\n        return function_1.pipe(use(a), T.chain(function (e) {\n            return function_1.pipe(release(a, e), exports.chain(function () { return T.of(e); }));\n        }));\n    }));\n};\nexports.bracket = bracket;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.ApplyPar);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) {\n    return function_1.flow(T.traverseArrayWithIndex(f), T.map(E.sequenceArray));\n};\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativePar)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArrayWithIndex = function (f) { return function (as) { return function () {\n    return as.reduce(function (acc, a, i) {\n        return acc.then(function (ebs) {\n            return E.isLeft(ebs)\n                ? acc\n                : f(i, a)().then(function (eb) {\n                    if (E.isLeft(eb)) {\n                        return eb;\n                    }\n                    ebs.right.push(eb.right);\n                    return ebs;\n                });\n        });\n    }, Promise.resolve(E.right([])));\n}; }; };\nexports.traverseSeqArrayWithIndex = traverseSeqArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nvar traverseSeqArray = function (f) { return exports.traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @since 2.9.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/\nexports.traverseSeqArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.taskEither = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    map: _map,\n    of: exports.of,\n    ap: _apPar,\n    chain: _chain,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.taskEitherSeq = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    map: _map,\n    of: exports.of,\n    ap: _apSeq,\n    chain: _chain,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/\nApply_1.getApplySemigroup(exports.ApplySeq);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/\nApplicative_1.getApplicativeMonoid(exports.ApplicativeSeq);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nvar getSemigroup = function (S) {\n    return Apply_1.getApplySemigroup(T.ApplySeq)(E.getSemigroup(S));\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Use [`getApplicativeTaskValidation`](#getapplicativetaskvalidation) and [`getAltTaskValidation`](#getalttaskvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nfunction getTaskValidation(SE) {\n    var applicativeTaskValidation = getApplicativeTaskValidation(T.ApplicativePar, SE);\n    var altTaskValidation = getAltTaskValidation(SE);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: applicativeTaskValidation.ap,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        alt: altTaskValidation.alt,\n        fromIO: exports.fromIO,\n        fromTask: exports.fromTask,\n        throwError: exports.throwError\n    };\n}\nexports.getTaskValidation = getTaskValidation;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMonoid = exports.getEq = exports.getShow = exports.URI = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.elem = exports.some = exports.every = exports.fromFoldableMap = exports.fromFoldable = exports.filterWithIndex = exports.filterMapWithIndex = exports.partitionWithIndex = exports.partitionMapWithIndex = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.traverseWithIndex = exports.singleton = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = exports.map = exports.mapWithIndex = exports.empty = exports.lookup = exports.isSubrecord = exports.pop = exports.modifyAt = exports.updateAt = exports.deleteAt = exports.has = exports.upsertAt = exports.toUnfoldable = exports.toReadonlyArray = exports.collect = exports.keys = exports.isEmpty = exports.size = exports.toRecord = exports.fromRecord = void 0;\nexports.readonlyRecord = exports.hasOwnProperty = exports.insertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.FoldableWithIndex = exports.Foldable = exports.FunctorWithIndex = exports.flap = exports.Functor = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar O = __importStar(require(\"./Option\"));\nvar Separated_1 = require(\"./Separated\");\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.5.0\n */\nfunction fromRecord(r) {\n    return Object.assign({}, r);\n}\nexports.fromRecord = fromRecord;\n/**\n * @category interop\n * @since 2.5.0\n */\nfunction toRecord(r) {\n    return Object.assign({}, r);\n}\nexports.toRecord = toRecord;\n/**\n * Calculate the number of key/value pairs in a `ReadonlyRecord`,\n *\n * @since 2.5.0\n */\nvar size = function (r) { return Object.keys(r).length; };\nexports.size = size;\n/**\n * Test whether a `ReadonlyRecord` is empty.\n *\n * @since 2.5.0\n */\nvar isEmpty = function (r) {\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            return false;\n        }\n    }\n    return true;\n};\nexports.isEmpty = isEmpty;\n/**\n * @since 2.5.0\n */\nvar keys = function (r) {\n    return Object.keys(r).sort();\n};\nexports.keys = keys;\n/**\n * Map a `ReadonlyRecord` into an `ReadonlyArray`.\n *\n * @example\n * import { collect } from 'fp-ts/ReadonlyRecord'\n *\n * const x: { readonly a: string, readonly b: boolean } = { a: 'c', b: false }\n * assert.deepStrictEqual(\n *   collect((key, val) => ({ key: key, value: val }))(x),\n *   [{ key: 'a', value: 'c' }, { key: 'b', value: false }]\n * )\n *\n * @since 2.5.0\n */\nvar collect = function (f) { return function (r) {\n    var out = [];\n    for (var _i = 0, _a = exports.keys(r); _i < _a.length; _i++) {\n        var key = _a[_i];\n        out.push(f(key, r[key]));\n    }\n    return out;\n}; };\nexports.collect = collect;\n/**\n * Get a sorted `ReadonlyArray` of the key/value pairs contained in a `ReadonlyRecord`.\n *\n * @since 2.5.0\n */\nexports.toReadonlyArray = \n/*#__PURE__*/\nexports.collect(function (k, a) { return [k, a]; });\nfunction toUnfoldable(U) {\n    return function (r) {\n        var sas = exports.toReadonlyArray(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? O.some([sas[b], b + 1]) : O.none); });\n    };\n}\nexports.toUnfoldable = toUnfoldable;\n/**\n * Insert or replace a key/value pair in a `ReadonlyRecord`.\n *\n * @category combinators\n * @since 2.10.0\n */\nvar upsertAt = function (k, a) { return function (r) {\n    if (_.has.call(r, k) && r[k] === a) {\n        return r;\n    }\n    var out = Object.assign({}, r);\n    out[k] = a;\n    return out;\n}; };\nexports.upsertAt = upsertAt;\n/**\n * Test whether or not a key exists in a `ReadonlyRecord`.\n *\n * Note. This function is not pipeable because is a custom type guard.\n *\n * @since 2.10.0\n */\nvar has = function (k, r) { return _.has.call(r, k); };\nexports.has = has;\nfunction deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\nexports.deleteAt = deleteAt;\n/**\n * @since 2.5.0\n */\nvar updateAt = function (k, a) { return function (r) {\n    if (!exports.has(k, r)) {\n        return O.none;\n    }\n    if (r[k] === a) {\n        return O.some(r);\n    }\n    var out = Object.assign({}, r);\n    out[k] = a;\n    return O.some(out);\n}; };\nexports.updateAt = updateAt;\n/**\n * @since 2.5.0\n */\nvar modifyAt = function (k, f) { return function (r) {\n    if (!exports.has(k, r)) {\n        return O.none;\n    }\n    var next = f(r[k]);\n    if (next === r[k]) {\n        return O.some(r);\n    }\n    var out = Object.assign({}, r);\n    out[k] = next;\n    return O.some(out);\n}; };\nexports.modifyAt = modifyAt;\nfunction pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = lookup(k, r);\n        return O.isNone(oa) ? O.none : O.some([oa.value, deleteAtk(r)]);\n    };\n}\nexports.pop = pop;\nfunction isSubrecord(E) {\n    return function (me, that) {\n        if (that === undefined) {\n            var isSubrecordE_1 = isSubrecord(E);\n            return function (that) { return isSubrecordE_1(that, me); };\n        }\n        for (var k in me) {\n            if (!_.has.call(that, k) || !E.equals(me[k], that[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nexports.isSubrecord = isSubrecord;\nfunction lookup(k, r) {\n    if (r === undefined) {\n        return function (r) { return lookup(k, r); };\n    }\n    return _.has.call(r, k) ? O.some(r[k]) : O.none;\n}\nexports.lookup = lookup;\n/**\n * @since 2.5.0\n */\nexports.empty = {};\nfunction mapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                out[k] = f(k, r[k]);\n            }\n        }\n        return out;\n    };\n}\nexports.mapWithIndex = mapWithIndex;\nfunction map(f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n}\nexports.map = map;\nfunction reduceWithIndex(b, f) {\n    return function (fa) {\n        var out = b;\n        var ks = exports.keys(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = f(k, out, fa[k]);\n        }\n        return out;\n    };\n}\nexports.reduceWithIndex = reduceWithIndex;\nfunction foldMapWithIndex(M) {\n    return function (f) { return function (fa) {\n        var out = M.empty;\n        var ks = exports.keys(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = M.concat(out, f(k, fa[k]));\n        }\n        return out;\n    }; };\n}\nexports.foldMapWithIndex = foldMapWithIndex;\nfunction reduceRightWithIndex(b, f) {\n    return function (fa) {\n        var out = b;\n        var ks = exports.keys(fa);\n        var len = ks.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var k = ks[i];\n            out = f(k, fa[k], out);\n        }\n        return out;\n    };\n}\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * Create a `ReadonlyRecord` with one key/value pair.\n *\n * @category constructors\n * @since 2.5.0\n */\nvar singleton = function (k, a) {\n    var _a;\n    return (_a = {}, _a[k] = a, _a);\n};\nexports.singleton = singleton;\nfunction traverseWithIndex(F) {\n    return function (f) { return function (ta) {\n        var ks = exports.keys(ta);\n        if (ks.length === 0) {\n            return F.of(exports.empty);\n        }\n        var fr = F.of({});\n        var _loop_1 = function (key) {\n            fr = F.ap(F.map(fr, function (r) { return function (b) {\n                r[key] = b;\n                return r;\n            }; }), f(key, ta[key]));\n        };\n        for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n            var key = ks_1[_i];\n            _loop_1(key);\n        }\n        return fr;\n    }; };\n}\nexports.traverseWithIndex = traverseWithIndex;\nfunction traverse(F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n}\nexports.traverse = traverse;\nfunction sequence(F) {\n    return traverseWithIndex(F)(function (_, a) { return a; });\n}\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\nfunction partitionMapWithIndex(f) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var e = f(k, r[k]);\n                switch (e._tag) {\n                    case 'Left':\n                        left[k] = e.left;\n                        break;\n                    case 'Right':\n                        right[k] = e.right;\n                        break;\n                }\n            }\n        }\n        return Separated_1.separated(left, right);\n    };\n}\nexports.partitionMapWithIndex = partitionMapWithIndex;\nfunction partitionWithIndex(predicateWithIndex) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var a = r[k];\n                if (predicateWithIndex(k, a)) {\n                    right[k] = a;\n                }\n                else {\n                    left[k] = a;\n                }\n            }\n        }\n        return Separated_1.separated(left, right);\n    };\n}\nexports.partitionWithIndex = partitionWithIndex;\nfunction filterMapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var ob = f(k, r[k]);\n                if (_.isSome(ob)) {\n                    out[k] = ob.value;\n                }\n            }\n        }\n        return out;\n    };\n}\nexports.filterMapWithIndex = filterMapWithIndex;\nfunction filterWithIndex(predicateWithIndex) {\n    return function (fa) {\n        var out = {};\n        var changed = false;\n        for (var key in fa) {\n            if (_.has.call(fa, key)) {\n                var a = fa[key];\n                if (predicateWithIndex(key, a)) {\n                    out[key] = a;\n                }\n                else {\n                    changed = true;\n                }\n            }\n        }\n        return changed ? out : fa;\n    };\n}\nexports.filterWithIndex = filterWithIndex;\nfunction fromFoldable(M, F) {\n    var fromFoldableMapM = fromFoldableMap(M, F);\n    return function (fka) { return fromFoldableMapM(fka, function_1.identity); };\n}\nexports.fromFoldable = fromFoldable;\nfunction fromFoldableMap(M, F) {\n    return function (ta, f) {\n        return F.reduce(ta, {}, function (r, a) {\n            var _a = f(a), k = _a[0], b = _a[1];\n            r[k] = _.has.call(r, k) ? M.concat(r[k], b) : b;\n            return r;\n        });\n    };\n}\nexports.fromFoldableMap = fromFoldableMap;\n/**\n * @since 2.5.0\n */\nfunction every(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (!predicate(r[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nexports.every = every;\n/**\n * @since 2.5.0\n */\nfunction some(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (predicate(r[k])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.some = some;\nfunction elem(E) {\n    return function (a, fa) {\n        if (fa === undefined) {\n            var elemE_1 = elem(E);\n            return function (fa) { return elemE_1(a, fa); };\n        }\n        for (var k in fa) {\n            if (E.equals(fa[k], a)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) { return function_1.pipe(fa, exports.partition(predicate)); };\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) {\n    return function_1.pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) {\n    return function_1.pipe(fa, filterMapWithIndex(f));\n};\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) {\n    return function_1.pipe(fa, filterWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n};\nexports.filter = filter;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) { return filterMapWithIndex(function (_, a) { return f(a); }); };\nexports.filterMap = filterMap;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar compact = function (r) {\n    var out = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var oa = r[k];\n            if (_.isSome(oa)) {\n                out[k] = oa.value;\n            }\n        }\n    }\n    return out;\n};\nexports.compact = compact;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (r) {\n    var left = {};\n    var right = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var e = r[k];\n            if (_.isLeft(e)) {\n                left[k] = e.left;\n            }\n            else {\n                right[k] = e.right;\n            }\n        }\n    }\n    return Separated_1.separated(left, right);\n};\nexports.separate = separate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyRecord';\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getShow(S) {\n    return {\n        show: function (r) {\n            var elements = exports.collect(function (k, a) { return JSON.stringify(k) + \": \" + S.show(a); })(r).join(', ');\n            return elements === '' ? '{}' : \"{ \" + elements + \" }\";\n        }\n    };\n}\nexports.getShow = getShow;\nfunction getEq(E) {\n    var isSubrecordE = isSubrecord(E);\n    return Eq_1.fromEquals(function (x, y) { return isSubrecordE(x)(y) && isSubrecordE(y)(x); });\n}\nexports.getEq = getEq;\nfunction getMonoid(S) {\n    return {\n        concat: function (first, second) {\n            if (exports.isEmpty(first)) {\n                return second;\n            }\n            if (exports.isEmpty(second)) {\n                return first;\n            }\n            var r = Object.assign({}, first);\n            for (var k in second) {\n                if (_.has.call(second, k)) {\n                    r[k] = _.has.call(first, k) ? S.concat(first[k], second[k]) : second[k];\n                }\n            }\n            return r;\n        },\n        empty: exports.empty\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexports.insertAt = exports.upsertAt;\nfunction hasOwnProperty(k, r) {\n    return _.has.call(r === undefined ? this : r, k);\n}\nexports.hasOwnProperty = hasOwnProperty;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyRecord = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    wither: _wither,\n    wilt: _wilt\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromArray = exports.toReadonlyArray = exports.elem = exports.isSubset = exports.every = exports.some = exports.size = exports.isEmpty = exports.empty = exports.filterMap = exports.separate = exports.compact = exports.fromReadonlyArray = exports.toggle = exports.remove = exports.insert = exports.singleton = exports.foldMap = exports.reduce = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.difference = exports.partitionMap = exports.intersection = exports.union = exports.partition = exports.filter = exports.chain = exports.map = exports.getEq = exports.getShow = exports.toSet = exports.fromSet = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Separated_1 = require(\"./Separated\");\n/**\n * @category constructors\n * @since 2.5.0\n */\nfunction fromSet(s) {\n    return new Set(s);\n}\nexports.fromSet = fromSet;\n/**\n * @category destructors\n * @since 2.5.0\n */\nfunction toSet(s) {\n    return new Set(s);\n}\nexports.toSet = toSet;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getShow(S) {\n    return {\n        show: function (s) {\n            var entries = [];\n            s.forEach(function (a) {\n                entries.push(S.show(a));\n            });\n            return \"new Set([\" + entries.sort().join(', ') + \"])\";\n        }\n    };\n}\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getEq(E) {\n    var subsetE = isSubset(E);\n    return Eq_1.fromEquals(function (x, y) { return subsetE(x, y) && subsetE(y, x); });\n}\nexports.getEq = getEq;\n/**\n * Projects a Set through a function\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction map(E) {\n    var elemE = elem(E);\n    return function (f) { return function (set) {\n        var r = new Set();\n        set.forEach(function (e) {\n            var v = f(e);\n            if (!elemE(v, r)) {\n                r.add(v);\n            }\n        });\n        return r;\n    }; };\n}\nexports.map = map;\n/**\n * @category combinators\n * @since 2.5.0\n */\nfunction chain(E) {\n    var elemE = elem(E);\n    return function (f) { return function (set) {\n        var r = new Set();\n        set.forEach(function (e) {\n            f(e).forEach(function (e) {\n                if (!elemE(e, r)) {\n                    r.add(e);\n                }\n            });\n        });\n        return r;\n    }; };\n}\nexports.chain = chain;\nfunction filter(predicate) {\n    return function (set) {\n        var values = set.values();\n        var e;\n        var r = new Set();\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var value = e.value;\n            if (predicate(value)) {\n                r.add(value);\n            }\n        }\n        return r;\n    };\n}\nexports.filter = filter;\nfunction partition(predicate) {\n    return function (set) {\n        var values = set.values();\n        var e;\n        var right = new Set();\n        var left = new Set();\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var value = e.value;\n            if (predicate(value)) {\n                right.add(value);\n            }\n            else {\n                left.add(value);\n            }\n        }\n        return Separated_1.separated(left, right);\n    };\n}\nexports.partition = partition;\nfunction union(E) {\n    var elemE = elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var unionE_1 = union(E);\n            return function (that) { return unionE_1(me, that); };\n        }\n        if (exports.isEmpty(me)) {\n            return that;\n        }\n        if (exports.isEmpty(that)) {\n            return me;\n        }\n        var r = new Set(me);\n        that.forEach(function (e) {\n            if (!elemE(e, r)) {\n                r.add(e);\n            }\n        });\n        return r;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (that) { return intersectionE_1(that, me); };\n        }\n        if (exports.isEmpty(me) || exports.isEmpty(that)) {\n            return exports.empty;\n        }\n        var r = new Set();\n        me.forEach(function (e) {\n            if (elemE(e, that)) {\n                r.add(e);\n            }\n        });\n        return r;\n    };\n}\nexports.intersection = intersection;\n/**\n * @since 2.5.0\n */\nfunction partitionMap(EB, EC) {\n    return function (f) { return function (set) {\n        var values = set.values();\n        var e;\n        var left = new Set();\n        var right = new Set();\n        var hasB = elem(EB);\n        var hasC = elem(EC);\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var v = f(e.value);\n            switch (v._tag) {\n                case 'Left':\n                    if (!hasB(v.left, left)) {\n                        left.add(v.left);\n                    }\n                    break;\n                case 'Right':\n                    if (!hasC(v.right, right)) {\n                        right.add(v.right);\n                    }\n                    break;\n            }\n        }\n        return Separated_1.separated(left, right);\n    }; };\n}\nexports.partitionMap = partitionMap;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var differenceE_1 = difference(E);\n            return function (that) { return differenceE_1(that, me); };\n        }\n        return filter(function (a) { return !elemE(a, that); })(me);\n    };\n}\nexports.difference = difference;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getUnionMonoid(E) {\n    return {\n        concat: union(E),\n        empty: exports.empty\n    };\n}\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getIntersectionSemigroup(E) {\n    return {\n        concat: intersection(E)\n    };\n}\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @since 2.5.0\n */\nfunction reduce(O) {\n    var toReadonlyArrayO = exports.toReadonlyArray(O);\n    return function (b, f) { return function (fa) { return toReadonlyArrayO(fa).reduce(f, b); }; };\n}\nexports.reduce = reduce;\n/**\n * @since 2.5.0\n */\nfunction foldMap(O, M) {\n    var toReadonlyArrayO = exports.toReadonlyArray(O);\n    return function (f) { return function (fa) { return toReadonlyArrayO(fa).reduce(function (b, a) { return M.concat(b, f(a)); }, M.empty); }; };\n}\nexports.foldMap = foldMap;\n/**\n * Create a set with one element\n *\n * @category constructors\n * @since 2.5.0\n */\nvar singleton = function (a) { return new Set([a]); };\nexports.singleton = singleton;\n/**\n * Insert a value into a set\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction insert(E) {\n    var elemE = elem(E);\n    return function (a) { return function (set) {\n        if (!elemE(a)(set)) {\n            var r = new Set(set);\n            r.add(a);\n            return r;\n        }\n        else {\n            return set;\n        }\n    }; };\n}\nexports.insert = insert;\n/**\n * Delete a value from a set\n *\n * @category combinators\n * @since 2.5.0\n */\nvar remove = function (E) { return function (a) { return function (set) {\n    return filter(function (ax) { return !E.equals(a, ax); })(set);\n}; }; };\nexports.remove = remove;\n/**\n * Checks an element is a member of a set;\n * If yes, removes the value from the set\n * If no, inserts the value to the set\n *\n * @category combinators\n * @since 2.10.0\n */\nvar toggle = function (E) {\n    var elemE = elem(E);\n    var removeE = exports.remove(E);\n    var insertE = insert(E);\n    return function (a) { return function (set) { return (elemE(a, set) ? removeE : insertE)(a)(set); }; };\n};\nexports.toggle = toggle;\n/**\n * Create a set from an array\n *\n * @category constructors\n * @since 2.10.0\n */\nvar fromReadonlyArray = function (E) { return function (as) {\n    var len = as.length;\n    var out = new Set();\n    var has = elem(E);\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (!has(a, out)) {\n            out.add(a);\n        }\n    }\n    return out;\n}; };\nexports.fromReadonlyArray = fromReadonlyArray;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar compact = function (E) { return filterMap(E)(function_1.identity); };\nexports.compact = compact;\n/**\n * @since 2.5.0\n */\nfunction separate(EE, EA) {\n    return function (fa) {\n        var elemEE = elem(EE);\n        var elemEA = elem(EA);\n        var left = new Set();\n        var right = new Set();\n        fa.forEach(function (e) {\n            switch (e._tag) {\n                case 'Left':\n                    if (!elemEE(e.left, left)) {\n                        left.add(e.left);\n                    }\n                    break;\n                case 'Right':\n                    if (!elemEA(e.right, right)) {\n                        right.add(e.right);\n                    }\n                    break;\n            }\n        });\n        return Separated_1.separated(left, right);\n    };\n}\nexports.separate = separate;\n/**\n * @category combinators\n * @since 2.5.0\n */\nfunction filterMap(E) {\n    var elemE = elem(E);\n    return function (f) { return function (fa) {\n        var r = new Set();\n        fa.forEach(function (a) {\n            var ob = f(a);\n            if (ob._tag === 'Some' && !elemE(ob.value, r)) {\n                r.add(ob.value);\n            }\n        });\n        return r;\n    }; };\n}\nexports.filterMap = filterMap;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexports.empty = new Set();\n/**\n * Test whether a `ReadonlySet` is empty.\n *\n * @since 2.10.0\n */\nvar isEmpty = function (set) { return set.size === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Calculate the number of elements in a `ReadonlySet`.\n *\n * @since 2.10.0\n */\nvar size = function (set) { return set.size; };\nexports.size = size;\n/**\n * @since 2.5.0\n */\nvar some = function (predicate) { return function (set) {\n    var values = set.values();\n    var e;\n    var found = false;\n    // tslint:disable-next-line: strict-boolean-expressions\n    while (!found && !(e = values.next()).done) {\n        found = predicate(e.value);\n    }\n    return found;\n}; };\nexports.some = some;\n/**\n * @since 2.5.0\n */\nvar every = function (predicate) { return function_1.not(exports.some(function_1.not(predicate))); };\nexports.every = every;\nfunction isSubset(E) {\n    var elemE = elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var isSubsetE_1 = isSubset(E);\n            return function (that) { return isSubsetE_1(that, me); };\n        }\n        return exports.every(function (a) { return elemE(a, that); })(me);\n    };\n}\nexports.isSubset = isSubset;\nfunction elem(E) {\n    return function (a, set) {\n        if (set === undefined) {\n            var elemE_1 = elem(E);\n            return function (set) { return elemE_1(a, set); };\n        }\n        var values = set.values();\n        var e;\n        var found = false;\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!found && !(e = values.next()).done) {\n            found = E.equals(a, e.value);\n        }\n        return found;\n    };\n}\nexports.elem = elem;\n/**\n * Get a sorted `ReadonlyArray` of the values contained in a `ReadonlySet`.\n *\n * @since 2.5.0\n */\nvar toReadonlyArray = function (O) { return function (set) {\n    var out = [];\n    set.forEach(function (e) { return out.push(e); });\n    return out.sort(O.compare);\n}; };\nexports.toReadonlyArray = toReadonlyArray;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`fromReadonlyArray`](#fromreadonlyarray) instead.\n *\n * @category constructors\n * @since 2.5.0\n * @deprecated\n */\nexports.fromArray = exports.fromReadonlyArray;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readonlyTuple = exports.mapLeft = exports.map = exports.Traversable = exports.Foldable = exports.Comonad = exports.Semigroupoid = exports.Bifunctor = exports.flap = exports.Functor = exports.URI = exports.sequence = exports.traverse = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extract = exports.extend = exports.compose = exports.mapSnd = exports.mapFst = exports.bimap = exports.getChainRec = exports.getMonad = exports.getChain = exports.getApplicative = exports.getApply = exports.swap = exports.snd = exports.fst = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.5.0\n */\nfunction fst(ea) {\n    return ea[0];\n}\nexports.fst = fst;\n/**\n * @category destructors\n * @since 2.5.0\n */\nfunction snd(ea) {\n    return ea[1];\n}\nexports.snd = snd;\n/**\n * @category combinators\n * @since 2.5.0\n */\nvar swap = function (ea) { return [snd(ea), fst(ea)]; };\nexports.swap = swap;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getApply(S) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return [fst(fab)(fst(fa)), S.concat(snd(fab), snd(fa))]; }\n    };\n}\nexports.getApply = getApply;\nvar of = function (M) { return function (a) {\n    return [a, M.empty];\n}; };\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getApplicative(M) {\n    var A = getApply(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: A.map,\n        ap: A.ap,\n        of: of(M)\n    };\n}\nexports.getApplicative = getApplicative;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getChain(S) {\n    var A = getApply(S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: A.map,\n        ap: A.ap,\n        chain: function (ma, f) {\n            var _a = f(fst(ma)), b = _a[0], s = _a[1];\n            return [b, S.concat(snd(ma), s)];\n        }\n    };\n}\nexports.getChain = getChain;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getMonad(M) {\n    var C = getChain(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: C.map,\n        ap: C.ap,\n        chain: C.chain,\n        of: of(M)\n    };\n}\nexports.getMonad = getMonad;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getChainRec(M) {\n    var chainRec = function (a, f) {\n        var result = f(a);\n        var acc = M.empty;\n        var s = fst(result);\n        while (s._tag === 'Left') {\n            acc = M.concat(acc, snd(result));\n            result = f(s.left);\n            s = fst(result);\n        }\n        return [s.right, M.concat(acc, snd(result))];\n    };\n    var C = getChain(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: C.map,\n        ap: C.ap,\n        chain: C.chain,\n        chainRec: chainRec\n    };\n}\nexports.getChainRec = getChainRec;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _compose = function (bc, ab) { return function_1.pipe(bc, exports.compose(ab)); };\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.mapFst(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapSnd(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.5.0\n */\nvar bimap = function (f, g) { return function (fa) { return [g(fst(fa)), f(snd(fa))]; }; };\nexports.bimap = bimap;\n/**\n * Map a function over the first component of a `ReadonlyTuple`.\n *\n * This is the `map` operation of the `Functor` instance.\n *\n * @category Functor\n * @since 2.10.0\n */\nvar mapFst = function (f) { return function (fa) { return [\n    f(fst(fa)),\n    snd(fa)\n]; }; };\nexports.mapFst = mapFst;\n/**\n * Map a function over the second component of a `ReadonlyTuple`.\n *\n * This is the `mapLeft` operation of the `Bifunctor` instance.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapSnd = function (f) { return function (fa) { return [\n    fst(fa),\n    f(snd(fa))\n]; }; };\nexports.mapSnd = mapSnd;\n/**\n * @category Semigroupoid\n * @since 2.5.0\n */\nvar compose = function (ab) { return function (bc) { return [\n    fst(bc),\n    snd(ab)\n]; }; };\nexports.compose = compose;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return [f(wa), snd(wa)]; }; };\nexports.extend = extend;\n/**\n * @category Extract\n * @since 2.6.2\n */\nexports.extract = fst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return f(b, fst(fa));\n}; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function () {\n    return function (f) { return function (fa) { return f(fst(fa)); }; };\n};\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return f(fst(fa), b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) { return function (ta) { return F.map(f(fst(ta)), function (b) { return [b, snd(ta)]; }); }; };\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (fas) {\n    return F.map(fst(fas), function (a) { return [a, snd(fas)]; });\n}; };\nexports.sequence = sequence;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyTuple';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Semigroupoid = {\n    URI: exports.URI,\n    compose: _compose\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`mapFst`](#mapfst) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.map = exports.mapFst;\n/**\n * Use [`mapSnd`](#mapsnd) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexports.mapLeft = exports.mapSnd;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.5.0\n * @deprecated\n */\nexports.readonlyTuple = {\n    URI: exports.URI,\n    compose: _compose,\n    map: _map,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    extract: exports.extract,\n    extend: _extend,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FunctorWithIndex = exports.flap = exports.Functor = exports.getMonoid = exports.getEq = exports.getShow = exports.URI = exports.separate = exports.compact = exports.reduceRight = exports.reduce = exports.partitionMap = exports.partition = exports.foldMap = exports.filterMap = exports.filter = exports.elem = exports.some = exports.every = exports.fromFoldableMap = exports.fromFoldable = exports.filterWithIndex = exports.filterMapWithIndex = exports.partitionWithIndex = exports.partitionMapWithIndex = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.traverseWithIndex = exports.singleton = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = exports.map = exports.mapWithIndex = exports.lookup = exports.isSubrecord = exports.pop = exports.modifyAt = exports.updateAt = exports.deleteAt = exports.has = exports.upsertAt = exports.toUnfoldable = exports.toArray = exports.collect = exports.keys = exports.isEmpty = exports.size = void 0;\nexports.record = exports.hasOwnProperty = exports.insertAt = exports.empty = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.FoldableWithIndex = exports.Foldable = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar O = __importStar(require(\"./Option\"));\nvar RR = __importStar(require(\"./ReadonlyRecord\"));\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * Calculate the number of key/value pairs in a `Record`.\n *\n * @since 2.0.0\n */\nexports.size = RR.size;\n/**\n * Test whether a `Record` is empty.\n *\n * @since 2.0.0\n */\nexports.isEmpty = RR.isEmpty;\n/**\n * @since 2.0.0\n */\nexports.keys = RR.keys;\n/**\n * Map a `Record` into an `Array`.\n *\n * @example\n * import { collect } from 'fp-ts/Record'\n *\n * const x: { readonly a: string, readonly b: boolean } = { a: 'c', b: false }\n * assert.deepStrictEqual(\n *   collect((key, val) => ({ key: key, value: val }))(x),\n *   [{ key: 'a', value: 'c' }, { key: 'b', value: false }]\n * )\n *\n * @since 2.0.0\n */\nvar collect = function (f) { return function (r) {\n    var out = [];\n    for (var _i = 0, _a = exports.keys(r); _i < _a.length; _i++) {\n        var key = _a[_i];\n        out.push(f(key, r[key]));\n    }\n    return out;\n}; };\nexports.collect = collect;\n/**\n * Get a sorted `Array` of the key/value pairs contained in a `Record`.\n *\n * @since 2.0.0\n */\nexports.toArray = \n/*#__PURE__*/\nexports.collect(function (k, a) { return [k, a]; });\nfunction toUnfoldable(U) {\n    return function (r) {\n        var sas = exports.toArray(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? O.some([sas[b], b + 1]) : O.none); });\n    };\n}\nexports.toUnfoldable = toUnfoldable;\n/**\n * Insert or replace a key/value pair in a `Record`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.upsertAt = RR.upsertAt;\n/**\n * Test whether or not a key exists in a `Record`.\n *\n * Note. This function is not pipeable because is a custom type guard.\n *\n * @since 2.10.0\n */\nexports.has = RR.has;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction deleteAt(k) {\n    return function (r) {\n        if (!_hasOwnProperty.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\nexports.deleteAt = deleteAt;\n/**\n * @since 2.0.0\n */\nvar updateAt = function (k, a) {\n    return exports.modifyAt(k, function () { return a; });\n};\nexports.updateAt = updateAt;\n/**\n * @since 2.0.0\n */\nvar modifyAt = function (k, f) { return function (r) {\n    if (!exports.has(k, r)) {\n        return O.none;\n    }\n    var out = Object.assign({}, r);\n    out[k] = f(r[k]);\n    return O.some(out);\n}; };\nexports.modifyAt = modifyAt;\nfunction pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = exports.lookup(k, r);\n        return O.isNone(oa) ? O.none : O.some([oa.value, deleteAtk(r)]);\n    };\n}\nexports.pop = pop;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether one `Record` contains all of the keys and values contained in another `Record`.\n *\n * @since 2.0.0\n */\nexports.isSubrecord = RR.isSubrecord;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Record`.\n *\n * @since 2.0.0\n */\nexports.lookup = RR.lookup;\n/**\n * Map a `Record` passing the keys to the iterating function.\n *\n * @since 2.0.0\n */\nexports.mapWithIndex = RR.mapWithIndex;\n/**\n * Map a `Record` passing the values to the iterating function.\n *\n * @since 2.0.0\n */\nexports.map = RR.map;\n/**\n * @since 2.0.0\n */\nexports.reduceWithIndex = RR.reduceWithIndex;\n/**\n * @since 2.0.0\n */\nexports.foldMapWithIndex = RR.foldMapWithIndex;\n/**\n * @since 2.0.0\n */\nexports.reduceRightWithIndex = RR.reduceRightWithIndex;\n/**\n * Create a `Record` with one key/value pair.\n *\n * @since 2.0.0\n */\nexports.singleton = RR.singleton;\nfunction traverseWithIndex(F) {\n    return RR.traverseWithIndex(F);\n}\nexports.traverseWithIndex = traverseWithIndex;\nfunction traverse(F) {\n    return RR.traverse(F);\n}\nexports.traverse = traverse;\nfunction sequence(F) {\n    return RR.sequence(F);\n}\nexports.sequence = sequence;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @since 2.0.0\n */\nexports.partitionMapWithIndex = RR.partitionMapWithIndex;\nfunction partitionWithIndex(predicateWithIndex) {\n    return RR.partitionWithIndex(predicateWithIndex);\n}\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @since 2.0.0\n */\nexports.filterMapWithIndex = RR.filterMapWithIndex;\nfunction filterWithIndex(predicateWithIndex) {\n    return RR.filterWithIndex(predicateWithIndex);\n}\nexports.filterWithIndex = filterWithIndex;\nfunction fromFoldable(M, F) {\n    return RR.fromFoldable(M, F);\n}\nexports.fromFoldable = fromFoldable;\nfunction fromFoldableMap(M, F) {\n    return RR.fromFoldableMap(M, F);\n}\nexports.fromFoldableMap = fromFoldableMap;\n/**\n * @since 2.0.0\n */\nexports.every = RR.every;\n/**\n * @since 2.0.0\n */\nexports.some = RR.some;\n// TODO: remove non-curried overloading in v3\n/**\n * @since 2.0.0\n */\nexports.elem = RR.elem;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) { return function_1.pipe(fa, exports.partition(predicate)); };\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) {\n    return function_1.pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) {\n    return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) {\n    return function_1.pipe(fa, filterWithIndex(predicateWithIndex));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar _wither = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar _wilt = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexports.filter = RR.filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexports.filterMap = RR.filterMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RR.foldMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexports.partition = RR.partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexports.partitionMap = RR.partitionMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RR.reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RR.reduceRight;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.compact = RR.compact;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexports.separate = RR.separate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Record';\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RR.getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RR.getEq;\n/**\n * Returns a `Monoid` instance for `Record`s given a `Semigroup` instance for their values.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getMonoid } from 'fp-ts/Record'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat({ foo: 123 }, { foo: 456 }), { foo: 579 })\n *\n * @category instances\n * @since 2.0.0\n */\nexports.getMonoid = RR.getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use a new `{}` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.empty = {};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.insertAt = exports.upsertAt;\n/**\n * Use [`has`](#has) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexports.hasOwnProperty = RR.hasOwnProperty;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.record = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    wither: _wither,\n    wilt: _wilt\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctionRing = exports.getTupleRing = exports.negate = exports.tuple = void 0;\n/**\n * The `Ring` class is for types that support addition, multiplication, and subtraction operations.\n *\n * Instances must satisfy the following law in addition to the `Semiring` laws:\n *\n * - Additive inverse: `a - a <-> (zero - a) + a <-> zero`\n *\n * Adapted from https://github.com/purescript/purescript-prelude/blob/master/src/Data/Ring.purs\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ring`s returns a `Ring` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Ring'\n * import * as N from 'fp-ts/number'\n *\n * const R = tuple(N.Field, N.Field, N.Field)\n * assert.deepStrictEqual(R.add([1, 2, 3], [4, 5, 6]), [5, 7, 9])\n * assert.deepStrictEqual(R.mul([1, 2, 3], [4, 5, 6]), [4, 10, 18])\n * assert.deepStrictEqual(R.one, [1, 1, 1])\n * assert.deepStrictEqual(R.sub([1, 2, 3], [4, 5, 6]), [-3, -3, -3])\n * assert.deepStrictEqual(R.zero, [0, 0, 0])\n *\n * @category combinators\n * @since 2.10.0\n */\nvar tuple = function () {\n    var rings = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        rings[_i] = arguments[_i];\n    }\n    return ({\n        add: function (x, y) { return rings.map(function (R, i) { return R.add(x[i], y[i]); }); },\n        zero: rings.map(function (R) { return R.zero; }),\n        mul: function (x, y) { return rings.map(function (R, i) { return R.mul(x[i], y[i]); }); },\n        one: rings.map(function (R) { return R.one; }),\n        sub: function (x, y) { return rings.map(function (R, i) { return R.sub(x[i], y[i]); }); }\n    });\n};\nexports.tuple = tuple;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `negate x` can be used as a shorthand for `zero - x`\n *\n * @since 2.0.0\n */\nvar negate = function (R) { return function (a) { return R.sub(R.zero, a); }; };\nexports.negate = negate;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexports.getTupleRing = exports.tuple;\n/**\n * Use [`getRing`](./function.ts.html#getRing) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionRing = function_1.getRing;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctionSemiring = void 0;\n/**\n * The `Semiring` class is for types that support an addition and multiplication operation.\n *\n * Instances must satisfy the following laws:\n *\n * - Commutative monoid under addition:\n *   - Associativity: `(a + b) + c <-> a + (b + c)`\n *   - Identity: `zero + a = a + zero <-> a`\n *   - Commutative: `a + b <-> b + a`\n * - Monoid under multiplication:\n *   - Associativity: `(a * b) * c <-> a * (b * c)`\n *   - Identity: `one * a <-> a * one <-> a`\n * - Multiplication distributes over addition:\n *   - Left distributivity: `a * (b + c) <-> (a * b) + (a * c)`\n *   - Right distributivity: `(a + b) * c <-> (a * c) + (b * c)`\n * - Annihilation: `zero * a <-> a * zero <-> zero`\n *\n * **Note:** The `number` type is not fully law abiding members of this class hierarchy due to the potential\n * for arithmetic overflows, and the presence of `NaN` and `Infinity` values. The behaviour is\n * unspecified in these cases.\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`getSemiring`](./function.ts.html#getSemiring) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.getFunctionSemiring = function_1.getSemiring;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subset = exports.toArray = exports.elem = exports.isSubset = exports.every = exports.some = exports.size = exports.isEmpty = exports.empty = exports.filterMap = exports.separate = exports.compact = exports.fromArray = exports.toggle = exports.remove = exports.insert = exports.singleton = exports.foldMap = exports.reduce = exports.getIntersectionSemigroup = exports.getUnionMonoid = exports.difference = exports.partitionMap = exports.intersection = exports.union = exports.partition = exports.filter = exports.chain = exports.map = exports.getEq = exports.getShow = void 0;\n/**\n * @since 2.0.0\n */\nvar Separated_1 = require(\"./Separated\");\nvar function_1 = require(\"./function\");\nvar RS = __importStar(require(\"./ReadonlySet\"));\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getShow = RS.getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.getEq = RS.getEq;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category combinators\n * @since 2.0.0\n */\nfunction map(E) {\n    var elemE = exports.elem(E);\n    return function (f) { return function (set) {\n        var r = new Set();\n        set.forEach(function (e) {\n            var v = f(e);\n            if (!elemE(v, r)) {\n                r.add(v);\n            }\n        });\n        return r;\n    }; };\n}\nexports.map = map;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category combinators\n * @since 2.0.0\n */\nfunction chain(E) {\n    var elemE = exports.elem(E);\n    return function (f) { return function (set) {\n        var r = new Set();\n        set.forEach(function (e) {\n            f(e).forEach(function (e) {\n                if (!elemE(e, r)) {\n                    r.add(e);\n                }\n            });\n        });\n        return r;\n    }; };\n}\nexports.chain = chain;\nfunction filter(predicate) {\n    return function (set) {\n        var values = set.values();\n        var e;\n        var r = new Set();\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var value = e.value;\n            if (predicate(value)) {\n                r.add(value);\n            }\n        }\n        return r;\n    };\n}\nexports.filter = filter;\nfunction partition(predicate) {\n    return function (set) {\n        var values = set.values();\n        var e;\n        var right = new Set();\n        var left = new Set();\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var value = e.value;\n            if (predicate(value)) {\n                right.add(value);\n            }\n            else {\n                left.add(value);\n            }\n        }\n        return Separated_1.separated(left, right);\n    };\n}\nexports.partition = partition;\nfunction union(E) {\n    var elemE = exports.elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var unionE_1 = union(E);\n            return function (that) { return unionE_1(me, that); };\n        }\n        if (exports.isEmpty(me)) {\n            return that;\n        }\n        if (exports.isEmpty(that)) {\n            return me;\n        }\n        var r = new Set(me);\n        that.forEach(function (e) {\n            if (!elemE(e, r)) {\n                r.add(e);\n            }\n        });\n        return r;\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = exports.elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (that) { return intersectionE_1(that, me); };\n        }\n        if (exports.isEmpty(me) || exports.isEmpty(that)) {\n            return new Set();\n        }\n        var r = new Set();\n        me.forEach(function (e) {\n            if (elemE(e, that)) {\n                r.add(e);\n            }\n        });\n        return r;\n    };\n}\nexports.intersection = intersection;\n/**\n * @since 2.0.0\n */\nfunction partitionMap(EB, EC) {\n    return function (f) { return function (set) {\n        var values = set.values();\n        var e;\n        var left = new Set();\n        var right = new Set();\n        var hasB = exports.elem(EB);\n        var hasC = exports.elem(EC);\n        // tslint:disable-next-line: strict-boolean-expressions\n        while (!(e = values.next()).done) {\n            var v = f(e.value);\n            switch (v._tag) {\n                case 'Left':\n                    if (!hasB(v.left, left)) {\n                        left.add(v.left);\n                    }\n                    break;\n                case 'Right':\n                    if (!hasC(v.right, right)) {\n                        right.add(v.right);\n                    }\n                    break;\n            }\n        }\n        return Separated_1.separated(left, right);\n    }; };\n}\nexports.partitionMap = partitionMap;\nfunction difference(E) {\n    var elemE = exports.elem(E);\n    return function (me, that) {\n        if (that === undefined) {\n            var differenceE_1 = difference(E);\n            return function (that) { return differenceE_1(that, me); };\n        }\n        return filter(function (a) { return !elemE(a, that); })(me);\n    };\n}\nexports.difference = difference;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getUnionMonoid(E) {\n    return {\n        concat: union(E),\n        empty: new Set()\n    };\n}\nexports.getUnionMonoid = getUnionMonoid;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getIntersectionSemigroup(E) {\n    return {\n        concat: intersection(E)\n    };\n}\nexports.getIntersectionSemigroup = getIntersectionSemigroup;\n/**\n * @since 2.0.0\n */\nexports.reduce = RS.reduce;\n/**\n * @since 2.0.0\n */\nexports.foldMap = RS.foldMap;\n/**\n * Create a set with one element\n *\n * @category constructors\n * @since 2.0.0\n */\nvar singleton = function (a) { return new Set([a]); };\nexports.singleton = singleton;\n/**\n * Insert a value into a set\n *\n * @category combinators\n * @since 2.0.0\n */\nfunction insert(E) {\n    var elemE = exports.elem(E);\n    return function (a) { return function (set) {\n        if (!elemE(a)(set)) {\n            var r = new Set(set);\n            r.add(a);\n            return r;\n        }\n        else {\n            return set;\n        }\n    }; };\n}\nexports.insert = insert;\n/**\n * Delete a value from a set\n *\n * @category combinators\n * @since 2.0.0\n */\nvar remove = function (E) { return function (a) { return function (set) { return filter(function (ax) { return !E.equals(a, ax); })(set); }; }; };\nexports.remove = remove;\n/**\n * Checks an element is a member of a set;\n * If yes, removes the value from the set\n * If no, inserts the value to the set\n *\n * @category combinators\n * @since 2.5.0\n */\nvar toggle = function (E) {\n    var elemE = exports.elem(E);\n    var removeE = exports.remove(E);\n    var insertE = insert(E);\n    return function (a) { return function (set) { return (elemE(a, set) ? removeE : insertE)(a)(set); }; };\n};\nexports.toggle = toggle;\n/**\n * Create a set from an array\n *\n * @category constructors\n * @since 2.0.0\n */\nvar fromArray = function (E) { return function (as) {\n    var len = as.length;\n    var out = new Set();\n    var has = exports.elem(E);\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (!has(a, out)) {\n            out.add(a);\n        }\n    }\n    return out;\n}; };\nexports.fromArray = fromArray;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar compact = function (E) { return filterMap(E)(function_1.identity); };\nexports.compact = compact;\n/**\n * @since 2.0.0\n */\nfunction separate(EE, EA) {\n    return function (fa) {\n        var elemEE = exports.elem(EE);\n        var elemEA = exports.elem(EA);\n        var left = new Set();\n        var right = new Set();\n        fa.forEach(function (e) {\n            switch (e._tag) {\n                case 'Left':\n                    if (!elemEE(e.left, left)) {\n                        left.add(e.left);\n                    }\n                    break;\n                case 'Right':\n                    if (!elemEA(e.right, right)) {\n                        right.add(e.right);\n                    }\n                    break;\n            }\n        });\n        return Separated_1.separated(left, right);\n    };\n}\nexports.separate = separate;\n/**\n * @category combinators\n * @since 2.0.0\n */\nfunction filterMap(E) {\n    var elemE = exports.elem(E);\n    return function (f) { return function (fa) {\n        var r = new Set();\n        fa.forEach(function (a) {\n            var ob = f(a);\n            if (ob._tag === 'Some' && !elemE(ob.value, r)) {\n                r.add(ob.value);\n            }\n        });\n        return r;\n    }; };\n}\nexports.filterMap = filterMap;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexports.empty = new Set();\n/**\n * Test whether a `Set` is empty.\n *\n * @since 2.10.0\n */\nvar isEmpty = function (set) { return set.size === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Calculate the number of elements in a `Set`.\n *\n * @since 2.10.0\n */\nvar size = function (set) { return set.size; };\nexports.size = size;\n/**\n * @since 2.0.0\n */\nexports.some = RS.some;\n/**\n * @since 2.0.0\n */\nexports.every = RS.every;\n/**\n * @since 2.10.0\n */\nexports.isSubset = RS.isSubset;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of a set\n *\n * @since 2.0.0\n */\nexports.elem = RS.elem;\n/**\n * Get a sorted `Array` of the values contained in a `Set`.\n *\n * @since 2.0.0\n */\nvar toArray = function (O) { return function (set) {\n    var out = [];\n    set.forEach(function (e) { return out.push(e); });\n    return out.sort(O.compare);\n}; };\nexports.toArray = toArray;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`isSubset`](#issubset) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.subset = RS.isSubset;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.state = exports.execState = exports.evalState = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.execute = exports.evaluate = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.gets = exports.modify = exports.put = exports.get = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Chain_1 = require(\"./Chain\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get the current state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar get = function () { return function (s) { return [s, s]; }; };\nexports.get = get;\n/**\n * Set the state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar put = function (s) { return function () { return [undefined, s]; }; };\nexports.put = put;\n/**\n * Modify the state by applying a function to the current state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar modify = function (f) { return function (s) { return [undefined, f(s)]; }; };\nexports.modify = modify;\n/**\n * Get a value which depends on the current state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar gets = function (f) { return function (s) { return [f(s), s]; }; };\nexports.gets = gets;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return function (s1) {\n    var _a = fa(s1), a = _a[0], s2 = _a[1];\n    return [f(a), s2];\n}; }; };\nexports.map = map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) { return function (s1) {\n    var _a = fab(s1), f = _a[0], s2 = _a[1];\n    var _b = fa(s2), a = _b[0], s3 = _b[1];\n    return [f(a), s3];\n}; }; };\nexports.ap = ap;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nvar of = function (a) { return function (s) { return [a, s]; }; };\nexports.of = of;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) { return function (s1) {\n    var _a = ma(s1), a = _a[0], s2 = _a[1];\n    return f(a)(s2);\n}; }; };\nexports.chain = chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'State';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Run a computation in the `State` monad, discarding the final state\n *\n * @since 2.8.0\n */\nvar evaluate = function (s) { return function (ma) { return ma(s)[0]; }; };\nexports.evaluate = evaluate;\n/**\n * Run a computation in the `State` monad discarding the result\n *\n * @since 2.8.0\n */\nvar execute = function (s) { return function (ma) { return ma(s)[1]; }; };\nexports.execute = execute;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) { return function (s) {\n    var lastState = s;\n    var values = [];\n    for (var i = 0; i < as.length; i++) {\n        var _a = f(i, as[i])(lastState), newValue = _a[0], newState = _a[1];\n        values.push(newValue);\n        lastState = newState;\n    }\n    return [values, lastState];\n}; }; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`evaluate`](#evaluate) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nvar evalState = function (ma, s) { return ma(s)[0]; };\nexports.evalState = evalState;\n/**\n * Use [`execute`](#execute) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nvar execState = function (ma, s) { return ma(s)[1]; };\nexports.execState = execState;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.state = exports.Monad;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.throwError = exports.alt = exports.altW = exports.flatten = exports.chainW = exports.chain = exports.of = exports.apW = exports.ap = exports.mapLeft = exports.bimap = exports.map = exports.chainReaderTaskEitherK = exports.chainReaderTaskEitherKW = exports.fromReaderTaskEitherK = exports.chainTaskEitherK = exports.chainTaskEitherKW = exports.fromTaskEitherK = exports.chainIOEitherK = exports.chainIOEitherKW = exports.fromIOEitherK = exports.fromState = exports.fromTask = exports.fromIO = exports.fromEither = exports.gets = exports.modify = exports.put = exports.get = exports.fromReaderTaskEither = exports.leftState = exports.rightState = exports.leftIO = exports.rightIO = exports.fromReaderEither = exports.fromIOEither = exports.leftReader = exports.rightReader = exports.fromTaskEither = exports.leftTask = exports.rightTask = exports.right = exports.left = void 0;\nexports.run = exports.execState = exports.evalState = exports.stateReaderTaskEitherSeq = exports.stateReaderTaskEither = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.bindTo = exports.execute = exports.evaluate = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.fromEitherK = exports.filterOrElseW = exports.filterOrElse = exports.fromPredicate = exports.chainEitherKW = exports.chainEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromOption = exports.FromEither = exports.Alt = exports.Bifunctor = exports.chainFirstW = exports.chainFirst = exports.MonadThrow = exports.MonadTask = exports.MonadIO = exports.Monad = exports.Chain = exports.Applicative = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar E = __importStar(require(\"./Either\"));\nvar FromEither_1 = require(\"./FromEither\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar RTE = __importStar(require(\"./ReaderTaskEither\"));\nvar ST = __importStar(require(\"./StateT\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar left = function (e) { return function () { return RTE.left(e); }; };\nexports.left = left;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.right = \n/*#__PURE__*/\nST.of(RTE.Pointed);\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction rightTask(ma) {\n    return exports.fromReaderTaskEither(RTE.rightTask(ma));\n}\nexports.rightTask = rightTask;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction leftTask(me) {\n    return exports.fromReaderTaskEither(RTE.leftTask(me));\n}\nexports.leftTask = leftTask;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction fromTaskEither(ma) {\n    return exports.fromReaderTaskEither(RTE.fromTaskEither(ma));\n}\nexports.fromTaskEither = fromTaskEither;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction rightReader(ma) {\n    return exports.fromReaderTaskEither(RTE.rightReader(ma));\n}\nexports.rightReader = rightReader;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction leftReader(me) {\n    return exports.fromReaderTaskEither(RTE.leftReader(me));\n}\nexports.leftReader = leftReader;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction fromIOEither(ma) {\n    return exports.fromReaderTaskEither(RTE.fromIOEither(ma));\n}\nexports.fromIOEither = fromIOEither;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction fromReaderEither(ma) {\n    return exports.fromReaderTaskEither(RTE.fromReaderEither(ma));\n}\nexports.fromReaderEither = fromReaderEither;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction rightIO(ma) {\n    return exports.fromReaderTaskEither(RTE.rightIO(ma));\n}\nexports.rightIO = rightIO;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction leftIO(me) {\n    return exports.fromReaderTaskEither(RTE.leftIO(me));\n}\nexports.leftIO = leftIO;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar rightState = function (sa) {\n    return function_1.flow(sa, RTE.right);\n};\nexports.rightState = rightState;\n/**\n * @category constructors\n * @since 2.0.0\n */\nvar leftState = function (me) { return function (s) { return RTE.left(me(s)[0]); }; };\nexports.leftState = leftState;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromReaderTaskEither = \n/*#__PURE__*/\nST.fromF(RTE.Functor);\n/**\n * Get the current state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar get = function () { return function (s) { return RTE.of([s, s]); }; };\nexports.get = get;\n/**\n * Set the state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar put = function (s) { return function () { return RTE.of([undefined, s]); }; };\nexports.put = put;\n/**\n * Modify the state by applying a function to the current state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar modify = function (f) { return function (s) {\n    return RTE.of([undefined, f(s)]);\n}; };\nexports.modify = modify;\n/**\n * Get a value which depends on the current state\n *\n * @category constructors\n * @since 2.0.0\n */\nvar gets = function (f) { return function (s) {\n    return RTE.of([f(s), s]);\n}; };\nexports.gets = gets;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromEither = \n/*#__PURE__*/\nE.match(function (e) { return exports.left(e); }, exports.right);\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromIO = rightIO;\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromTask = rightTask;\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromState = \n/*#__PURE__*/\nST.fromState(RTE.Pointed);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.4.0\n */\nvar fromIOEitherK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return fromIOEither(f.apply(void 0, a));\n}; };\nexports.fromIOEitherK = fromIOEitherK;\n/**\n * Less strict version of [`chainIOEitherK`](#chainioeitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nvar chainIOEitherKW = function (f) { return function (ma) { return function_1.pipe(ma, exports.chainW(exports.fromIOEitherK(f))); }; };\nexports.chainIOEitherKW = chainIOEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainIOEitherK = exports.chainIOEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nvar fromTaskEitherK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return fromTaskEither(f.apply(void 0, a));\n}; };\nexports.fromTaskEitherK = fromTaskEitherK;\n/**\n * Less strict version of [`chainTaskEitherK`](#chaintaskeitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nvar chainTaskEitherKW = function (f) { return function (ma) { return function_1.pipe(ma, exports.chainW(exports.fromTaskEitherK(f))); }; };\nexports.chainTaskEitherKW = chainTaskEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainTaskEitherK = exports.chainTaskEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nfunction fromReaderTaskEitherK(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return exports.fromReaderTaskEither(f.apply(void 0, a));\n    };\n}\nexports.fromReaderTaskEitherK = fromReaderTaskEitherK;\n/**\n * Less strict version of [`chainReaderTaskEitherK`](#chainreadertaskeitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nvar chainReaderTaskEitherKW = function (f) { return function (ma) { return function_1.pipe(ma, exports.chainW(fromReaderTaskEitherK(f))); }; };\nexports.chainReaderTaskEitherKW = chainReaderTaskEitherKW;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainReaderTaskEitherK = exports.chainReaderTaskEitherKW;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function (s) {\n    return function_1.pipe(fa(s), RTE.alt(function () { return that()(s); }));\n}; };\nvar _bimap = function (fea, f, g) { return function (s) {\n    return function_1.pipe(fea(s), RTE.bimap(f, function (_a) {\n        var a = _a[0], s = _a[1];\n        return [g(a), s];\n    }));\n}; };\nvar _mapLeft = function (fea, f) { return function (s) { return function_1.pipe(fea(s), RTE.mapLeft(f)); }; };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexports.map = \n/*#__PURE__*/\nST.map(RTE.Functor);\n/**\n * Map a pair of functions over the two last type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.6.2\n */\nvar bimap = function (f, g) { return function (fa) {\n    return _bimap(fa, f, g);\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the third type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.6.2\n */\nvar mapLeft = function (f) { return function (fa) {\n    return _mapLeft(fa, f);\n}; };\nexports.mapLeft = mapLeft;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexports.ap = \n/*#__PURE__*/\nST.ap(RTE.Chain);\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category Apply\n * @since 2.8.0\n */\nexports.apW = exports.ap;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexports.chain = \n/*#__PURE__*/\nST.chain(RTE.Chain);\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category Monad\n * @since 2.6.0\n */\nexports.chainW = exports.chain;\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return function (r) {\n    return function_1.pipe(fa(r), RTE.altW(function () { return that()(r); }));\n}; }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexports.alt = exports.altW;\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nexports.throwError = exports.left;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'StateReaderTaskEither';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst).\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category constructors\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nFromEither_1.chainOptionK(exports.FromEither, exports.Chain);\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.chainEitherK = \n/*#__PURE__*/\nFromEither_1.chainEitherK(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`chainEitherK`](#chaineitherk).\n *\n * @category combinators\n * @since 2.6.1\n */\nexports.chainEitherKW = exports.chainEitherK;\n/**\n * @category constructors\n * @since 2.4.4\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n/**\n * @category combinators\n * @since 2.4.4\n */\nexports.filterOrElse = \n/*#__PURE__*/\nFromEither_1.filterOrElse(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.fromEitherK = \n/*#__PURE__*/\nFromEither_1.fromEitherK(exports.FromEither);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromTaskK = \n/*#__PURE__*/\nFromTask_1.fromTaskK(exports.FromTask);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainTaskK = \n/*#__PURE__*/\nFromTask_1.chainTaskK(exports.FromTask, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstTaskK = \n/*#__PURE__*/\nFromTask_1.chainFirstTaskK(exports.FromTask, exports.Chain);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Run a computation in the `StateReaderTaskEither` monad, discarding the final state\n *\n * @since 2.8.0\n */\nexports.evaluate = \n/*#__PURE__*/\nST.evaluate(RTE.Functor);\n/**\n * Run a computation in the `StateReaderTaskEither` monad discarding the result\n *\n * @since 2.8.0\n */\nexports.execute = \n/*#__PURE__*/\nST.execute(RTE.Functor);\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n/**\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n/**\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArrayWithIndex = function (f) { return function (as) { return function (s) { return function (r) { return function () {\n    return as.reduce(function (acc, a, i) {\n        return acc.then(function (ebs) {\n            return E.isLeft(ebs)\n                ? acc\n                : f(i, a)(ebs.right[1])(r)().then(function (eb) {\n                    if (E.isLeft(eb)) {\n                        return eb;\n                    }\n                    var _a = eb.right, b = _a[0], s = _a[1];\n                    ebs.right[0].push(b);\n                    ebs.right[1] = s;\n                    return ebs;\n                });\n        });\n    }, Promise.resolve(E.right([[], s])));\n}; }; }; }; };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @since 2.9.0\n */\nvar traverseArray = function (f) {\n    return exports.traverseArrayWithIndex(function (_, a) { return f(a); });\n};\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.stateReaderTaskEither = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.stateReaderTaskEitherSeq = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask,\n    throwError: exports.throwError\n};\n/**\n * Use [`evaluate`](#evaluate) instead\n *\n * @since 2.0.0\n * @deprecated\n */\n/* istanbul ignore next */\nvar evalState = function (fsa, s) {\n    return function_1.pipe(fsa(s), RTE.map(function (_a) {\n        var a = _a[0];\n        return a;\n    }));\n};\nexports.evalState = evalState;\n/**\n * Use [`execute`](#execute) instead\n *\n * @since 2.0.0\n * @deprecated\n */\n/* istanbul ignore next */\nvar execState = function (fsa, s) {\n    return function_1.pipe(fsa(s), RTE.map(function (_a) {\n        var _ = _a[0], s = _a[1];\n        return s;\n    }));\n};\nexports.execState = execState;\n/**\n * @since 2.0.0\n * @deprecated\n */\n/* istanbul ignore next */\nfunction run(ma, s, r) {\n    return ma(s)(r)();\n}\nexports.run = run;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStateM = exports.execute = exports.evaluate = exports.fromF = exports.fromState = exports.chain = exports.ap = exports.map = exports.of = void 0;\nvar function_1 = require(\"./function\");\nvar ReadonlyTuple_1 = require(\"./ReadonlyTuple\");\nfunction of(F) {\n    return function (a) { return function (s) { return F.of([a, s]); }; };\n}\nexports.of = of;\nfunction map(F) {\n    return function (f) { return function (fa) { return function (s) { return F.map(fa(s), function (_a) {\n        var a = _a[0], s1 = _a[1];\n        return [f(a), s1];\n    }); }; }; };\n}\nexports.map = map;\nfunction ap(M) {\n    return function (fa) { return function (fab) { return function (s) { return M.chain(fab(s), function (_a) {\n        var f = _a[0], s = _a[1];\n        return M.map(fa(s), function (_a) {\n            var a = _a[0], s = _a[1];\n            return [f(a), s];\n        });\n    }); }; }; };\n}\nexports.ap = ap;\nfunction chain(M) {\n    return function (f) { return function (ma) { return function (s) { return M.chain(ma(s), function (_a) {\n        var a = _a[0], s1 = _a[1];\n        return f(a)(s1);\n    }); }; }; };\n}\nexports.chain = chain;\nfunction fromState(F) {\n    return function (sa) { return function (s) { return F.of(sa(s)); }; };\n}\nexports.fromState = fromState;\nfunction fromF(F) {\n    return function (ma) { return function (s) { return F.map(ma, function (a) { return [a, s]; }); }; };\n}\nexports.fromF = fromF;\nfunction evaluate(F) {\n    return function (s) { return function (ma) { return F.map(ma(s), function (_a) {\n        var a = _a[0];\n        return a;\n    }); }; };\n}\nexports.evaluate = evaluate;\nfunction execute(F) {\n    return function (s) { return function (ma) { return F.map(ma(s), ReadonlyTuple_1.snd); }; };\n}\nexports.execute = execute;\n/** @deprecated */\n/* istanbul ignore next */\nfunction getStateM(M) {\n    var _ap = ap(M);\n    var _map = map(M);\n    var _chain = chain(M);\n    var _evaluate = evaluate(M);\n    var _execute = execute(M);\n    return {\n        map: function (fa, f) { return function_1.pipe(fa, _map(f)); },\n        ap: function (fab, fa) { return function_1.pipe(fab, _ap(fa)); },\n        of: of(M),\n        chain: function (ma, f) { return function_1.pipe(ma, _chain(f)); },\n        get: function () { return function (s) { return M.of([s, s]); }; },\n        put: function (s) { return function () { return M.of([undefined, s]); }; },\n        modify: function (f) { return function (s) { return M.of([undefined, f(s)]); }; },\n        gets: function (f) { return function (s) { return M.of([f(s), s]); }; },\n        fromState: fromState(M),\n        fromM: fromF(M),\n        evalState: function (fa, s) { return function_1.pipe(fa, _evaluate(s)); },\n        execState: function (fa, s) { return function_1.pipe(fa, _execute(s)); }\n    };\n}\nexports.getStateM = getStateM;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.store = exports.Comonad = exports.flap = exports.Functor = exports.URI = exports.map = exports.duplicate = exports.extract = exports.extend = exports.experiment = exports.peeks = exports.seeks = exports.seek = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n/**\n * Reposition the focus at the specified position\n *\n * @since 2.0.0\n */\nfunction seek(s) {\n    return function (wa) { return ({ peek: wa.peek, pos: s }); };\n}\nexports.seek = seek;\n/**\n * Reposition the focus at the specified position, which depends on the current position\n *\n * @since 2.0.0\n */\nfunction seeks(f) {\n    return function (wa) { return ({ peek: wa.peek, pos: f(wa.pos) }); };\n}\nexports.seeks = seeks;\n/**\n * Extract a value from a position which depends on the current position\n *\n * @since 2.0.0\n */\nfunction peeks(f) {\n    return function (wa) { return wa.peek(f(wa.pos)); };\n}\nexports.peeks = peeks;\nfunction experiment(F) {\n    return function (f) { return function (wa) { return F.map(f(wa.pos), function (s) { return wa.peek(s); }); }; };\n}\nexports.experiment = experiment;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) { return ({\n    peek: function (s) { return f({ peek: wa.peek, pos: s }); },\n    pos: wa.pos\n}); }; };\nexports.extend = extend;\n/**\n * @category Extract\n * @since 2.6.2\n */\nvar extract = function (wa) { return wa.peek(wa.pos); };\nexports.extract = extract;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return ({\n    peek: function (s) { return f(fa.peek(s)); },\n    pos: fa.pos\n}); }; };\nexports.map = map;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Store';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.store = exports.Comonad;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.size = exports.isEmpty = exports.empty = exports.Show = exports.Ord = exports.Monoid = exports.Semigroup = exports.Eq = void 0;\n/**\n * @since 2.10.0\n */\nvar E = __importStar(require(\"./Eq\"));\nvar M = __importStar(require(\"./Monoid\"));\nvar S = __importStar(require(\"./Semigroup\"));\nvar O = __importStar(require(\"./Ord\"));\nvar Sh = __importStar(require(\"./Show\"));\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Eq = E.eqString;\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Semigroup = S.semigroupString;\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Monoid = M.monoidString;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Ord = O.ordString;\n/**\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.Show = Sh.showString;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexports.empty = '';\n/**\n * Test whether a `string` is empty.\n *\n * @since 2.10.0\n */\nvar isEmpty = function (s) { return s.length === 0; };\nexports.isEmpty = isEmpty;\n/**\n * Calculate the number of characters in a `string`.\n *\n * @since 2.10.0\n */\nvar size = function (s) { return s.length; };\nexports.size = size;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fanout = exports.splitStrong = exports.fanOut = exports.split = void 0;\nvar function_1 = require(\"./function\");\nfunction split(S, C) {\n    return function (pab, pcd) {\n        return C.compose(S.second(pcd), S.first(pab));\n    };\n}\nexports.split = split;\nfunction fanOut(S, C) {\n    var splitSC = split(S, C);\n    return function (pab, pac) {\n        return C.compose(splitSC(pab, pac), S.promap(C.id(), function_1.identity, function (a) { return [a, a]; }));\n    };\n}\nexports.fanOut = fanOut;\nfunction splitStrong(F) {\n    return split(F, F);\n}\nexports.splitStrong = splitStrong;\nfunction fanout(F) {\n    return fanOut(F, F);\n}\nexports.fanout = fanout;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAssignSemigroup = void 0;\n/**\n * @since 2.10.0\n */\nvar Semigroup_1 = require(\"./Semigroup\");\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Return a semigroup which works like `Object.assign`.\n *\n * @example\n * import { getAssignSemigroup } from 'fp-ts/struct'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const S = getAssignSemigroup<Person>()\n * assert.deepStrictEqual(S.concat({ name: 'name', age: 23 }, { name: 'name', age: 24 }), { name: 'name', age: 24 })\n *\n * @category instances\n * @since 2.10.0\n */\n// tslint:disable-next-line: deprecation\nexports.getAssignSemigroup = Semigroup_1.getObjectSemigroup;\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Monad = exports.Alternative = exports.Alt = exports.chainFirst = exports.Chain = exports.ApplicativeSeq = exports.ApplySeq = exports.ApplicativePar = exports.apSecond = exports.apFirst = exports.ApplyPar = exports.Pointed = exports.flap = exports.Functor = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.none = exports.zero = exports.altW = exports.alt = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.chainOptionK = exports.fromOptionK = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElseW = exports.getOrElse = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromTask = exports.fromIO = exports.fromEither = exports.fromPredicate = exports.fromOption = exports.some = void 0;\nexports.sequenceSeqArray = exports.traverseSeqArray = exports.traverseSeqArrayWithIndex = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.chainFirstTaskK = exports.chainTaskK = exports.fromTaskK = exports.FromTask = exports.chainFirstIOK = exports.chainIOK = exports.fromIOK = exports.FromIO = exports.Filterable = exports.Compactable = exports.MonadTask = exports.MonadIO = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar Compactable_1 = require(\"./Compactable\");\nvar Filterable_1 = require(\"./Filterable\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar O = __importStar(require(\"./Option\"));\nvar OT = __importStar(require(\"./OptionT\"));\nvar T = __importStar(require(\"./Task\"));\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.some = \n/*#__PURE__*/\nOT.some(T.Pointed);\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromOption = T.of;\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nOT.fromPredicate(T.Pointed);\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromEither = \n/*#__PURE__*/\nOT.fromEither(T.Pointed);\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar fromIO = function (ma) { return exports.fromTask(T.fromIO(ma)); };\nexports.fromIO = fromIO;\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromTask = \n/*#__PURE__*/\nOT.fromF(T.Functor);\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/\nOT.match(T.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.matchE = \n/*#__PURE__*/\nOT.matchE(T.Chain);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchEW = exports.matchE;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.getOrElse = \n/*#__PURE__*/\nOT.getOrElse(T.Monad);\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.getOrElseW = exports.getOrElse;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.fromNullable = \n/*#__PURE__*/\nOT.fromNullable(T.Pointed);\n/**\n * Transforms a `Promise` that may reject to a `Promise` that never rejects and returns an `Option` instead.\n *\n * Note: `f` should never `throw` errors, they are not caught.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatch = function (f) { return function () {\n    return f().then(function (a) { return O.some(a); }, function () { return O.none; });\n}; };\nexports.tryCatch = tryCatch;\n/**\n * Converts a function returning a `Promise` to one returning a `TaskOption`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return exports.tryCatch(function () { return f.apply(void 0, a); });\n}; };\nexports.tryCatchK = tryCatchK;\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.fromNullableK = \n/*#__PURE__*/\nOT.fromNullableK(T.Pointed);\n/**\n * @category interop\n * @since 2.10.0\n */\nexports.chainNullableK = \n/*#__PURE__*/\nOT.chainNullableK(T.Monad);\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nOT.fromOptionK(T.Pointed);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainOptionK = \n/*#__PURE__*/\nOT.chainOptionK(T.Monad);\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.10.0\n */\nexports.map = \n/*#__PURE__*/\nOT.map(T.Functor);\n/**\n * @category Apply\n * @since 2.10.0\n */\nexports.ap = \n/*#__PURE__*/\nOT.ap(T.ApplyPar);\n/**\n * @category Pointed\n * @since 2.10.0\n */\nexports.of = exports.some;\n/**\n * @category Monad\n * @since 2.10.0\n */\nexports.chain = \n/*#__PURE__*/\nOT.chain(T.Monad);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * @category Alt\n * @since 2.10.0\n */\nexports.alt = \n/*#__PURE__*/\nOT.alt(T.Monad);\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.10.0\n */\nexports.altW = exports.alt;\n/**\n * @category Alternative\n * @since 2.10.0\n */\nexports.zero = \n/*#__PURE__*/\nOT.zero(T.Pointed);\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.none = \n/*#__PURE__*/\nexports.zero();\n/**\n * @category Compactable\n * @since 2.10.0\n */\nexports.compact = \n/*#__PURE__*/\nCompactable_1.compact(T.Functor, O.Compactable);\n/**\n * @category Compactable\n * @since 2.10.0\n */\nexports.separate = \n/*#__PURE__*/\nCompactable_1.separate(T.Functor, O.Compactable, O.Functor);\n/**\n * @category Filterable\n * @since 2.10.0\n */\nexports.filter = \n/*#__PURE__*/\nFilterable_1.filter(T.Functor, O.Filterable);\n/**\n * @category Filterable\n * @since 2.10.0\n */\nexports.filterMap = \n/*#__PURE__*/\nFilterable_1.filterMap(T.Functor, O.Filterable);\n/**\n * @category Filterable\n * @since 2.10.0\n */\nexports.partition = \n/*#__PURE__*/\nFilterable_1.partition(T.Functor, O.Filterable);\n/**\n * @category Filterable\n * @since 2.10.0\n */\nexports.partitionMap = \n/*#__PURE__*/\nFilterable_1.partitionMap(T.Functor, O.Filterable);\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) {\n    return function_1.pipe(fa, exports.filter(predicate));\n};\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return function_1.pipe(fa, exports.partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\n/**\n * @category instances\n * @since 2.10.0\n */\nvar URI = 'TaskOption';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplyPar = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.ApplyPar);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.ApplyPar);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplicativePar = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\nvar _apSeq = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplySeq = {\n    URI: URI,\n    map: _map,\n    ap: _apSeq\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.ApplicativeSeq = {\n    URI: URI,\n    map: _map,\n    ap: _apSeq,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    alt: _alt,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadIO = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    fromIO: exports.fromIO\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.MonadTask = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Compactable = {\n    URI: URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Filterable = {\n    URI: URI,\n    map: _map,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainIOK = \n/*#__PURE__*/\nFromIO_1.chainIOK(exports.FromIO, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstIOK = \n/*#__PURE__*/\nFromIO_1.chainFirstIOK(exports.FromIO, exports.Chain);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromTaskK = \n/*#__PURE__*/\nFromTask_1.fromTaskK(exports.FromTask);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainTaskK = \n/*#__PURE__*/\nFromTask_1.chainTaskK(exports.FromTask, exports.Chain);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.chainFirstTaskK = \n/*#__PURE__*/\nFromTask_1.chainFirstTaskK(exports.FromTask, exports.Chain);\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.10.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.10.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.ApplyPar);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativePar)`.\n *\n * @since 2.10.0\n */\nvar traverseArrayWithIndex = function (f) { return function_1.flow(T.traverseArrayWithIndex(f), T.map(O.sequenceArray)); };\nexports.traverseArrayWithIndex = traverseArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativePar)`.\n *\n * @since 2.10.0\n */\nvar traverseArray = function (f) { return exports.traverseArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativePar)`.\n *\n * @since 2.10.0\n */\nexports.sequenceArray = \n/*#__PURE__*/\nexports.traverseArray(function_1.identity);\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(ApplicativeSeq)`.\n *\n * @since 2.10.0\n */\nvar traverseSeqArrayWithIndex = function (f) { return function (as) { return function () {\n    return as.reduce(function (acc, a, i) {\n        return acc.then(function (obs) {\n            return O.isNone(obs)\n                ? acc\n                : f(i, a)().then(function (ob) {\n                    if (O.isNone(ob)) {\n                        return ob;\n                    }\n                    obs.value.push(ob.value);\n                    return obs;\n                });\n        });\n    }, Promise.resolve(O.some([])));\n}; }; };\nexports.traverseSeqArrayWithIndex = traverseSeqArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(ApplicativeSeq)`.\n *\n * @since 2.10.0\n */\nvar traverseSeqArray = function (f) { return exports.traverseSeqArrayWithIndex(function (_, a) { return f(a); }); };\nexports.traverseSeqArray = traverseSeqArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(ApplicativeSeq)`.\n *\n * @since 2.10.0\n */\nexports.sequenceSeqArray = \n/*#__PURE__*/\nexports.traverseSeqArray(function_1.identity);\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSemigroup = exports.taskThese = exports.toTuple = exports.bifunctorTaskThese = exports.functorTaskThese = exports.toTuple2 = exports.fromTaskK = exports.FromTask = exports.fromIOK = exports.FromIO = exports.fromPredicate = exports.fromOptionK = exports.fromOption = exports.FromEither = exports.Bifunctor = exports.Pointed = exports.flap = exports.Functor = exports.getMonad = exports.getChain = exports.getApplicative = exports.getApply = exports.URI = exports.of = exports.mapLeft = exports.bimap = exports.map = exports.swap = exports.foldW = exports.matchEW = exports.fold = exports.matchE = exports.matchW = exports.match = exports.fromEither = exports.fromTask = exports.fromIO = exports.fromIOEither = exports.leftIO = exports.rightIO = exports.leftTask = exports.rightTask = exports.both = exports.right = exports.left = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar FromEither_1 = require(\"./FromEither\");\nvar FromIO_1 = require(\"./FromIO\");\nvar FromTask_1 = require(\"./FromTask\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar T = __importStar(require(\"./Task\"));\nvar TH = __importStar(require(\"./These\"));\nvar TT = __importStar(require(\"./TheseT\"));\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.left = \n/*#__PURE__*/\nTT.left(T.Pointed);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.right = \n/*#__PURE__*/\nTT.right(T.Pointed);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.both = \n/*#__PURE__*/\nTT.both(T.Pointed);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.rightTask = \n/*#__PURE__*/\nTT.rightF(T.Functor);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.leftTask = \n/*#__PURE__*/\nTT.leftF(T.Functor);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.rightIO = \n/*#__PURE__*/\nfunction_1.flow(T.fromIO, exports.rightTask);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.leftIO = \n/*#__PURE__*/\nfunction_1.flow(T.fromIO, exports.leftTask);\n/**\n * @category constructors\n * @since 2.4.0\n */\nexports.fromIOEither = \n/*#__PURE__*/\nT.fromIO;\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromIO = exports.rightIO;\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.fromTask = exports.rightTask;\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromEither = T.of;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = \n/*#__PURE__*/\nTT.match(T.Functor);\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchW = exports.match;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.matchE = \n/*#__PURE__*/\nTT.matchE(T.Monad);\n/**\n * Alias of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.4.0\n */\nexports.fold = exports.matchE;\n/**\n * Less strict version of [`matchE`](#matche).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.matchEW = exports.fold;\n/**\n * Alias of [`matchEW`](#matchew).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchEW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.swap = \n/*#__PURE__*/\nTT.swap(T.Functor);\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.4.0\n */\nexports.map = \n/*#__PURE__*/\nTT.map(T.Functor);\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.4.0\n */\nexports.bimap = \n/*#__PURE__*/\nTT.bimap(T.Functor);\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.4.0\n */\nexports.mapLeft = \n/*#__PURE__*/\nTT.mapLeft(T.Functor);\n/**\n * @category Pointed\n * @since 2.7.0\n */\nexports.of = exports.right;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.4.0\n */\nexports.URI = 'TaskThese';\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getApply = function (A, S) {\n    var ap = TT.ap(A, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return function_1.pipe(fab, ap(fa)); }\n    };\n};\nexports.getApply = getApply;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicative(A, S) {\n    var ap = exports.getApply(A, S).ap;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: ap,\n        of: exports.of\n    };\n}\nexports.getApplicative = getApplicative;\n/**\n * @category instances\n * @since 2.10.0\n */\nfunction getChain(S) {\n    var A = exports.getApply(T.ApplicativePar, S);\n    var chain = TT.chain(T.Monad, S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        chain: function (ma, f) { return function_1.pipe(ma, chain(f)); }\n    };\n}\nexports.getChain = getChain;\n/**\n * @category instances\n * @since 2.4.0\n */\nfunction getMonad(S) {\n    var A = getApplicative(T.ApplicativePar, S);\n    var C = getChain(S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        of: exports.of,\n        chain: C.chain,\n        fromIO: exports.fromIO,\n        fromTask: exports.fromTask\n    };\n}\nexports.getMonad = getMonad;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: exports.fromEither\n};\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromPredicate = \n/*#__PURE__*/\nFromEither_1.fromPredicate(exports.FromEither);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromIO = {\n    URI: exports.URI,\n    fromIO: exports.fromIO\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromIOK = \n/*#__PURE__*/\nFromIO_1.fromIOK(exports.FromIO);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromTask = {\n    URI: exports.URI,\n    fromIO: exports.fromIO,\n    fromTask: exports.fromTask\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromTaskK = \n/*#__PURE__*/\nFromTask_1.fromTaskK(exports.FromTask);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexports.toTuple2 = \n/*#__PURE__*/\nTT.toTuple2(T.Functor);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`Functor`](#functor) instead.\n *\n * @category instances\n * @since 2.7.0\n * @deprecated\n */\nexports.functorTaskThese = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Use [`Bifunctor`](#bifunctor) instead.\n *\n * @category instances\n * @since 2.7.0\n * @deprecated\n */\nexports.bifunctorTaskThese = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Use [`toTuple2`](#totuple2) instead.\n *\n * @since 2.4.0\n * @deprecated\n */\nvar toTuple = function (e, a) {\n    return exports.toTuple2(function () { return e; }, function () { return a; });\n};\nexports.toTuple = toTuple;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.4.0\n * @deprecated\n */\nexports.taskThese = {\n    URI: exports.URI,\n    map: _map,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.\n *\n * @category instances\n * @since 2.4.0\n * @deprecated\n */\nvar getSemigroup = function (SE, SA) {\n    return Apply_1.getApplySemigroup(T.ApplySeq)(TH.getSemigroup(SE, SA));\n};\nexports.getSemigroup = getSemigroup;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.these = exports.toTuple = exports.toTuple2 = exports.fromOptionK = exports.fromOption = exports.FromEither = exports.Traversable = exports.Foldable = exports.Bifunctor = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.of = exports.sequence = exports.traverse = exports.reduceRight = exports.foldMap = exports.reduce = exports.map = exports.mapLeft = exports.bimap = exports.fromOptions = exports.getRightOnly = exports.getLeftOnly = exports.rightOrBoth = exports.leftOrBoth = exports.isBoth = exports.isRight = exports.isLeft = exports.getRight = exports.getLeft = exports.getMonad = exports.getChain = exports.getApplicative = exports.getApply = exports.getSemigroup = exports.getEq = exports.getShow = exports.swap = exports.fold = exports.match = exports.foldW = exports.matchW = exports.both = exports.right = exports.left = void 0;\nvar Eq_1 = require(\"./Eq\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Option_1 = require(\"./Option\");\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction left(left) {\n    return { _tag: 'Left', left: left };\n}\nexports.left = left;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction right(right) {\n    return { _tag: 'Right', right: right };\n}\nexports.right = right;\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction both(left, right) {\n    return { _tag: 'Both', left: left, right: right };\n}\nexports.both = both;\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight, onBoth) { return function (fa) {\n    switch (fa._tag) {\n        case 'Left':\n            return onLeft(fa.left);\n        case 'Right':\n            return onRight(fa.right);\n        case 'Both':\n            return onBoth(fa.left, fa.right);\n    }\n}; };\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * @category destructors\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * @category combinators\n * @since 2.4.0\n */\nexports.swap = exports.match(right, left, function (e, a) { return both(a, e); });\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(SE, SA) {\n    return {\n        show: exports.match(function (l) { return \"left(\" + SE.show(l) + \")\"; }, function (a) { return \"right(\" + SA.show(a) + \")\"; }, function (l, a) { return \"both(\" + SE.show(l) + \", \" + SA.show(a) + \")\"; })\n    };\n}\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(EE, EA) {\n    return Eq_1.fromEquals(function (x, y) {\n        return isLeft(x)\n            ? isLeft(y) && EE.equals(x.left, y.left)\n            : isRight(x)\n                ? isRight(y) && EA.equals(x.right, y.right)\n                : isBoth(y) && EE.equals(x.left, y.left) && EA.equals(x.right, y.right);\n    });\n}\nexports.getEq = getEq;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getSemigroup(SE, SA) {\n    return {\n        concat: function (x, y) {\n            return isLeft(x)\n                ? isLeft(y)\n                    ? left(SE.concat(x.left, y.left))\n                    : isRight(y)\n                        ? both(x.left, y.right)\n                        : both(SE.concat(x.left, y.left), y.right)\n                : isRight(x)\n                    ? isLeft(y)\n                        ? both(y.left, x.right)\n                        : isRight(y)\n                            ? right(SA.concat(x.right, y.right))\n                            : both(y.left, SA.concat(x.right, y.right))\n                    : isLeft(y)\n                        ? both(SE.concat(x.left, y.left), x.right)\n                        : isRight(y)\n                            ? both(x.left, SA.concat(x.right, y.right))\n                            : both(SE.concat(x.left, y.left), SA.concat(x.right, y.right));\n        }\n    };\n}\nexports.getSemigroup = getSemigroup;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getApply = function (S) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return isLeft(fab)\n            ? isLeft(fa)\n                ? left(S.concat(fab.left, fa.left))\n                : isRight(fa)\n                    ? left(fab.left)\n                    : left(S.concat(fab.left, fa.left))\n            : isRight(fab)\n                ? isLeft(fa)\n                    ? left(fa.left)\n                    : isRight(fa)\n                        ? right(fab.right(fa.right))\n                        : both(fa.left, fab.right(fa.right))\n                : isLeft(fa)\n                    ? left(S.concat(fab.left, fa.left))\n                    : isRight(fa)\n                        ? both(fab.left, fab.right(fa.right))\n                        : both(S.concat(fab.left, fa.left), fab.right(fa.right));\n    }\n}); };\nexports.getApply = getApply;\n/**\n * @category instances\n * @since 2.7.0\n */\nfunction getApplicative(S) {\n    var A = exports.getApply(S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        of: exports.of\n    };\n}\nexports.getApplicative = getApplicative;\n/**\n * @category instances\n * @since 2.10.0\n */\nfunction getChain(S) {\n    var A = exports.getApply(S);\n    var chain = function (ma, f) {\n        if (isLeft(ma)) {\n            return ma;\n        }\n        if (isRight(ma)) {\n            return f(ma.right);\n        }\n        var fb = f(ma.right);\n        return isLeft(fb)\n            ? left(S.concat(ma.left, fb.left))\n            : isRight(fb)\n                ? both(ma.left, fb.right)\n                : both(S.concat(ma.left, fb.left), fb.right);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        chain: chain\n    };\n}\nexports.getChain = getChain;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getMonad(S) {\n    var C = getChain(S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        ap: C.ap,\n        chain: C.chain,\n        throwError: left\n    };\n}\nexports.getMonad = getMonad;\n/**\n * Returns an `E` value if possible\n *\n * @example\n * import { getLeft, left, right, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(both('a', 1)), some('a'))\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction getLeft(fa) {\n    return isLeft(fa) ? Option_1.some(fa.left) : isRight(fa) ? Option_1.none : Option_1.some(fa.left);\n}\nexports.getLeft = getLeft;\n/**\n * Returns an `A` value if possible\n *\n * @example\n * import { getRight, left, right, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(getRight(left('a')), none)\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(both('a', 1)), some(1))\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction getRight(fa) {\n    return isLeft(fa) ? Option_1.none : isRight(fa) ? Option_1.some(fa.right) : Option_1.some(fa.right);\n}\nexports.getRight = getRight;\n/**\n * Returns `true` if the these is an instance of `Left`, `false` otherwise\n *\n * @category guards\n * @since 2.0.0\n */\nfunction isLeft(fa) {\n    return fa._tag === 'Left';\n}\nexports.isLeft = isLeft;\n/**\n * Returns `true` if the these is an instance of `Right`, `false` otherwise\n *\n * @category guards\n * @since 2.0.0\n */\nfunction isRight(fa) {\n    return fa._tag === 'Right';\n}\nexports.isRight = isRight;\n/**\n * Returns `true` if the these is an instance of `Both`, `false` otherwise\n *\n * @category guards\n * @since 2.0.0\n */\nfunction isBoth(fa) {\n    return fa._tag === 'Both';\n}\nexports.isBoth = isBoth;\n// TODO: make lazy in v3\n/**\n * @example\n * import { leftOrBoth, left, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(leftOrBoth('a')(none), left('a'))\n * assert.deepStrictEqual(leftOrBoth('a')(some(1)), both('a', 1))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction leftOrBoth(e) {\n    return function (ma) { return (Option_1.isNone(ma) ? left(e) : both(e, ma.value)); };\n}\nexports.leftOrBoth = leftOrBoth;\n// TODO: make lazy in v3\n/**\n * @example\n * import { rightOrBoth, right, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(rightOrBoth(1)(none), right(1))\n * assert.deepStrictEqual(rightOrBoth(1)(some('a')), both('a', 1))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction rightOrBoth(a) {\n    return function (me) { return (Option_1.isNone(me) ? right(a) : both(me.value, a)); };\n}\nexports.rightOrBoth = rightOrBoth;\n/**\n * Returns the `E` value if and only if the value is constructed with `Left`\n *\n * @example\n * import { getLeftOnly, left, right, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(getLeftOnly(left('a')), some('a'))\n * assert.deepStrictEqual(getLeftOnly(right(1)), none)\n * assert.deepStrictEqual(getLeftOnly(both('a', 1)), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction getLeftOnly(fa) {\n    return isLeft(fa) ? Option_1.some(fa.left) : Option_1.none;\n}\nexports.getLeftOnly = getLeftOnly;\n/**\n * Returns the `A` value if and only if the value is constructed with `Right`\n *\n * @example\n * import { getRightOnly, left, right, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(getRightOnly(left('a')), none)\n * assert.deepStrictEqual(getRightOnly(right(1)), some(1))\n * assert.deepStrictEqual(getRightOnly(both('a', 1)), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nfunction getRightOnly(fa) {\n    return isRight(fa) ? Option_1.some(fa.right) : Option_1.none;\n}\nexports.getRightOnly = getRightOnly;\n/**\n * Takes a pair of `Option`s and attempts to create a `These` from them\n *\n * @example\n * import { fromOptions, left, right, both } from 'fp-ts/These'\n * import { none, some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromOptions(none, none), none)\n * assert.deepStrictEqual(fromOptions(some('a'), none), some(left('a')))\n * assert.deepStrictEqual(fromOptions(none, some(1)), some(right(1)))\n * assert.deepStrictEqual(fromOptions(some('a'), some(1)), some(both('a', 1)))\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction fromOptions(fe, fa) {\n    return Option_1.isNone(fe)\n        ? Option_1.isNone(fa)\n            ? Option_1.none\n            : Option_1.some(right(fa.value))\n        : Option_1.isNone(fa)\n            ? Option_1.some(left(fe.value))\n            : Option_1.some(both(fe.value, fa.value));\n}\nexports.fromOptions = fromOptions;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : isRight(fa) ? right(g(fa.right)) : both(f(fa.left), g(fa.right));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : isBoth(fa) ? both(f(fa.left), fa.right) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : isRight(fa) ? right(f(fa.right)) : both(fa.left, f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : isRight(fa) ? f(b, fa.right) : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : isRight(fa) ? f(fa.right) : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : isRight(fa) ? f(fa.right, b) : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) { return function (f) { return function (ta) {\n    return isLeft(ta) ? F.of(ta) : isRight(ta) ? F.map(f(ta.right), right) : F.map(f(ta.right), function (b) { return both(ta.left, b); });\n}; }; };\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return isLeft(ta) ? F.of(ta) : isRight(ta) ? F.map(ta.right, right) : F.map(ta.right, function (b) { return both(ta.left, b); });\n}; };\nexports.sequence = sequence;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexports.of = right;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'These';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @category constructors\n * @since 2.10.0\n */\nexports.fromOption = \n/*#__PURE__*/\nFromEither_1.fromOption(exports.FromEither);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/\nFromEither_1.fromOptionK(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import { toTuple2, left, right, both } from 'fp-ts/These'\n *\n * assert.deepStrictEqual(toTuple2(() => 'a', () => 1)(left('b')), ['b', 1])\n * assert.deepStrictEqual(toTuple2(() => 'a', () => 1)(right(2)), ['a', 2])\n * assert.deepStrictEqual(toTuple2(() => 'a', () => 1)(both('b', 2)), ['b', 2])\n *\n * @since 2.10.0\n */\nvar toTuple2 = function (e, a) { return function (fa) {\n    return isLeft(fa) ? [fa.left, a()] : isRight(fa) ? [e(), fa.right] : [fa.left, fa.right];\n}; };\nexports.toTuple2 = toTuple2;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`toTuple2`](#totuple2) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nvar toTuple = function (e, a) {\n    return exports.toTuple2(function () { return e; }, function () { return a; });\n};\nexports.toTuple = toTuple;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.these = {\n    URI: exports.URI,\n    map: _map,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTheseM = exports.toTuple2 = exports.swap = exports.matchE = exports.match = exports.mapLeft = exports.bimap = exports.chain = exports.ap = exports.map = exports.leftF = exports.rightF = exports.both = exports.left = exports.right = void 0;\n/**\n * @since 2.4.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar T = __importStar(require(\"./These\"));\nfunction right(F) {\n    return function_1.flow(T.right, F.of);\n}\nexports.right = right;\nfunction left(F) {\n    return function_1.flow(T.left, F.of);\n}\nexports.left = left;\nfunction both(F) {\n    return function_1.flow(T.both, F.of);\n}\nexports.both = both;\nfunction rightF(F) {\n    return function (fa) { return F.map(fa, T.right); };\n}\nexports.rightF = rightF;\nfunction leftF(F) {\n    return function (fe) { return F.map(fe, T.left); };\n}\nexports.leftF = leftF;\nfunction map(F) {\n    return Functor_1.map(F, T.Functor);\n}\nexports.map = map;\nfunction ap(F, S) {\n    return Apply_1.ap(F, T.getApply(S));\n}\nexports.ap = ap;\nfunction chain(M, S) {\n    var _left = left(M);\n    return function (f) { return function (ma) {\n        return M.chain(ma, T.match(_left, f, function (e1, a) {\n            return M.map(f(a), T.match(function (e2) { return T.left(S.concat(e1, e2)); }, function (b) { return T.both(e1, b); }, function (e2, b) { return T.both(S.concat(e1, e2), b); }));\n        }));\n    }; };\n}\nexports.chain = chain;\nfunction bimap(F) {\n    return function (f, g) { return function (fea) { return F.map(fea, T.bimap(f, g)); }; };\n}\nexports.bimap = bimap;\nfunction mapLeft(F) {\n    return function (f) { return function (fea) { return F.map(fea, T.mapLeft(f)); }; };\n}\nexports.mapLeft = mapLeft;\nfunction match(F) {\n    return function (onLeft, onRight, onBoth) { return function (ma) { return F.map(ma, T.match(onLeft, onRight, onBoth)); }; };\n}\nexports.match = match;\nfunction matchE(M) {\n    return function (onLeft, onRight, onBoth) { return function (ma) { return M.chain(ma, T.match(onLeft, onRight, onBoth)); }; };\n}\nexports.matchE = matchE;\nfunction swap(F) {\n    return function (ma) { return F.map(ma, T.swap); };\n}\nexports.swap = swap;\nfunction toTuple2(F) {\n    return function (e, a) { return function (fa) { return F.map(fa, T.toTuple2(e, a)); }; };\n}\nexports.toTuple2 = toTuple2;\n/** @deprecated */\n/* istanbul ignore next */\nfunction getTheseM(M) {\n    var _map = map(M);\n    var _bimap = bimap(M);\n    var _mapLeft = mapLeft(M);\n    var _fold = matchE(M);\n    var _toTuple2 = toTuple2(M);\n    var of = right(M);\n    var mapT = function (fa, f) { return function_1.pipe(fa, _map(f)); };\n    return {\n        map: mapT,\n        bimap: function (fea, f, g) { return function_1.pipe(fea, _bimap(f, g)); },\n        mapLeft: function (fea, f) { return function_1.pipe(fea, _mapLeft(f)); },\n        fold: function (fa, onLeft, onRight, onBoth) { return function_1.pipe(fa, _fold(onLeft, onRight, onBoth)); },\n        swap: swap(M),\n        rightM: rightF(M),\n        leftM: leftF(M),\n        left: left(M),\n        right: right(M),\n        both: both(M),\n        toTuple: function (fa, e, a) {\n            return function_1.pipe(fa, _toTuple2(function () { return e; }, function () { return a; }));\n        },\n        getMonad: function (S) {\n            var _ap = ap(M, S);\n            var _chain = chain(M, S);\n            return {\n                _E: undefined,\n                map: mapT,\n                of: of,\n                ap: function (fab, fa) { return function_1.pipe(fab, _ap(fa)); },\n                chain: function (ma, f) { return function_1.pipe(ma, _chain(f)); }\n            };\n        }\n    };\n}\nexports.getTheseM = getTheseM;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.traced = exports.flap = exports.Functor = exports.URI = exports.map = exports.getComonad = exports.censor = exports.listens = exports.listen = exports.tracks = void 0;\nvar Functor_1 = require(\"./Functor\");\nvar function_1 = require(\"./function\");\n// TODO: curry in v3\n/**\n * Extracts a value at a relative position which depends on the current value.\n *\n * @since 2.0.0\n */\nfunction tracks(M, f) {\n    return function (wa) { return wa(f(wa(M.empty))); };\n}\nexports.tracks = tracks;\n/**\n * Get the current position\n *\n * @since 2.0.0\n */\nfunction listen(wa) {\n    return function (e) { return [wa(e), e]; };\n}\nexports.listen = listen;\n/**\n * Get a value which depends on the current position\n *\n * @since 2.0.0\n */\nfunction listens(f) {\n    return function (wa) { return function (e) { return [wa(e), f(e)]; }; };\n}\nexports.listens = listens;\n/**\n * Apply a function to the current position\n *\n * @since 2.0.0\n */\nfunction censor(f) {\n    return function (wa) { return function (e) { return wa(f(e)); }; };\n}\nexports.censor = censor;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getComonad(monoid) {\n    function extend(wa, f) {\n        return function (p1) { return f(function (p2) { return wa(monoid.concat(p1, p2)); }); };\n    }\n    function extract(wa) {\n        return wa(monoid.empty);\n    }\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        extend: extend,\n        extract: extract\n    };\n}\nexports.getComonad = getComonad;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return function (p) { return f(fa(p)); }; }; };\nexports.map = map;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Traced';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`Functor`](#functor) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.traced = exports.Functor;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTraversableComposition = exports.sequence = exports.traverse = void 0;\nvar Foldable_1 = require(\"./Foldable\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction traverse(T, G) {\n    return function (F) {\n        var traverseT = T.traverse(F);\n        var traverseG = G.traverse(F);\n        return function (f) { return function (fga) { return traverseT(fga, function (ga) { return traverseG(ga, f); }); }; };\n    };\n}\nexports.traverse = traverse;\nfunction sequence(T, G) {\n    return function (F) {\n        var sequenceT = T.sequence(F);\n        var sequenceG = G.sequence(F);\n        return function (fgha) { return sequenceT(T.map(fgha, sequenceG)); };\n    };\n}\nexports.sequence = sequence;\n/** @deprecated */\nfunction getTraversableComposition(F, G) {\n    var map = Functor_1.getFunctorComposition(F, G).map;\n    var FC = Foldable_1.getFoldableComposition(F, G);\n    var _traverse = traverse(F, G);\n    var _sequence = sequence(F, G);\n    return {\n        map: map,\n        reduce: FC.reduce,\n        foldMap: FC.foldMap,\n        reduceRight: FC.reduceRight,\n        traverse: function (H) {\n            var traverseH = _traverse(H);\n            return function (fga, f) { return function_1.pipe(fga, traverseH(f)); };\n        },\n        sequence: function (H) {\n            var sequenceH = _sequence(H);\n            return function (fgha) { return function_1.pipe(fgha, sequenceH); };\n        }\n    };\n}\nexports.getTraversableComposition = getTraversableComposition;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tree = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Traversable = exports.Foldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.URI = exports.of = exports.sequence = exports.traverse = exports.extract = exports.reduceRight = exports.foldMap = exports.reduce = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.fold = exports.elem = exports.unfoldForestM = exports.unfoldTreeM = exports.unfoldForest = exports.unfoldTree = exports.drawTree = exports.drawForest = exports.getEq = exports.getShow = exports.make = void 0;\nvar Apply_1 = require(\"./Apply\");\nvar A = __importStar(require(\"./Array\"));\nvar Eq_1 = require(\"./Eq\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar Chain_1 = require(\"./Chain\");\n/**\n * @category constructors\n * @since 2.0.0\n */\nfunction make(value, forest) {\n    if (forest === void 0) { forest = []; }\n    return {\n        value: value,\n        forest: forest\n    };\n}\nexports.make = make;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getShow(S) {\n    var show = function (t) {\n        return A.isEmpty(t.forest)\n            ? \"make(\" + S.show(t.value) + \")\"\n            : \"make(\" + S.show(t.value) + \", [\" + t.forest.map(show).join(', ') + \"])\";\n    };\n    return {\n        show: show\n    };\n}\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getEq(E) {\n    var SA;\n    var R = Eq_1.fromEquals(function (x, y) { return E.equals(x.value, y.value) && SA.equals(x.forest, y.forest); });\n    SA = A.getEq(R);\n    return R;\n}\nexports.getEq = getEq;\nvar draw = function (indentation, forest) {\n    var r = '';\n    var len = forest.length;\n    var tree;\n    for (var i = 0; i < len; i++) {\n        tree = forest[i];\n        var isLast = i === len - 1;\n        r += indentation + (isLast ? '└' : '├') + '─ ' + tree.value;\n        r += draw(indentation + (len > 1 && !isLast ? '│  ' : '   '), tree.forest);\n    }\n    return r;\n};\n/**\n * Neat 2-dimensional drawing of a forest\n *\n * @since 2.0.0\n */\nfunction drawForest(forest) {\n    return draw('\\n', forest);\n}\nexports.drawForest = drawForest;\n/**\n * Neat 2-dimensional drawing of a tree\n *\n * @example\n * import { make, drawTree } from 'fp-ts/Tree'\n *\n * const fa = make('a', [\n *   make('b'),\n *   make('c'),\n *   make('d', [make('e'), make('f')])\n * ])\n *\n * assert.strictEqual(drawTree(fa), `a\n * ├─ b\n * ├─ c\n * └─ d\n *    ├─ e\n *    └─ f`)\n *\n *\n * @since 2.0.0\n */\nfunction drawTree(tree) {\n    return tree.value + drawForest(tree.forest);\n}\nexports.drawTree = drawTree;\n/**\n * Build a (possibly infinite) tree from a seed value in breadth-first order.\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction unfoldTree(b, f) {\n    var _a = f(b), a = _a[0], bs = _a[1];\n    return { value: a, forest: unfoldForest(bs, f) };\n}\nexports.unfoldTree = unfoldTree;\n/**\n * Build a (possibly infinite) forest from a list of seed values in breadth-first order.\n *\n * @category constructors\n * @since 2.0.0\n */\nfunction unfoldForest(bs, f) {\n    return bs.map(function (b) { return unfoldTree(b, f); });\n}\nexports.unfoldForest = unfoldForest;\nfunction unfoldTreeM(M) {\n    var unfoldForestMM = unfoldForestM(M);\n    return function (b, f) { return M.chain(f(b), function (_a) {\n        var a = _a[0], bs = _a[1];\n        return M.map(unfoldForestMM(bs, f), function (ts) { return ({ value: a, forest: ts }); });\n    }); };\n}\nexports.unfoldTreeM = unfoldTreeM;\nfunction unfoldForestM(M) {\n    var traverseM = A.traverse(M);\n    return function (bs, f) {\n        return function_1.pipe(bs, traverseM(function (b) { return unfoldTreeM(M)(b, f); }));\n    };\n}\nexports.unfoldForestM = unfoldForestM;\n// TODO: curry in v3\n/**\n * @since 2.0.0\n */\nfunction elem(E) {\n    var go = function (a, fa) {\n        if (E.equals(a, fa.value)) {\n            return true;\n        }\n        return fa.forest.some(function (tree) { return go(a, tree); });\n    };\n    return go;\n}\nexports.elem = elem;\n/**\n * Fold a tree into a \"summary\" value in depth-first order.\n *\n * For each node in the tree, apply `f` to the `value` and the result of applying `f` to each `forest`.\n *\n * This is also known as the catamorphism on trees.\n *\n * @example\n * import { fold, make } from 'fp-ts/Tree'\n * import { concatAll } from 'fp-ts/Monoid'\n * import { MonoidSum } from 'fp-ts/number'\n *\n * const t = make(1, [make(2), make(3)])\n *\n * const sum = concatAll(MonoidSum)\n *\n * // Sum the values in a tree:\n * assert.deepStrictEqual(fold((a: number, bs: Array<number>) => a + sum(bs))(t), 6)\n *\n * // Find the maximum value in the tree:\n * assert.deepStrictEqual(fold((a: number, bs: Array<number>) => bs.reduce((b, acc) => Math.max(b, acc), a))(t), 3)\n *\n * // Count the number of leaves in the tree:\n * assert.deepStrictEqual(fold((_: number, bs: Array<number>) => (bs.length === 0 ? 1 : sum(bs)))(t), 2)\n *\n * @category destructors\n * @since 2.6.0\n */\nfunction fold(f) {\n    var go = function (tree) { return f(tree.value, tree.forest.map(go)); };\n    return go;\n}\nexports.fold = fold;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar _ap = function (fab, fa) {\n    return function_1.pipe(fab, exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }));\n};\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nvar ap = function (fa) { return function (fab) { return _ap(fab, fa); }; };\nexports.ap = ap;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nvar chain = function (f) { return function (ma) {\n    var _a = f(ma.value), value = _a.value, forest = _a.forest;\n    var concat = A.getMonoid().concat;\n    return {\n        value: value,\n        forest: concat(forest, ma.forest.map(exports.chain(f)))\n    };\n}; };\nexports.chain = chain;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) { return ({\n    value: f(wa),\n    forest: wa.forest.map(exports.extend(f))\n}); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.flatten = \n/*#__PURE__*/\nexports.chain(function_1.identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return ({\n    value: f(fa.value),\n    forest: fa.forest.map(exports.map(f))\n}); }; };\nexports.map = map;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    var r = f(b, fa.value);\n    var len = fa.forest.length;\n    for (var i = 0; i < len; i++) {\n        r = function_1.pipe(fa.forest[i], exports.reduce(r, f));\n    }\n    return r;\n}; };\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) {\n    return exports.reduce(M.empty, function (acc, a) { return M.concat(acc, f(a)); });\n}; };\nexports.foldMap = foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    var r = b;\n    var len = fa.forest.length;\n    for (var i = len - 1; i >= 0; i--) {\n        r = function_1.pipe(fa.forest[i], exports.reduceRight(r, f));\n    }\n    return f(fa.value, r);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category Extract\n * @since 2.6.2\n */\nvar extract = function (wa) { return wa.value; };\nexports.extract = extract;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseF = A.traverse(F);\n    var out = function (f) { return function (ta) {\n        return F.ap(F.map(f(ta.value), function (value) { return function (forest) { return ({\n            value: value,\n            forest: forest\n        }); }; }), function_1.pipe(ta.forest, traverseF(out(f))));\n    }; };\n    return out;\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return exports.traverse(F)(function_1.identity); };\nexports.sequence = sequence;\n/**\n * @category Pointed\n * @since 2.7.0\n */\nvar of = function (a) { return make(a); };\nexports.of = of;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Tree';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apFirst = \n/*#__PURE__*/\nApply_1.apFirst(exports.Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.apSecond = \n/*#__PURE__*/\nApply_1.apSecond(exports.Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/\nChain_1.chainFirst(exports.Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nexports.bindTo = \n/*#__PURE__*/\nFunctor_1.bindTo(exports.Functor);\n/**\n * @since 2.8.0\n */\nexports.bind = \n/*#__PURE__*/\nChain_1.bind(exports.Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexports.apS = \n/*#__PURE__*/\nApply_1.apS(exports.Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.tree = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    extract: exports.extract,\n    extend: _extend\n};\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tuple = exports.mapLeft = exports.map = exports.Traversable = exports.Foldable = exports.Comonad = exports.Semigroupoid = exports.Bifunctor = exports.flap = exports.Functor = exports.URI = exports.sequence = exports.traverse = exports.reduceRight = exports.reduce = exports.foldMap = exports.extract = exports.duplicate = exports.extend = exports.compose = exports.mapSnd = exports.mapFst = exports.bimap = exports.getChainRec = exports.getMonad = exports.getChain = exports.getApplicative = exports.getApply = exports.swap = exports.snd = exports.fst = void 0;\nvar RT = __importStar(require(\"./ReadonlyTuple\"));\nvar Functor_1 = require(\"./Functor\");\nvar function_1 = require(\"./function\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category destructors\n * @since 2.0.0\n */\nexports.fst = RT.fst;\n/**\n * @category destructors\n * @since 2.0.0\n */\nexports.snd = RT.snd;\n/**\n * @category combinators\n * @since 2.0.0\n */\nvar swap = function (ea) { return [exports.snd(ea), exports.fst(ea)]; };\nexports.swap = swap;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getApply(S) {\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: function (fab, fa) { return [exports.fst(fab)(exports.fst(fa)), S.concat(exports.snd(fab), exports.snd(fa))]; }\n    };\n}\nexports.getApply = getApply;\nvar of = function (M) { return function (a) {\n    return [a, M.empty];\n}; };\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getApplicative(M) {\n    var A = getApply(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: A.map,\n        ap: A.ap,\n        of: of(M)\n    };\n}\nexports.getApplicative = getApplicative;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getChain(S) {\n    var A = getApply(S);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: A.map,\n        ap: A.ap,\n        chain: function (ma, f) {\n            var _a = f(exports.fst(ma)), b = _a[0], s = _a[1];\n            return [b, S.concat(exports.snd(ma), s)];\n        }\n    };\n}\nexports.getChain = getChain;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getMonad(M) {\n    var C = getChain(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: C.map,\n        ap: C.ap,\n        chain: C.chain,\n        of: of(M)\n    };\n}\nexports.getMonad = getMonad;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getChainRec(M) {\n    var chainRec = function (a, f) {\n        var result = f(a);\n        var acc = M.empty;\n        var s = exports.fst(result);\n        while (s._tag === 'Left') {\n            acc = M.concat(acc, exports.snd(result));\n            result = f(s.left);\n            s = exports.fst(result);\n        }\n        return [s.right, M.concat(acc, exports.snd(result))];\n    };\n    var C = getChain(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: C.map,\n        ap: C.ap,\n        chain: C.chain,\n        chainRec: chainRec\n    };\n}\nexports.getChainRec = getChainRec;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _compose = function (bc, ab) { return function_1.pipe(bc, exports.compose(ab)); };\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.mapFst(f)); };\n/* istanbul ignore next */\nvar _bimap = function (fa, f, g) { return function_1.pipe(fa, exports.bimap(f, g)); };\n/* istanbul ignore next */\nvar _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapSnd(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\n/* istanbul ignore next */\nfunction _traverse(F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n}\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category Bifunctor\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) { return [g(exports.fst(fa)), f(exports.snd(fa))]; }; };\nexports.bimap = bimap;\n/**\n * Map a function over the first component of a `Tuple`.\n *\n * This is the `map` operation of the `Functor` instance.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar mapFst = function (f) { return function (fa) { return [f(exports.fst(fa)), exports.snd(fa)]; }; };\nexports.mapFst = mapFst;\n/**\n * Map a function over the second component of a `Tuple`.\n *\n * This is the `mapLeft` operation of the `Bifunctor` instance.\n *\n * @category Bifunctor\n * @since 2.10.0\n */\nvar mapSnd = function (f) { return function (fa) { return [exports.fst(fa), f(exports.snd(fa))]; }; };\nexports.mapSnd = mapSnd;\n/**\n * @category Semigroupoid\n * @since 2.0.0\n */\nvar compose = function (ab) { return function (bc) { return [exports.fst(bc), exports.snd(ab)]; }; };\nexports.compose = compose;\n/**\n * @category Extend\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) { return [f(wa), exports.snd(wa)]; }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category Extract\n * @since 2.6.2\n */\nexports.extract = RT.extract;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.foldMap = RT.foldMap;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduce = RT.reduce;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexports.reduceRight = RT.reduceRight;\n/**\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) { return function (ta) { return F.map(f(exports.fst(ta)), function (b) { return [b, exports.snd(ta)]; }); }; };\n};\nexports.traverse = traverse;\n/**\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (fas) {\n    return F.map(exports.fst(fas), function (a) { return [a, exports.snd(fas)]; });\n}; };\nexports.sequence = sequence;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Tuple';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Semigroupoid = {\n    URI: exports.URI,\n    compose: _compose\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Comonad = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend,\n    extract: exports.extract\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`mapFst`](#mapfst) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.map = exports.mapFst;\n/**\n * Use [`mapSnd`](#mapsnd) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexports.mapLeft = exports.mapSnd;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.tuple = {\n    URI: exports.URI,\n    compose: _compose,\n    map: _map,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    extract: exports.extract,\n    extend: _extend,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidationM = void 0;\n/**\n * @since 2.0.0\n */\nvar Applicative_1 = require(\"./Applicative\");\nvar E = __importStar(require(\"./Either\"));\n/** @deprecated */\nfunction getValidationM(S, M) {\n    var A = Applicative_1.getApplicativeComposition(M, E.getApplicativeValidation(S));\n    return {\n        map: A.map,\n        ap: A.ap,\n        of: A.of,\n        chain: function (ma, f) { return M.chain(ma, function (e) { return (E.isLeft(e) ? M.of(E.left(e.left)) : f(e.right)); }); },\n        alt: function (me, that) {\n            return M.chain(me, function (e1) {\n                return E.isRight(e1) ? M.of(e1) : M.map(that(), function (e2) { return (E.isLeft(e2) ? E.left(S.concat(e1.left, e2.left)) : e2); });\n            });\n        }\n    };\n}\nexports.getValidationM = getValidationM;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writer = exports.execWriter = exports.evalWriter = exports.execute = exports.evaluate = exports.flap = exports.Functor = exports.getMonad = exports.getChain = exports.getApplicative = exports.getApply = exports.getPointed = exports.URI = exports.map = exports.censor = exports.listens = exports.pass = exports.listen = exports.tell = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Appends a value to the accumulator\n *\n * @category combinators\n * @since 2.0.0\n */\nvar tell = function (w) { return function () { return [undefined, w]; }; };\nexports.tell = tell;\n/**\n * Modifies the result to include the changes to the accumulator\n *\n * @category combinators\n * @since 2.0.0\n */\nvar listen = function (fa) { return function () {\n    var _a = fa(), a = _a[0], w = _a[1];\n    return [[a, w], w];\n}; };\nexports.listen = listen;\n/**\n * Applies the returned function to the accumulator\n *\n * @category combinators\n * @since 2.0.0\n */\nvar pass = function (fa) { return function () {\n    var _a = fa(), _b = _a[0], a = _b[0], f = _b[1], w = _a[1];\n    return [a, f(w)];\n}; };\nexports.pass = pass;\n/**\n * Projects a value from modifications made to the accumulator during an action\n *\n * @category combinators\n * @since 2.0.0\n */\nvar listens = function (f) { return function (fa) { return function () {\n    var _a = fa(), a = _a[0], w = _a[1];\n    return [[a, f(w)], w];\n}; }; };\nexports.listens = listens;\n/**\n * Modify the final accumulator value by applying a function\n *\n * @category combinators\n * @since 2.0.0\n */\nvar censor = function (f) { return function (fa) { return function () {\n    var _a = fa(), a = _a[0], w = _a[1];\n    return [a, f(w)];\n}; }; };\nexports.censor = censor;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) { return function () {\n    var _a = fa(), a = _a[0], w = _a[1];\n    return [f(a), w];\n}; }; };\nexports.map = map;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexports.URI = 'Writer';\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getPointed = function (M) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    of: function (a) { return function () { return [a, M.empty]; }; }\n}); };\nexports.getPointed = getPointed;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getApply = function (S) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) { return function () {\n        var _a = fab(), f = _a[0], w1 = _a[1];\n        var _b = fa(), a = _b[0], w2 = _b[1];\n        return [f(a), S.concat(w1, w2)];\n    }; }\n}); };\nexports.getApply = getApply;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getApplicative = function (M) {\n    var A = exports.getApply(M);\n    var P = exports.getPointed(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        of: P.of\n    };\n};\nexports.getApplicative = getApplicative;\n/**\n * @category instances\n * @since 2.10.0\n */\nfunction getChain(M) {\n    var A = exports.getApply(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        chain: function (fa, f) { return function () {\n            var _a = fa(), a = _a[0], w1 = _a[1];\n            var _b = f(a)(), b = _b[0], w2 = _b[1];\n            return [b, M.concat(w1, w2)];\n        }; }\n    };\n}\nexports.getChain = getChain;\n/**\n * @category instances\n * @since 2.0.0\n */\nfunction getMonad(M) {\n    var A = exports.getApplicative(M);\n    var C = getChain(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        ap: A.ap,\n        of: A.of,\n        chain: C.chain\n    };\n}\nexports.getMonad = getMonad;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexports.flap = \n/*#_PURE_*/\nFunctor_1.flap(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nvar evaluate = function (fa) { return fa()[0]; };\nexports.evaluate = evaluate;\n/**\n * @since 2.8.0\n */\nvar execute = function (fa) { return fa()[1]; };\nexports.execute = execute;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`evaluate`](#evaluate) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nvar evalWriter = function (fa) { return fa()[0]; };\nexports.evalWriter = evalWriter;\n/**\n * Use [`execute`](#execute) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nvar execWriter = function (fa) { return fa()[1]; };\nexports.execWriter = execWriter;\n/**\n * Use [`Functor`](#functor) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexports.writer = exports.Functor;\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWriterM = void 0;\nfunction getWriterM(M) {\n    var map = function (fa, f) { return function () {\n        return M.map(fa(), function (_a) {\n            var a = _a[0], w = _a[1];\n            return [f(a), w];\n        });\n    }; };\n    return {\n        map: map,\n        evalWriter: function (fa) { return M.map(fa(), function (_a) {\n            var a = _a[0];\n            return a;\n        }); },\n        execWriter: function (fa) { return M.map(fa(), function (_a) {\n            var _ = _a[0], w = _a[1];\n            return w;\n        }); },\n        tell: function (w) { return function () { return M.of([undefined, w]); }; },\n        listen: function (fa) { return function () { return M.map(fa(), function (_a) {\n            var a = _a[0], w = _a[1];\n            return [[a, w], w];\n        }); }; },\n        pass: function (fa) { return function () { return M.map(fa(), function (_a) {\n            var _b = _a[0], a = _b[0], f = _b[1], w = _a[1];\n            return [a, f(w)];\n        }); }; },\n        listens: function (fa, f) { return function () { return M.map(fa(), function (_a) {\n            var a = _a[0], w = _a[1];\n            return [[a, f(w)], w];\n        }); }; },\n        censor: function (fa, f) { return function () { return M.map(fa(), function (_a) {\n            var a = _a[0], w = _a[1];\n            return [a, f(w)];\n        }); }; },\n        getMonad: function (W) {\n            return {\n                _E: undefined,\n                map: map,\n                of: function (a) { return function () { return M.of([a, W.empty]); }; },\n                ap: function (mab, ma) { return function () { return M.chain(mab(), function (_a) {\n                    var f = _a[0], w1 = _a[1];\n                    return M.map(ma(), function (_a) {\n                        var a = _a[0], w2 = _a[1];\n                        return [f(a), W.concat(w1, w2)];\n                    });\n                }); }; },\n                chain: function (ma, f) { return function () { return M.chain(ma(), function (_a) {\n                    var a = _a[0], w1 = _a[1];\n                    return M.map(f(a)(), function (_a) {\n                        var b = _a[0], w2 = _a[1];\n                        return [b, W.concat(w1, w2)];\n                    });\n                }); }; }\n            };\n        }\n    };\n}\nexports.getWriterM = getWriterM;\n"]}